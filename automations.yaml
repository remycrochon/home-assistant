- id: '1610184966825'
  alias: 4_1_2 Volet Boolean Nuit/Jour
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.bh1750_illuminance'' )|float(default=0) >
      states(''input_number.luminosite_seuil_haut'')|float(default=0) and is_state("sun.sun",
      "above_horizon") }}'
    id: nuit->jour
  - platform: template
    value_template: '{{ states(''sensor.bh1750_illuminance'')|float(default=0) < states(''input_number.luminosite_seuil_bas'')|float(default=0)
      and is_state("sun.sun", "below_horizon") }}'
    id: jour->nuit
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: nuit->jour
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.nuit_jour
    - conditions:
      - condition: trigger
        id: jour->nuit
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.nuit_jour
    default: []
  mode: single
- id: '1610371647929'
  alias: 01-1-2 Purge base de données
  description: ''
  trigger:
  - platform: time
    at: 01:30
  condition: []
  action:
  - service: recorder.purge
    data:
      keep_days: 7
      repack: true
  mode: single
- id: '1611218307411'
  alias: 01-1-1 Mode Present/Absent
  description: Passage du mode Presence de Absent ou Vacances à Present
  trigger:
  - platform: state
    entity_id: input_select.presence
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.presence
        state: Vacance
      - condition: state
        entity_id: input_select.presence
        state: Absent
      sequence:
      - service: input_select.select_option
        target:
          entity_id:
          - input_select.volets
        data:
          option: Absent
    - conditions:
      - condition: state
        entity_id: input_select.presence
        state: Present
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.volets
        data:
          option: Auto
    default: []
  mode: single
- id: '1617185147880'
  alias: 3_4_2 Piscine-Notification Alarme Appoint d'eau
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.ev_eau_tps_ouverture_jour
    above: '1.00'
  condition: []
  action:
  - service: notify.telegram
    data:
      message: Temps ouverture supérieur à {{states('sensor.ev_eau_tps_ouverture_jour')}}
        h{{-"\n"-}}{{states("sensor.date_time") }}
      title: Alarme EV Appoint d'eau Piscine
  - service: switch.turn_off
    target:
      entity_id: switch.ev_eau
  mode: single
- id: '1617199790692'
  alias: 3_4_3 Piscine-Notification alarme niveau bas
  description: ' '
  trigger:
  - platform: state
    entity_id: binary_sensor.tp_plein_lsl
    from: 'off'
    to: 'on'
    for: 00:00:10
  condition: []
  action:
  - service: notify.telegram
    data:
      title: ALARME
      message: Niveau bas Piscine
  - service: input_select.select_option
    data:
      option: 'Off'
    target:
      entity_id: input_select.mode_fonctionnement_piscine_test
  - service: notify.telegram
    data:
      message: Niveau bas piscine{{-"\n"-}}{{states("sensor.date_time") }}{{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Piscine Alarme Niveau Bas !!!
  mode: single
- id: '1617968589301'
  alias: '8_1_1 Alarmo  Activation Nuit '
  description: ''
  trigger:
  - platform: time
    at: input_datetime.heure_debut_alarme_porte
  condition: []
  action:
  - service: alarm_control_panel.alarm_arm_night
    target:
      entity_id: alarm_control_panel.alarmo
  mode: single
- id: '1617968698367'
  alias: 8_1_2 Alarmo Desactivation
  description: ''
  trigger:
  - platform: time
    at: input_datetime.heure_fin_alarme_porte
  condition: []
  action:
  - service: alarm_control_panel.alarm_disarm
    target:
      entity_id: alarm_control_panel.alarmo
  mode: single
- id: '1622182531449'
  alias: 3_5_1 Piscine-Volet Ouv/Ferm Horaires
  description: Suivant tranches horaires
  trigger:
  - platform: time
    at: input_datetime.heure_ferm_volet_pisc
    id: ferm
  - platform: time
    at: input_datetime.heure_ouv_volet_pisc
    id: ouv
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ferm
      - condition: state
        entity_id: input_boolean.volet_piscine_auto
        state: 'on'
      sequence:
      - service: script.volet_piscine_fermeture
    - conditions:
      - condition: trigger
        id: ouv
      - condition: state
        entity_id: input_boolean.volet_piscine_auto
        state: 'on'
      sequence:
      - service: script.volet_piscine_ouverture
    default: []
  mode: single
- id: '1624083693650'
  alias: 3_2_1 Piscine-pH Validation Automatismes
  description: 'Valide les automations régulation pH au bout de 1 h de fonctionnement '
  trigger:
  - platform: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    for:
      hours: 0
      minutes: 15
      seconds: 0
    to: 'on'
    from: 'off'
    id: ma_pump
  - platform: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    id: at_pump
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  - platform: state
    entity_id: input_boolean.regul_ph
    id: regule_ph_off
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ma_pump
      - condition: state
        entity_id: input_boolean.regul_ph
        state: 'on'
      sequence:
      - service: automation.turn_on
        target:
          entity_id:
          - automation.piscine_notification_ph
          - automation.3_2_2_piscine_ph_injection_v2
        data: {}
      - service: notify.telegram
        data:
          message: pH sonde= {{states('sensor.ph_stat_median')}} {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Activation Traitement pH !
    - conditions:
      - condition: trigger
        id: at_pump
      sequence:
      - service: automation.turn_off
        target:
          entity_id:
          - automation.piscine_notification_ph
          - automation.3_2_2_piscine_ph_injection_v2
        data: {}
    - conditions:
      - condition: trigger
        id: regule_ph_off
      sequence:
      - service: automation.turn_off
        target:
          entity_id:
          - automation.piscine_notification_ph
          - automation.3_2_2_piscine_ph_injection_v2
        data: {}
    default: []
  mode: single
- id: '1624381456670'
  alias: 3_1_5 Piscine-Pression haute
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.pression_filtre
    above: '1'
    for:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
  condition: []
  action:
  - service: notify.telegram
    data:
      message: Pression Haute = {{states("sensor.pression_piscine_p") }}{{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Piscine Alerte Pression Filtre !!!
  mode: single
- id: '1624864713180'
  alias: 3_3_5 Piscine-Cartouche Chlore
  description: Mémorisation du temps d'utilisation cartouche chlore hedbo- RAZ à la
    main
  trigger:
  - platform: time
    at: '23:50'
  condition: []
  action:
  - service: input_number.set_value
    data_template:
      entity_id: input_number.temps_cartouche_chlore
      value: '{% set a=states(''input_number.temps_cartouche_chlore'')|float %} {%
        set b=states(''sensor.ma_ppe_piscine_jour'')|float %} {{ (a + b)|round(2)
        }}'
  mode: single
- id: '1625162846851'
  alias: 3_3_6 Piscine-Temps utilisation cartouche chlore atteint
  description: ''
  trigger:
  - platform: template
    value_template: '{% set a=states(''input_number.temps_cartouche_chlore'') | float
      %}

      {% set b=states(''input_number.chlore_seuil_max_utilisation'') | float %}

      {{ a > b }}'
  condition: []
  action:
  - service: notify.telegram
    data:
      message: 'Tps Utilisation cart. Chlore = {{states(''input_number.temps_cartouche_chlore'')}}
        h {{-"\n"-}} Temps maxi:  {{states(''input_number.chlore_seuil_max_utilisation'')}}
        h {{-"\n"-}}{{states("sensor.date_time") }}'
      title: Piscine Alerte Cartouche Chlore à changer!!!
  mode: single
- id: '1624811066594'
  alias: 3_3_2 Piscine-Chlore Injection
  description: ''
  trigger:
  - platform: time_pattern
    hours: /1
  condition:
  - condition: template
    value_template: '{% set m=states(''sensor.orp_piscine_orp'') | float %}

      {% set c=states(''input_number.orp_cible'') | float %}

      {{ m < c }}'
  - condition: numeric_state
    entity_id: sensor.orp_piscine_orp
    above: '0'
  - condition: state
    entity_id: input_boolean.regul_orp
    state: 'on'
  action:
  - service: input_number.set_value
    target:
      entity_id: input_number.chlore_duree_inject_s
    data_template:
      value: "{% set m=states('sensor.orp_piscine_orp') | float(default=0) %} {% set
        x=states('input_number.simul_orp') | float(default=0) %} {% set c=states('input_number.orp_cible')
        | float(default=0) %} {% set d=states('input_number.chlore_debit_ppe') | float(default=0)
        %} {% set e=states('input_number.chlore_concentration') | float(default=0)
        %} {% set r=(((c-m)/(e/100))/d)*3600|round(2)|int(default=0) %}  {% if r <
        0 %}\n  {{ 0 }}\n{% else %}\n  {{ (r%60)|int(default=0) }}\n{% endif %}"
  - service: input_number.set_value
    target:
      entity_id: input_number.chlore_duree_inject_mn
    data_template:
      value: "{% set m=states('sensor.orp_piscine_orp') | float(default=0) %} {% set
        y=state_attr(\"sensor.orp_stat\", \"mean\") | float(default=0) %} {% set x=states('input_number.simul_orp')
        | float(default=0) %} {% set c=states('input_number.orp_cible') | float(default=0)
        %} {% set d=states('input_number.chlore_debit_ppe') | float(default=0) %}
        {% set e=states('input_number.chlore_concentration') | float(default=0) %}
        {% set r=(((c-m)/(e/100))/d)*3600|round(2)|int(default=0) %}  {% if r < 0
        %}\n  {{ 0 }}\n{% else %}\n  {{ (r//60)|int(default=0) }}\n{% endif %}"
  - service: switch.turn_on
    target:
      entity_id:
      - switch.ppe_chlore
    data: {}
  - service: notify.telegram
    data:
      message: ORP sonde= {{states('sensor.orp_piscine_orp')}} {{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Piscine Début injection Chlore !!!
  - delay: 00:{{ states('input_number.chlore_duree_inject_mn')|int}}:{{ states('input_number.chlore_duree_inject_s')
      | int }}
  - service: input_number.set_value
    data_template:
      entity_id: input_number.chlore_vol_injecte
      value: '{% set a=states(''input_number.chlore_vol_injecte'')|float %} {% set
        b=states(''input_number.chlore_debit_ppe'')|float %} {% set c=states(''input_number.chlore_duree_inject_s'')|float
        %} {% set d=states(''input_number.chlore_duree_inject_mn'')|float %} {{a+(
        (b*((d*60)+c)/3600))|round(2) }}'
  - service: switch.turn_off
    target:
      entity_id: switch.ppe_chlore
    data: {}
  - service: notify.telegram
    data:
      message: ORP sonde= {{states('sensor.orp_piscine_orp')}}{{-"\n"-}} Vol Injecté
        =  {% set b=states('input_number.chlore_debit_ppe')|float %} {% set c=states('input_number.chlore_duree_inject_s')|float
        %} {% set d=states('input_number.chlore_duree_inject_mn')|float %} {{(b*((d*60)+c)/3600)|round(2)
        }} l {{-"\n"-}}{{states("sensor.date_time") }}
      title: Piscine Fin injection Chlore !!!
  mode: single
- id: '1629296468909'
  alias: 7_1_4 Robot_Stop Pluie
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.vp2_pluviometrie_moyenne
    above: input_number.seuil_pluie_stop_robot
  condition: []
  action:
  - service: vacuum.return_to_base
    target:
      entity_id:
      - vacuum.am435x_awd
    data: {}
  - service: notify.telegram
    data:
      message: Retour Robot à la Base!!{{-"\n"-}} Pluvio Moyenne 12h = {{states('sensor.vp2_pluviometrie_moyenne')}}
        mm {{-"\n"-}} Seuil Stop robot= {{states('input_number.seuil_pluie_stop_robot')}}
        mm {{-"\n"-}}{{states("sensor.date_time") }}
      title: Alerte Meteo Pluie !!!
  - service: notify.telegram
    data:
      message: Retour Robot à la Base!!{{-"\n"-}} Pluvio Moyenne 12h = {{states('sensor.vp2_pluviometrie_moyenne')}}
        mm {{-"\n"-}} Seuil Stop robot= {{states('input_number.seuil_pluie_stop_robot')}}
        mm {{-"\n"-}}{{states("sensor.date_time") }}
      title: Alerte Meteo Pluie !!!
  mode: single
- id: '1629792204535'
  alias: 4_1_4 Volet  Proport_Bureau_droit
  description: Mise à jour Position fermé (=0)
  trigger:
  - platform: state
    entity_id: binary_sensor.volet_buro_droit
    to: 'off'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      entity_id: cover.volet_droit_p
      position: 0
  mode: single
- id: '1632232387237'
  alias: 5_1_1 Reseau Notification Nouvelle IP
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.myip
  condition: []
  action:
  - service: notify.telegram
    data:
      message: 'Nouvelle IP: {{ states("sensor.myip")}} {{-"\n"-}}{{states("sensor.date_time")
        }}'
      title: Réseau:!!!
  - service: notify.telegram
    data:
      message: Nouvelle IP {{ states("sensor.myip")}}
      title: Reseau
  mode: single
- id: '1632989157968'
  alias: 4_1_1 Volet Automatismes
  description: 'Ete/Hiver/Absent '
  trigger:
  - platform: state
    entity_id:
    - input_boolean.nuit_jour
    from: 'on'
    to: 'off'
    id: jour->nuit
    for:
      hours: 0
      minutes: 30
      seconds: 0
  - platform: time
    at: input_datetime.horaire_ete_volet_ouv
    id: heure_ouv
  - platform: time
    at: input_datetime.horaire_ete_volet_ferm
    id: heure_ferm
  - platform: state
    entity_id:
    - input_boolean.nuit_jour
    id: nuit->jour
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Hiv
      - condition: trigger
        id: jour->nuit
      sequence:
      - service: script.fermeture_volet
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Hiv
      - condition: trigger
        id: heure_ouv
      sequence:
      - service: script.ouverture_volet
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Ete
      - condition: trigger
        id: heure_ouv
      sequence:
      - service: script.ouverture_volet
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Ete
      - condition: trigger
        id: heure_ferm
      sequence:
      - service: script.fermeture_volet
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Absent
      - condition: trigger
        id: jour->nuit
      sequence:
      - service: script.fermeture_volet_absent
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Absent
      - condition: trigger
        id: nuit->jour
      sequence:
      - service: script.ouverture_volet_absent
        data: {}
    default: []
  mode: single
- id: '1632995598078'
  alias: 1_2_3 ECS Automatismes
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.ecs_ssol
  - platform: sun
    event: sunrise
    offset: 0
    id: levee_soleil
  - platform: sun
    event: sunset
    offset: 0
    id: couche_soleil
  - platform: state
    entity_id:
    - sensor.linky_ptec
    from: HC..
    to: HP..
    id: HC-HP
  - platform: state
    entity_id:
    - sensor.linky_ptec
    from: HP..
    to: HC..
    id: HP-HC
  - platform: template
    value_template: '{% set temp=states(''sensor.esp126_temp_ecs'') | float(default=0)
      %}

      {% set sbas=states(''input_number.ecs_seuil_bas_temp'') | float(default=0) %}

      {{ temp < sbas }}'
    id: t_bas
  - platform: template
    value_template: '{% set temp=states(''sensor.esp126_temp_ecs'') | float (default=0)
      %}

      {% set shaut=states(''input_number.ecs_seuil_haut_temp'') | float(default=0)
      %}

      {{ temp > shaut }}'
    id: t_haut
  - platform: state
    entity_id:
    - input_boolean.ecs_av_pv
    from: 'on'
    to: 'off'
    id: arret_pv_routeur
  - platform: state
    entity_id:
    - input_boolean.ecs_av_pv
    from: 'off'
    to: 'on'
    id: avect_pv_routeur
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.ecs_ssol
        state: Auto
      - condition: sun
        before: sunrise
        after: sunset
      - condition: numeric_state
        entity_id: sensor.esp126_temp_ecs
        below: input_number.ecs_seuil_bas_temp
      - condition: state
        entity_id: sensor.linky_ptec
        state: HC..
      sequence:
      - service: script.ecs_on
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.ecs_ssol
        state: Auto
      - condition: or
        conditions:
        - condition: trigger
          id: HC-HP
        - condition: numeric_state
          entity_id: sensor.esp126_temp_ecs
          above: input_number.ecs_seuil_haut_temp
      - condition: sun
        before: sunrise
        after: sunset
      sequence:
      - service: script.ecs_off_off
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.ecs_ssol
        state: Auto
      - condition: sun
        before: sunset
        after: sunrise
      - condition: state
        entity_id: input_boolean.ecs_av_pv
        state: 'on'
      sequence:
      - service: script.ecs_off
        data: {}
    - conditions:
      - condition: trigger
        id: arret_pv_routeur
      - condition: state
        entity_id: input_select.ecs_ssol
        state: Auto
      sequence:
      - service: script.ecs_off_off
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.ecs_ssol
        state: At Forcé
      sequence:
      - service: script.ecs_off_off
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.ecs_ssol
        state: Ma Forcée
      sequence:
      - service: script.ecs_on
        data: {}
    default: []
  mode: single
- id: '1633075302563'
  alias: 3_1_2 Piscine-Hors-Gel
  description: ''
  trigger:
  - platform: time_pattern
    hours: /1
  - platform: state
    entity_id: input_boolean.hors_gel_valid
    id: hg_deval
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.vp2_temp_out
        below: input_number.hors_gel_inf_seuil2
      - condition: state
        entity_id: input_select.mode_fonctionnement_piscine
        state: Hiver
      - condition: state
        entity_id: input_boolean.hors_gel_valid
        state: 'on'
      sequence:
      - service: input_select.select_option
        data:
          option: Ma F
        target:
          entity_id: input_select.mode_fonctionnement_piscine
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel Seuil 2 Marc Ppe
      - delay:
          hours: 0
          minutes: 30
          seconds: 0
          milliseconds: 0
      - service: input_select.select_option
        target:
          entity_id: input_select.mode_fonctionnement_piscine
        data:
          option: At F
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - service: input_select.select_option
        target:
          entity_id: input_select.mode_fonctionnement_piscine
        data:
          option: Hiver
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel Seuil 2 Arret Ppe
    - conditions:
      - condition: numeric_state
        entity_id: sensor.vp2_temp_out
        below: input_number.hors_gel_inf_seuil1
      - condition: state
        entity_id: input_select.mode_fonctionnement_piscine
        state: Hiver
      - condition: state
        entity_id: input_boolean.hors_gel_valid
        state: 'on'
      sequence:
      - service: input_select.select_option
        data:
          option: Ma F
        target:
          entity_id: input_select.mode_fonctionnement_piscine
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel Seuil 1 Marc Ppe
      - delay:
          hours: 0
          minutes: 15
          seconds: 0
          milliseconds: 0
      - service: input_select.select_option
        target:
          entity_id: input_select.mode_fonctionnement_piscine
        data:
          option: Hiver
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel Seuil 1 Arret Ppe
    - conditions:
      - condition: trigger
        id: hg_deval
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.mode_fonctionnement_piscine
        data:
          option: Hiver
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel devalidé
    default: []
  mode: restart
  max: 10
- id: '1634204887702'
  alias: 3_2_3 Piscine-pH Notifications
  description: Notifie Ph bas, haut, anormal, bidon bas
  trigger:
  - platform: numeric_state
    entity_id: sensor.ph_stat_median
    below: '6.8'
    above: '0'
    id: ph_bas
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.ph_stat_median
    id: ph_haut
    above: '7.8'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.ph_stat_standard_deviation
    id: ph_mauvais
    above: '0.1'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: state
    entity_id:
    - binary_sensor.ph_niveau_bas_bidon
    id: niv_bas_bidon
    to: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ph_bas
      sequence:
      - service: notify.telegram
        data:
          message: Ph Bas = {{states('sensor.ph_stat_median') }}{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte pH !!!
    - conditions:
      - condition: trigger
        id: ph_haut
      sequence:
      - service: notify.telegram
        data:
          message: Ph Haut = {{states('sensor.ph_stat_median') }}{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte pH !!!
    - conditions:
      - condition: trigger
        id: ph_mauvais
      sequence:
      - service: notify.telegram
        data:
          message: pH Mauvais-sonde à calibrer??{{-"\n"-}} Median = {{states("sensor.ph_stat_median")}}{{-"\n"-}}
            Deviation(S=0.01) = {{states("sensor.ph_stat_standard_deviation")}} {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte pH !!!
    - conditions:
      - condition: trigger
        id: niv_bas_bidon
      sequence:
      - service: notify.telegram
        data:
          message: Volume Restant = {{(states("sensor.ph_volume_restant_bidon"))|round(2)
            }} l{{-"\n"-}}{{states("sensor.date_time") }}
          title: Piscine Alerte niveau Bas Bidon pH !!!
    default: []
  mode: single
- id: '1634222619535'
  alias: 3_1_3 Piscine-Notifications filtration
  description: Notification Debut, Fin filtration et mise à jour du fichier log "conso_piscine.csv"
  trigger:
  - platform: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    from: 'off'
    to: 'on'
    id: ma_ppe
  - platform: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    id: at_ppe
    from: 'on'
    to: 'off'
  - platform: time
    at: '23:59'
    id: minuit
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ma_ppe
      sequence:
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Début Filtration
    - conditions:
      - condition: trigger
        id: at_ppe
      sequence:
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Fin de filtration
    - conditions:
      - condition: trigger
        id: minuit
      sequence:
      - service: notify.telegram
        data:
          message: 'du {{states("sensor.date_time") }} {{-"\n"-}} Temps de filtration:  {{states(''sensor.ma_ppe_piscine_jour'')}}{{-"\n"-}}Conso:
            {{states(''sensor.compteur_energie_piscine_jour_hp_hc'')}} kWh {{-"\n"-}}
            Tps Utilisation cart. Chlore: {{states(''input_number.temps_cartouche_chlore'')}}
            h'
          title: Piscine Rapport Fin de journée
      - service: notify.log_piscine
        data:
          message: ',{{states(''sensor.compteur_energie_piscine_jour_hp_hc'')}},{{states(''sensor.ma_ppe_piscine_jour'')}}'
          title: Rapport jour piscine
    default: []
  mode: single
- id: '1634389653339'
  alias: 3_4_1 Piscine-EV Appoint EAU
  description: 'Appoint EAU uniquement si volet ouvert depuis 15 mn  '
  trigger:
  - platform: state
    entity_id:
    - cover.volet_piscine
    to: open
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: vol_ouv
  - platform: state
    entity_id: input_boolean.ev_eau_piscine
    to: 'on'
    id: valid_ev
    from: 'off'
  - platform: state
    entity_id: input_boolean.ev_eau_piscine
    id: devalid_ev
    to: 'off'
    from: 'on'
  - platform: state
    entity_id: binary_sensor.tp_plein_lsh
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 20
    id: lsh_off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: vol_ouv
      - condition: state
        entity_id: input_boolean.ev_eau_piscine
        state: 'on'
      - condition: state
        entity_id: binary_sensor.tp_plein_lsh
        state: 'on'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.ev_eau
        data: {}
      - service: notify.telegram
        data:
          message: Ouverture EV Eau {{-"\n"-}}{{states("sensor.date_time") }}
          title: Piscine Appoint Eau!
    - conditions:
      - condition: state
        entity_id: switch.ev_eau
        state: 'on'
      - condition: or
        conditions:
        - condition: trigger
          id: devalid_ev
        - condition: trigger
          id: lsh_off
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.ev_eau
        data: {}
      - service: notify.telegram
        data:
          message: Fermeture EV Eau {{-"\n"-}}{{states("sensor.date_time") }}
          title: Piscine Appoint Eau!
    default: []
  mode: single
- id: '1634569261594'
  alias: 2_1_04 Alarme Blueprints Notification Status PAC
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_status_pac
      alert_state: 'off'
      alert_action:
      - service: notify.telegram
        data:
          message: PAC Off Line{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Reseau !!!
      - service: notify.telegram
        data:
          message: PAC Off Line {{-"\n"-}}{{states("sensor.date_time") }}
      resolved_action:
      - service: notify.telegram
        data:
          message: PAC On Line{{-"\n"-}} {{states("sensor.date_time") }}
          title: Etat RESEAU!!!
      - service: notify.telegram
        data:
          message: PAC On Line{{-"\n"-}}{{states("sensor.date_time") }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 600
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 300
      max_alerts: 100
      condition_entity: input_boolean.inhib_alarme_pac
- id: '1634569580188'
  alias: 2_1_05 Alarme Blueprints Notification Porte Cellier Ouverte
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_porte_cellier
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Porte Cellier ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
      - service: notify.telegram
        data:
          message: Porte Cellier ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Porte Cellier OK{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Portes!!!
      - service: notify.telegram
        data:
          message: Porte Cellier OK{{-"\n"-}}{{states("sensor.date_time") }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 600
      resolved_message: Alerte {{ entity_name }} Résolu
      max_alerts: 100
      initial_delay: 300
- id: '1634569751638'
  alias: 2_1_06 Alarme Blueprints Notification Porte Sous Sol Ouverte
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      sensor_entity: binary_sensor.alarme_porte_sous_sol
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Porte Sous Sol ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
          data:
            inline_keyboard:
            - Ferme porte:/ferme_soussol, Cancel:/cancel
      - service: notify.telegram
        data:
          message: Porte Sous Sol ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Porte Sous Sol OK{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Portes!!!
      - service: notify.telegram
        data:
          message: Porte Sous Sol OK{{-"\n"-}}{{states("sensor.date_time") }}
      notify_message: Porte Sous _Sol Ouverte
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      resolved_message: Porte Sous Sol Ok
      initial_delay: 300
      condition_entity_state: 'off'
      max_alerts: 100
      repeat_delay: 600
- id: '1634569897913'
  alias: 2_1_07 Alarme Blueprints Notification Porte Garage Ouverte
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_porte_garage
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Porte Garage ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
          data:
            inline_keyboard:
            - Ferme Porte:/ferme_garage, Cancel:/cancel
      - service: notify.telegram
        data:
          message: Porte Garage ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Porte Garage OK{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Portes!!!
      - service: notify.telegram
        data:
          message: Porte Garage OK{{-"\n"-}}{{states("sensor.date_time") }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 600
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 300
      max_alerts: 100
- id: '1634570304569'
  alias: 2_1_08 Alarme Blueprints Notification Discordance PAC
  description: ' Surveillance discordance PAC entre l''état du thermostat et l''état
    du switch de commande '
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_discord_pac
      alert_state: 'off'
      alert_action:
      - service: notify.telegram
        data:
          message: Discordance PAC=> PU= {{states("sensor.ecocompteur_pac")}} et Pilotage=
            {{states("switch.altherma")}}{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat PAC !!!
      - service: notify.telegram
        data:
          message: Discordance PAC=> PU= {{states("sensor.ecocompteur_pac")}} et Pilotage=
            {{states("switch.altherma")}}{{-"\n"-}}{{states("sensor.date_time") }}
      resolved_action:
      - service: notify.telegram
        data:
          message: PAC OK=> PU= {{states("sensor.ecocompteur_pac")}} et Pilotage=
            {{states("switch.altherma")}}{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat PAC !!!
      - service: notify.telegram
        data:
          message: PAC OK=> PU= {{states("sensor.ecocompteur_pac")}} et Pilotage=
            {{states("switch.altherma")}}{{-"\n"-}}{{states("sensor.date_time") }}
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 1200
      max_alerts: 100
      initial_delay: 1200
      dismiss_entity: input_boolean.inhib_alarme_pac
      resolved_message: Alerte {{ entity_name }} Résolu
      notify_message: Alerte {{ entity_name }}Déclenché
- id: '1634571065075'
  alias: 2_1_09 Alarme Blueprints Notification Porte frigo garage ouverte
  description: '# Alarme porte frigo garage ouverte   '
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.porte_frigo
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Porte Frigo Garage Ouverte {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
      - service: notify.telegram
        data:
          message: Porte Frigo Garage Ouverte {{-"\n"-}}{{states("sensor.date_time")
            }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Porte Frigo Garage Fermée {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
      - service: notify.telegram
        data:
          message: Porte Frigo Garage Fermée {{-"\n"-}}{{states("sensor.date_time")
            }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 60
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 60
      max_alerts: 100
- id: '1634571983587'
  alias: 2_1_10 Alarme Blueprints Notification Temperature congelateur haute
  description: '# Surveillance de la temperature du congelateur  '
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_temp_congelo_haute
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: T° Haute Congelo = {{states("sensor.temp_congelo_garage") }}°C
            {{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Congelo !!!
      - service: notify.telegram
        data:
          message: T° Haute Congelo = {{states("sensor.temp_congelo_garage") }}°C
            {{-"\n"-}}{{states("sensor.date_time") }}
      resolved_action:
      - service: notify.telegram
        data:
          message: T° Congelo normale = {{states("sensor.temp_congelo_garage") }}°C
            {{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Congelo !!!
      - service: notify.telegram
        data:
          message: T° Congelo normale = {{states("sensor.temp_congelo_garage") }}°C
            {{-"\n"-}}{{states("sensor.date_time") }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 300
      max_alerts: 100
- id: '1634621594490'
  alias: 2_1_12 Alarme Blueprints Notification Def Com VP2
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: input_boolean.com_vp2
      alert_state: 'off'
      alert_action:
      - service: notify.telegram
        data:
          message: VP2 Off Line{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Reseau !!!
      resolved_action:
      - service: notify.telegram
        data:
          message: VP2 On Line{{-"\n"-}} {{states("sensor.date_time") }}
          title: Etat RESEAU!!!
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      initial_delay: 60
      max_alerts: 50
      resolved_message: Alerte {{ entity_name }} Résolu
      notify_message: Alerte {{ entity_name }}Déclenché
- id: '1634708878890'
  alias: '6_1_1 Energie Delestage '
  description: Arret piscine si prod superieur au seuil et piscine sur on et MaL en
    marche
  trigger:
  - platform: state
    entity_id: sensor.envoy_122103023124_current_power_production
  - platform: state
    entity_id: binary_sensor.malaver_en_marche
    id: etat mal
  condition:
  - condition: state
    entity_id: input_boolean.valid_delestage
    state: 'on'
  - condition: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.malaver_en_marche
        state: 'on'
      - condition: state
        entity_id: input_boolean.mem_delestage
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.envoy_122103023124_current_power_production
        above: input_number.seuil_delestage_pv
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.mem_delestage
        data: {}
      - service: notify.telegram
        data:
          message: Delestage Piscine sur ON{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Energie-Delestage !!!
    - conditions:
      - condition: state
        entity_id: binary_sensor.malaver_en_marche
        state: 'off'
      - condition: state
        entity_id: input_boolean.mem_delestage
        state: 'on'
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.mem_delestage
        data: {}
      - service: notify.telegram
        data:
          message: Delestage Piscine sur OFF{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Energie-Delestage !!!
    default: []
  mode: single
- id: '1634766452141'
  alias: 2_2_4 Alarme Acquittement Porte Sous Sol
  description: Ferme la porte du sous sol
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /ferme_soussol
  condition: []
  action:
  - service: cover.close_cover
    target:
      entity_id: cover.garage_soussol
  mode: single
- id: '1634766777070'
  alias: 2_2_3 Alarme Acquittement Porte Garage
  description: Ferme la porte du sous sol
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /ferme_garage
  condition: []
  action:
  - service: cover.close_cover
    target:
      entity_id: cover.garage_rdc
  mode: single
- id: '1634916685737'
  alias: 01-1-3 Pusch gitub
  description: pousse vers githtub
  trigger:
  - platform: time
    at: 02:00
  condition: []
  action:
  - service: shell_command.push_to_github
    data: {}
  mode: single
- id: '1635590858245'
  alias: 1_4_1 BP Sonof
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
  condition: []
  action:
  - service: notify.persistent_notification
    data:
      message: bp sonof
  mode: single
- id: '1635590853335'
  alias: 01-1-4 Choix du theme jour ou nuit
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  - platform: state
    entity_id: sun.sun
    to: above_horizon
  - platform: state
    entity_id: sun.sun
    to: below_horizon
  action:
  - service: frontend.set_theme
    data:
      name: "{% if states.sun.sun.state == \"above_horizon\" %}\n  Dwains Light Theme\n{%
        else %}\n  Dwains Dark Theme\n{% endif %}\n"
  mode: single
- id: '1637073026237'
  alias: 4_2_2 Volet Balise ouverture sous sol
  description: ''
  trigger:
  - platform: tag
    tag_id: 6e75d49a-ec3d-4bfc-bd4f-2d1ab41b7cb1
  condition: []
  action:
  - service: cover.open_cover
    target:
      entity_id: cover.garage_soussol
  mode: single
- id: '1637074521273'
  alias: 4_2_1 Volet Balise ouverture garage
  description: ''
  trigger:
  - platform: tag
    tag_id: dca56861-8baf-4881-a5c8-4b99d90c3716
  condition: []
  action:
  - service: cover.open_cover
    target:
      entity_id: cover.garage_rdc
  mode: single
- id: '1638119466260'
  alias: 2_1_11 Alarme Blueprints Notification Def Com Linky
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: input_boolean.com_linky
      alert_state: 'off'
      alert_action:
      - service: notify.telegram
        data:
          message: Com Linky off Line{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Reseau !!!
      resolved_action:
      - service: notify.telegram
        data:
          message: Com Linky On Line{{-"\n"-}} {{states("sensor.date_time") }}
          title: Etat RESEAU!!!
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      initial_delay: 1
      max_alerts: 100
      resolved_message: Alerte {{ entity_name }} Résolu
      notify_message: Alerte {{ entity_name }}Déclenché
- id: '1638433932226'
  alias: 1_2_1 VMC Niv0 Automatismes
  description: ' '
  trigger:
  - platform: state
    entity_id: input_select.vmc_niv0
    id: mode
  - platform: time
    at: input_datetime.heure_vmc_niv0_ma
  - platform: time
    at: input_datetime.heure_vmc_niv0_at
  - platform: numeric_state
    entity_id: sensor.esp145_conc_particules_2_5um
    id: pm2.5sh
    above: input_number.seuil_haut_pm2_5
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.esp145_mh_z19_co2_value
    id: co2sh
    above: input_number.seuil_haut_co2
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.esp145_conc_particules_2_5um
    id: pm2.5sth
    above: input_number.seuil_tres_haut_pm2_5
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.esp145_mh_z19_co2_value
    id: co2sth
    above: input_number.seuil_tres_haut_co2
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: Hor
      sequence:
      - choose:
        - conditions:
          - condition: time
            after: input_datetime.heure_vmc_niv0_ma
            before: input_datetime.heure_vmc_niv0_at
          sequence:
          - service: switch.turn_on
            target:
              entity_id:
              - switch.relais_cde_vmc_niv0_on_off
            data: {}
        default:
        - service: switch.turn_off
          target:
            entity_id:
            - switch.relais_cde_vmc_niv0_on_off
          data: {}
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: CO2 PM2.5
      - condition: or
        conditions:
        - condition: trigger
          id: pm2.5sh
        - condition: trigger
          id: co2sh
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.relais_cde_vmc_niv0_on_off
        data: {}
      - service: switch.turn_on
        target:
          entity_id: switch.esp136_vit_2
        data: {}
      - delay:
          hours: 0
          minutes: 30
          seconds: 0
          milliseconds: 0
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: CO2 PM2.5
      - condition: or
        conditions:
        - condition: trigger
          id: pm2.5sth
        - condition: trigger
          id: co2sth
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.relais_cde_vmc_niv0_on_off
        data: {}
      - service: switch.turn_on
        target:
          entity_id: switch.esp136_vit_3
        data: {}
      - delay:
          hours: 0
          minutes: 15
          seconds: 0
          milliseconds: 0
      - service: switch.turn_on
        target:
          entity_id: switch.esp136_vit_2
        data: {}
      - delay:
          hours: 0
          minutes: 30
          seconds: 0
          milliseconds: 0
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: Arret
      sequence:
      - service: switch.turn_off
        target:
          entity_id:
          - switch.relais_cde_vmc_niv0_on_off
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: Marche
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.relais_cde_vmc_niv0_on_off
        data: {}
    default: []
  mode: single
- id: '1634204887777'
  alias: 3_3_3 Piscine ORP Notifications
  description: Notifie ORP bas, haut, anormal, bidon bas
  trigger:
  - platform: numeric_state
    entity_id: sensor.orp_piscine_orp
    below: '600'
    above: '0'
    id: orp_bas
  - platform: numeric_state
    entity_id: sensor.orp_piscine_orp
    id: orp_haut
    above: '900'
  - platform: numeric_state
    entity_id: sensor.orp_stat_standard_deviation
    id: orp_mauvais
    above: '0.1'
  - platform: state
    entity_id: binary_sensor.orp_niveau_bas_bidon
    id: niv_bas_bidon
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: orp_bas
      sequence:
      - service: notify.telegram
        data:
          message: ORP Bas = {{states('sensor.orp_piscine_orp') }}{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte ORP !!!
    - conditions:
      - condition: trigger
        id: orp_haut
      sequence:
      - service: notify.telegram
        data:
          message: ORP Haut = {{states('sensor.orp_piscine_orp') }}{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte ORP !!!
    - conditions:
      - condition: trigger
        id: orp_mauvais
      sequence:
      - service: notify.telegram
        data:
          message: ORP Mauvais sonde à calibrer??{{-"\n"-}} Median = {{states("sensor.orp_stat_median")}}{{-"\n"-}}
            Deviation(S=0.01) = {{states("sensor.orp_stat_standard_deviation")}} {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte ORP !!!
    - conditions:
      - condition: trigger
        id: niv_bas_bidon
      sequence:
      - service: notify.telegram
        data:
          message: Volume Restant = {{(states("sensor.orp_volume_restant_bidon"))|round(2)
            }} l{{-"\n"-}}{{states("sensor.date_time") }}
          title: Piscine Alerte niveau Bas Bidon ORP !!!
    default: []
  mode: single
- id: '1640106345983'
  alias: 3_3_1 Piscine ORP Validation Automatismes
  description: 'Valide les automations régulation pH au bout de 1 h de fonctionnement '
  trigger:
  - platform: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    for:
      hours: 0
      minutes: 15
      seconds: 0
    to: 'on'
    from: 'off'
    id: ma_pump
  - platform: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    id: at_pump
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  - platform: state
    entity_id: input_boolean.regul_chlore
    id: regule_chlore_off
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ma_pump
      - condition: state
        entity_id: input_boolean.regul_chlore
        state: 'on'
      sequence:
      - service: automation.turn_on
        target:
          entity_id:
          - automation.piscine_injection_chlore
          - automation.piscine_orp_notifications
        data: {}
      - service: notify.telegram
        data:
          message: pH sonde= {{states('sensor.orp_piscine_orp')}} {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Activation Traitement ORP !
    - conditions:
      - condition: trigger
        id: at_pump
      sequence:
      - service: automation.turn_off
        target:
          entity_id:
          - automation.piscine_injection_chlore
          - automation.piscine_orp_notifications
        data: {}
    - conditions:
      - condition: trigger
        id: regule_chlore_off
      sequence:
      - service: automation.turn_off
        target:
          entity_id:
          - automation.piscine_injection_chlore
          - automation.piscine_orp_notifications
        data: {}
    default: []
  mode: single
- id: '1642614758763'
  alias: 6_1_0 Energie Changement HP<->HC
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.linky_n_tarif
    id: tarif_hc
    from: '2'
    to: '1'
  - platform: state
    entity_id: sensor.linky_n_tarif
    from: '1'
    id: tarif_hp
    to: '2'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: tarif_hc
      sequence:
      - service: select.select_option
        data:
          option: hc
        target:
          entity_id:
          - select.energy_total_usage_daily
          - select.linky_energie_jour
          - select.compteur_energie_pac
          - select.compteur_energie_piscine_jour
          - select.compteur_energie_autres_jour
          - select.compteur_energie_onduleur_jour
          - select.compteur_energie_vmc_jour
          - select.compteur_energie_sdb_jour
          - select.compteur_energie_wc_jour
          - select.compteur_energie_ecs_pv_jour
          - select.compteur_energie_ecs_reseau_jour
          - select.compteur_energie_cuisine_jour
          - select.compteur_energie_mal_jour
    - conditions:
      - condition: trigger
        id: tarif_hp
      sequence:
      - service: select.select_option
        data:
          option: hp
        target:
          entity_id:
          - select.energy_total_usage_daily
          - select.linky_energie_jour
          - select.compteur_energie_pac
          - select.compteur_energie_piscine_jour
          - select.compteur_energie_autres_jour
          - select.compteur_energie_onduleur_jour
          - select.compteur_energie_vmc_jour
          - select.compteur_energie_sdb_jour
          - select.compteur_energie_wc_jour
          - select.compteur_energie_ecs_pv_jour
          - select.compteur_energie_ecs_reseau_jour
          - select.compteur_energie_cuisine_jour
          - select.compteur_energie_mal_jour
    default: []
  mode: single
- id: '1642958036645'
  alias: 2_1_05 Alarme Blueprints Notification Petite Porte Sous Sol
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_petite_porte_sous_sol
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Petite Porte Sous-Sol ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
      - service: notify.telegram
        data:
          message: Petite Porte Sous-Sol ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Petite Porte Sous-Sol OK{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes!!!
      - service: notify.telegram
        data:
          message: Petite Porte Sous-Sol OK{{-"\n"-}}{{states("sensor.date_time")
            }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 600
      resolved_message: Alerte {{ entity_name }} Résolu
      max_alerts: 100
      initial_delay: 300
- id: '1644765337710'
  alias: 00-0-0 Démarrage System
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: script.create_all_automations_group
    data: {}
  - service: script.create_all_scripts_group
    data: {}
  mode: single
- id: '1647538159020'
  alias: 2_1_12 Alarme Blueprints Notification Def connection Tablette
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.tablette_etat_connection
      alert_state: 'off'
      alert_action:
      - service: notify.telegram
        data:
          message: Connection Tablette NOK  {{-"\n"-}}{{states("sensor.date_time")
            }}
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.pc2_tablette
      resolved_action:
      - service: notify.telegram
        data:
          message: Connection Tablette OK{{-"\n"-}}{{states("sensor.date_time") }}
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      initial_delay: 1
      max_alerts: 10
      resolved_message: Alerte {{ entity_name }} Résolu
      notify_message: Alerte {{ entity_name }}Déclenché
- id: '1649766635520'
  alias: 4_1_3 Volet-Suivi Azimuth Soleil (old)
  description: Ouvre et ferme les volets en fonction de la course (azimuth) du soleil
  trigger:
  - platform: time_pattern
    minutes: /15
  - platform: state
    entity_id:
    - binary_sensor.position_soleil_midi
    id: posmidi
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.position_soleil_soir
    id: possoir
    from: 'off'
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.position_soleil_matin
        state: 'on'
      - condition: numeric_state
        entity_id: sensor.vp2_radiation_moyenne
        above: input_number.radiation_seuil_ferm_volet
      sequence:
      - service: cover.set_cover_position
        data:
          position: 10
        target:
          entity_id:
          - cover.volet_sdb_p
          - cover.volet_amis_nord_p
    - conditions:
      - condition: trigger
        id: posmidi
      sequence:
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.volet_sdb_p
      - condition: state
        entity_id: input_boolean.presence_amis_ch_nord
        state: 'off'
      - service: cover.open_cover
        target:
          entity_id:
          - cover.volet_amis_nord_p
        data: {}
    - conditions:
      - condition: state
        entity_id: binary_sensor.position_soleil_am
        state: 'on'
      - condition: numeric_state
        entity_id: sensor.vp2_radiation_moyenne
        above: input_number.radiation_seuil_ferm_volet
      sequence:
      - service: cover.set_cover_position
        data:
          position: 10
        target:
          entity_id:
          - cover.volet_amis_sud_p
          - cover.volet_ch_parent_p
    default: []
  mode: single
- id: '1652251351095'
  alias: 3_2_2 Piscine-pH Injection
  description: 'Injection pH '
  trigger:
  - platform: time_pattern
    hours: /1
  condition:
  - condition: template
    value_template: '{% set m=states(''sensor.ph_piscine_ph'') | float %}

      {% set c=states(''input_number.ph_cible'') | float %}

      {{ m > c }}'
  - condition: numeric_state
    entity_id: sensor.ph_piscine_ph
    above: '0'
  - condition: state
    entity_id: input_boolean.regul_ph
    state: 'on'
  - condition: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    state: 'on'
  action:
  - service: input_number.set_value
    target:
      entity_id: input_number.ph_duree_inject_s
    data_template:
      value: '{% set a=states(''sensor.ph_piscine_ph'') | float(default=0) %} {% set
        x=states(''input_number.simul_ph'') | float(default=0) %} {% set b=states(''input_number.ph_cible'')
        | float(default=0) %} {% set d=states(''input_number.ph_debit_ppe'') | float(default=0)
        %} {% set e=states(''input_number.ph_concentration'') | float(default=0) %}
        {% set r=(((a-b)/(e/100))/d)*3600|round(2)|int(default=0) %} {% if r < 0 %}
        {{ 0 }} {% else %} {{ (r%60)|int(default=0) }} {% endif %}'
  - service: input_number.set_value
    target:
      entity_id: input_number.ph_duree_inject_mn
    data_template:
      value: "{% set a=states('sensor.ph_piscine_ph') | float(default=0) %} {% set
        x=states('input_number.simul_ph') | float(default=0) %} {% set b=states('input_number.ph_cible')
        | float(default=0) %} {% set d=states('input_number.ph_debit_ppe') | float(default=0)
        %} {% set e=states('input_number.ph_concentration') | float(default=0) %}
        {% set r=(((a-b)/(e/100))/d)*3600|round(2)|int(default=0) %} \n  {% if r <
        0 %}\n    {{ 0 }}\n  {% else %}\n    {{ (r//60)|int(default=0) }}\n  {% endif
        %}"
  - service: switch.turn_on
    target:
      entity_id:
      - switch.ppe_ph
    data: {}
  - service: notify.telegram
    data:
      message: pH sonde= {{states('sensor.ph_piscine_ph')}} {{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Piscine Début injection pH !!!
  - delay: 00:{{ states('input_number.ph_duree_inject_mn')|int}}:{{ states('input_number.ph_duree_inject_s')
      | int }}
  - service: input_number.set_value
    data_template:
      entity_id: input_number.ph_vol_injecte
      value: '{% set a=states(''input_number.ph_vol_injecte'')|float %} {% set b=states(''input_number.ph_debit_ppe'')|float
        %} {% set c=states(''input_number.ph_duree_inject_s'')|float %} {% set d=states(''input_number.ph_duree_inject_mn'')|float
        %} {{a+( (b*((d*60)+c)/3600))|round(2) }}'
  - service: switch.turn_off
    target:
      entity_id: switch.ppe_ph
    data: {}
  - service: notify.telegram
    data:
      message: pH sonde= {{states('sensor.ph_piscine_ph')}}{{-"\n"-}} Vol Injecté
        =  {% set b=states('input_number.ph_debit_ppe')|float %} {% set c=states('input_number.ph_duree_inject_s')|float
        %} {% set d=states('input_number.ph_duree_inject_mn')|float %} {{(b*((d*60)+c)/3600)|round(2)
        }} l {{-"\n"-}}{{states("sensor.date_time") }}
      title: Piscine Fin injection pH !!!
  mode: single
- id: '1653294353395'
  alias: 4_3_3 sous sol position ouverte
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.porte_ssol_ouverte
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 100
      position_type: target
      entity_id: cover.porte_sous_sol
  mode: single
- id: '1653294805612'
  alias: 4_3_2 garage position fermee
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.porte_garage_fermee
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 0
      position_type: target
      entity_id: cover.porte_garage
  mode: single
- id: '1653294983774'
  alias: 4_3_4 sous sol position fermee
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.porte_ssol_fermee
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 0
      position_type: target
      entity_id: cover.porte_sous_sol
  mode: single
- id: '1653295223147'
  alias: 4_3_1 garage position ouverte
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.porte_garage_ouverte
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 100
      position_type: target
      entity_id: cover.porte_garage
  mode: single
- id: '1653409072754'
  alias: 4_3_5 volet parents grand position ouvert
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fdc_volet_parents_grand_ouvert
    to: 'off'
    from: 'on'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 100
      position_type: target
      entity_id: cover.volet_parents_grand_p
  mode: single
- id: '1653410044804'
  alias: 4_3_6 volet amis sud grand position ouvert
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fdc_volet_amis_sud_grand
    to: 'off'
    from: 'on'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 100
      position_type: target
      entity_id: cover.volet_amis_sud_grand_p
  mode: single
- id: '1655448600753'
  alias: 4_1_3 Volet-Suivi Azimuth Soleil
  description: Ouvre et ferme les volets en fonction de la course (azimuth) du soleil
  trigger:
  - platform: template
    value_template: '{% set a=states(''binary_sensor.position_soleil_matin'') %}

      {% set b=states(''sensor.vp2_radiation_moyenne'') | float(default=0) %}

      {% set c=states(''input_number.radiation_seuil_ferm_volet'') | float(default=0)
      %}

      {{ a == "on" and b>=c}}'
    id: ferm_matin
  - platform: state
    entity_id:
    - binary_sensor.position_soleil_midi
    id: ouv_midi
    to: 'on'
  - platform: template
    value_template: '{% set a=states(''binary_sensor.position_soleil_am'') %}

      {% set b=states(''sensor.vp2_radiation_moyenne'') | float(default=0) %}

      {% set c=states(''input_number.radiation_seuil_ferm_volet'') | float(default=0)
      %}

      {{ a == "on" and b>=c}}'
    id: ferm_am
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ferm_matin
      sequence:
      - service: cover.set_cover_position
        data:
          position: 10
        target:
          entity_id:
          - cover.volet_sdb_p
          - cover.volet_amis_nord_p
    - conditions:
      - condition: trigger
        id: ouv_midi
      sequence:
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.volet_sdb_p
      - condition: state
        entity_id: input_boolean.presence_amis_ch_nord
        state: 'off'
      - service: cover.open_cover
        target:
          entity_id:
          - cover.volet_amis_nord_p
        data: {}
    - conditions:
      - condition: trigger
        id: ferm_am
      sequence:
      - service: cover.set_cover_position
        data:
          position: 10
        target:
          entity_id:
          - cover.volet_amis_sud_p
          - cover.volet_ch_parent_p
    default: []
  mode: single
- id: '1656059504847'
  alias: 2_1_10 Alarme Blueprints Notification Temps lames robot AM435 atteint
  description: Surveillance du temps d'utilisation des lame du robot
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.am435x_temps_usage_lame_atteint
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Lames robot à remplacer = {{states("sensor.am435x_awd_cutting_blade_usage_time")
            }} {{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Robot tonte !!!
      - service: notify.telegram
        data:
          message: Lames robot à remplacer = {{states("sensor.am435x_awd_cutting_blade_usage_time")
            }} {{-"\n"-}}{{states("sensor.date_time") }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Fin notification lames robot à remplacer {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat robot tonte !!!
      - service: notify.telegram
        data:
          message: Fin notification lames robot à remplacer {{-"\n"-}}{{states("sensor.date_time")
            }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 3600
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 1
      max_alerts: 10
- id: '1659166164037'
  alias: 3_2_2 Piscine-pH Injection V2
  description: Injection pH v2
  trigger:
  - platform: time
    at: '13:30:00'
  condition:
  - condition: template
    value_template: '{% set m=states(''sensor.ph_stat_median'') | float %}

      {% set c=states(''input_number.ph_cible'') | float %}

      {{ m > c }}'
  - condition: numeric_state
    entity_id: sensor.ph_stat_median
    above: '0'
  - condition: state
    entity_id: input_boolean.regul_ph
    state: 'on'
  - condition: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    state: 'on'
  action:
  - service: input_number.set_value
    target:
      entity_id: input_number.ph_duree_inject_s
    data_template:
      value: '{% set a=states(''sensor.ph_stat_median'') | float(default=0) %} {%
        set x=states(''input_number.simul_ph'') | float(default=0) %} {% set b=states(''input_number.ph_cible'')
        | float(default=0) %} {% set d=states(''input_number.ph_debit_ppe'') | float(default=0)
        %} {% set e=states(''input_number.ph_concentration'') | float(default=0) %}
        {% set r=(((a-b)/(e/100))/d)*3600|round(2)|int(default=0) %} {% if r < 0 %}
        {{ 0 }} {% else %} {{ (r%60)|int(default=0) }} {% endif %}'
  - service: input_number.set_value
    target:
      entity_id: input_number.ph_duree_inject_mn
    data_template:
      value: "{% set a=states('sensor.ph_stat_median') | float(default=0) %} {% set
        x=states('input_number.simul_ph') | float(default=0) %} {% set b=states('input_number.ph_cible')
        | float(default=0) %} {% set d=states('input_number.ph_debit_ppe') | float(default=0)
        %} {% set e=states('input_number.ph_concentration') | float(default=0) %}
        {% set r=(((a-b)/(e/100))/d)*3600|round(2)|int(default=0) %} \n  {% if r <
        0 %}\n    {{ 0 }}\n  {% else %}\n    {{ (r//60)|int(default=0) }}\n  {% endif
        %}"
  - service: switch.turn_on
    target:
      entity_id:
      - switch.ppe_ph
    data: {}
  - service: notify.telegram
    data:
      message: pH sonde= {{states('sensor.ph_stat_median')}} {{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Piscine Début injection pH !!!
  - delay: 00:{{ states('input_number.ph_duree_inject_mn')|int}}:{{ states('input_number.ph_duree_inject_s')
      | int }}
  - service: input_number.set_value
    data_template:
      entity_id: input_number.ph_vol_injecte
      value: '{% set a=states(''input_number.ph_vol_injecte'')|float %} {% set b=states(''input_number.ph_debit_ppe'')|float
        %} {% set c=states(''input_number.ph_duree_inject_s'')|float %} {% set d=states(''input_number.ph_duree_inject_mn'')|float
        %} {{a+( (b*((d*60)+c)/3600))|round(2) }}'
  - service: switch.turn_off
    target:
      entity_id: switch.ppe_ph
    data: {}
  - service: notify.telegram
    data:
      message: pH sonde= {{states('sensor.ph_stat_median')}}{{-"\n"-}} Vol Injecté
        =  {% set b=states('input_number.ph_debit_ppe')|float %} {% set c=states('input_number.ph_duree_inject_s')|float
        %} {% set d=states('input_number.ph_duree_inject_mn')|float %} {{(b*((d*60)+c)/3600)|round(2)
        }} l {{-"\n"-}}{{states("sensor.date_time") }}
      title: Piscine Fin injection pH !!!
  mode: single
- id: '1661426812138'
  alias: 3_1_0 Piscine Delestage sur Photovoltaique V0
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.envoy_122103023124_current_power_production
    for:
      hours: 0
      minutes: 2
      seconds: 0
    above: input_number.seuil_haut_delestage_piscine
    id: pv_ma_ppe
  - platform: numeric_state
    entity_id: sensor.envoy_122103023124_current_power_production
    for:
      hours: 0
      minutes: 5
      seconds: 0
    below: input_number.seuil_bas_delestage_piscine
    id: pv_at_ppe
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: pv_ma_ppe
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id:
          - input_boolean.mem_delestage
    - conditions:
      - condition: trigger
        id: pv_at_ppe
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id:
          - input_boolean.mem_delestage
    default: []
  mode: single
- id: '1668506550340'
  alias: 0_0_2 0_0_2 Alim tablette BP
  description: ' '
  use_blueprint:
    path: seamus65/wallpanel-battery-management.yaml
    input:
      battery: sensor.tablette_niveau_charge
      charger: switch.pc2_tablette
      low_percent: 30
      charged_percent: 90
- id: '1669802402697'
  alias: 1_2_4 ECS Validation Routeur sur SOC
  description: 'SOC < 97 : Routeur Inactif _ SOC>99: Routeur Actif'
  trigger:
  - platform: template
    value_template: "      {% set soc=states('sensor.mp2_niveau_charge_batteries')
      | float %}\n      {% set val=states('input_number.mp2_seuil_validation_routeur')
      | float %}\n      {{ soc > val }}"
    id: valid_routeur
  - platform: template
    value_template: "      {% set soc=states('sensor.mp2_niveau_charge_batteries')
      | float %}\n      {% set deval=states('input_number.mp2_seuil_devalidation_routeur')
      | float %}\n      {{ soc < deval }}"
    id: devalid_routeur
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: valid_routeur
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.ecs_av_pv
      - service: notify.telegram
        data:
          message: SOC:{{states('sensor.mp2_niveau_charge_batteries')}} % > {{states('input_number.mp2_seuil_validation_routeur')}}
            %{{-"\n"-}}{{states("sensor.date_time") }}
          title: Validation Routeur ECS
    - conditions:
      - condition: trigger
        id: devalid_routeur
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.ecs_av_pv
      - service: notify.telegram
        data:
          message: SOC:{{states('sensor.mp2_niveau_charge_batteries')}} % < {{states('input_number.mp2_seuil_devalidation_routeur')}}
            %{{-"\n"-}}{{states("sensor.date_time") }}
          title: De-Validation Routeur ECS
  mode: single
- id: '1669803250640'
  alias: 1_2_5 ECS Arret Forcé sur Puissance Réseau Haute
  description: Si PU Réseau > Seuil alors on force l'ECS à l'Arret
  trigger:
  - platform: template
    value_template: "  value_template: |2-\n          {% set pu=states('sensor.mp2_conso_ac_l1')
      | float %}\n          {% set seuil=states('input_number.ecs_seuil_delestage_pu_haute')
      | float %}\n          {{ pu > seuil }}"
  condition: []
  action:
  - service: input_select.select_option
    data:
      option: At Forcé
    target:
      entity_id: input_select.ecs_ssol
  - service: notify.telegram
    data:
      message: Delestage ECS Seuil Haut Pu Reseau:{{-"\n"-}}{{states('sensor.mp2_conso_ac_l1')}}
        W > {{states('input_number.ecs_seuil_delestage_pu_haute')}} W{{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Alarme Delestage ECS
  mode: single
- id: '1669919504303'
  alias: 2_1_13 Alarme Temp basse Chalet
  description: '# Surveillance de la temperature du chalet'
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_temp_chalet_basse
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: T° Basse Chalet = {{states("sensor.pt100_0_chalet") }}°C {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Alarme Gel Chalet!!!
      resolved_action:
      - service: notify.telegram
        data:
          message: T° Basse Chalet = {{states("sensor.pt100_0_chalet") }}°C {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Fin Alarme Gel chalet !!!
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 300
      max_alerts: 10
- id: '1670851911088'
  alias: 6_1_3 Energie Message Journalier Bilan puissance
  description: ''
  trigger:
  - platform: time
    at: '23:59'
  condition: []
  action:
  - service: notify.telegram
    data:
      message: Tot={{states('sensor.energie_totale_jour')}} -HP={{states('sensor.energy_total_usage_daily_hp')
        }} -HC={{states('sensor.energy_total_usage_daily_hc') }} {{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Conso Electrique du jour en kWh
  - service: notify.log_energy
    data:
      message: '{{states(''sensor.energie_totale_jour'') }},{{states(''sensor.energy_total_usage_daily_hp'')
        }},{{states(''sensor.energy_total_usage_daily_hc'') }},{{states(''sensor.energie_piscine_jour'')
        }},{{states(''sensor.energy_pisc_usage_daily_hp'') }},{{states(''sensor.energy_pisc_usage_daily_hc'')
        }},{{states(''sensor.energie_sdb_jour'') }},{{states(''sensor.energy_sdb_usage_daily_hp'')
        }},{{states(''sensor.energy_sdb_usage_daily_hc'') }},{{states(''sensor.energie_pac_jour'')
        }},{{states(''sensor.energy_pac1_usage_daily_hp'') }},{{states(''sensor.energy_pac1_usage_daily_hc'')
        }},{{states(''sensor.energie_ecs_jour'') }},{{states(''sensor.energy_ecs1_usage_daily_hp'')
        }},{{states(''sensor.energy_ecs1_usage_daily_hc'') }} ,{{states(''sensor.energie_autres_jour'')
        }},{{states(''sensor.energy_autres_usage_daily_hp'') }},{{states(''sensor.energy_autres_usage_daily_hc'')
        }}'
      title: Conso Electrique du jour en kWh
  mode: single
- id: '1670917693978'
  alias: 09-1-1 Thermostat  Chambre Nord
  description: PID Chauffage
  use_blueprint:
    path: argonaute199/thermostat_tpi.yaml
    input:
      coeff_c: 0.6
      coeff_t: 0.01
      entity_temp_ext: sensor.vp2_temp_out
      entity_temp_int: sensor.chambre_nord_temperature
      entity_puissance: input_number.affichage_puissance_chauffe_chambre_nord
      entity_consigne: input_number.consigne_temperature_chambre_nord
      entity_chauffage: switch.esp147_relais
      entity_fenetre: binary_sensor.pac_circulateur_en_marche
- id: '1670919556060'
  alias: 09-1-0 Pilotage Chauffage Chambre Nord
  description: Affectation consigne
  trigger:
  - platform: state
    entity_id:
    - input_select.mode_chauffage_chambre_nord
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.mode_chauffage_chambre_nord
        state: Present
      sequence:
      - service: input_number.set_value
        data:
          value: 19
        target:
          entity_id: input_number.consigne_temperature_chambre_nord
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.thermostat_chambre_nord
    - conditions:
      - condition: state
        entity_id: input_select.mode_chauffage_chambre_nord
        state: Eco
      sequence:
      - service: input_number.set_value
        data:
          value: 17
        target:
          entity_id: input_number.consigne_temperature_chambre_nord
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.thermostat_chambre_nord
    - conditions:
      - condition: state
        entity_id: input_select.mode_chauffage_chambre_nord
        state: Arret
      sequence:
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.thermostat_chambre_nord
  mode: single
- id: '1670934948268'
  alias: 6_1_4 MP2 Affection puissance reduite decharge batterie
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.linky_ptec
    from: HC..
    to: HP..
    id: HC-HP
  - platform: state
    entity_id:
    - sensor.linky_ptec
    from: HP..
    to: HC..
    id: HP-HC
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: HC-HP
      sequence:
      - service: modbus.write_register
        data:
          address: 2704
          slave: 100
          hub: cerbo
          value: 250
    - conditions:
      - condition: trigger
        id: HP-HC
      sequence:
      - service: modbus.write_register
        data:
          address: 2704
          slave: 100
          hub: cerbo
          value: 5
  mode: single
- id: '1671263456762'
  alias: Essai filtration piscine
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /1
  - platform: state
    entity_id:
    - input_select.mode_fonctionnement_piscine_test
    id: at_force
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.mode_fonctionnement_piscine_test
        state: Auto
      - condition: numeric_state
        entity_id: input_number.temp_piscine
        below: 1
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.chalet_s1
    - conditions:
      - condition: state
        entity_id: input_select.mode_fonctionnement_piscine_test
        state: Auto
      - condition: numeric_state
        entity_id: input_number.temp_piscine
        above: 1
        below: 10.1
      - condition: or
        conditions:
        - condition: time
          after: 06:00:00
          before: 08:00:00
        - condition: time
          after: '11:00:00'
          before: '12:00:00'
        - condition: time
          after: '16:00:00'
          before: '17:00:00'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.chalet_s1
    - conditions:
      - condition: state
        entity_id: input_select.mode_fonctionnement_piscine_test
        state: Auto
      - condition: numeric_state
        entity_id: input_number.temp_piscine
        above: 10
        below: 12.1
      - condition: or
        conditions:
        - condition: time
          after: 06:00:00
          before: 07:33:00
        - condition: time
          after: 09:00:00
          before: '12:33:00'
        - condition: time
          after: '16:00:00'
          before: '17:33:00'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.chalet_s1
    - conditions:
      - condition: state
        entity_id: input_select.mode_fonctionnement_piscine_test
        state: Ma F
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.chalet_s1
    - conditions:
      - condition: state
        entity_id: input_select.mode_fonctionnement_piscine_test
        state: At F
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.chalet_s1
    default:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.chalet_s1
  mode: single
- id: '1671811895133'
  alias: 10_0_0 Spot Terrasse
  description: ''
  trigger:
  - device_id: 191305ef12c4538ae3dc593438f5e19d
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: button
  condition: []
  action:
  - type: toggle
    device_id: 216e88150c3bb7fa0e5a68ac407485f9
    entity_id: switch.spots_ext_sud
    domain: switch
  mode: single
- id: '1672317557269'
  alias: 10_0_1 Eclairage 1
  description: ''
  trigger:
  - type: turned_on
    platform: device
    device_id: 4426c2e7eae7885c0d4b21db4405ae40
    entity_id: binary_sensor.esp149_bp1
    domain: binary_sensor
  condition: []
  action:
  - type: toggle
    device_id: e62c133861b9ca712b5539e51c07d05b
    entity_id: switch.esp170_relais1
    domain: switch
  mode: single
- id: '1672318040631'
  alias: 10_0_2 Eclairage 2
  description: ''
  trigger:
  - type: turned_on
    platform: device
    device_id: 4426c2e7eae7885c0d4b21db4405ae40
    entity_id: binary_sensor.esp149_bp2
    domain: binary_sensor
  condition: []
  action:
  - type: toggle
    device_id: e62c133861b9ca712b5539e51c07d05b
    entity_id: switch.esp170_relais2
    domain: switch
  mode: single
- id: '1675070973773'
  alias: 09-2-0 Pilotage Chauffage Chambre Parents
  description: Affectation consigne
  trigger:
  - platform: state
    entity_id:
    - input_select.mode_chauffage_chambre_parents
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.mode_chauffage_chambre_parents
        state: Present
      sequence:
      - service: input_number.set_value
        data:
          value: 19
        target:
          entity_id: input_number.consigne_temperature_chambre_parents
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.thermostat_chambre_parents
    - conditions:
      - condition: state
        entity_id: input_select.mode_chauffage_chambre_parents
        state: Eco
      sequence:
      - service: input_number.set_value
        data:
          value: 17
        target:
          entity_id: input_number.consigne_temperature_chambre_parents
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.thermostat_chambre_parents
    - conditions:
      - condition: state
        entity_id: input_select.mode_chauffage_chambre_parents
        state: Arret
      sequence:
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.thermostat_chambre_parents
  mode: single
- id: '1675071105131'
  alias: 09-2-1 Thermostat Chambre Parents
  description: PID Chauffage
  use_blueprint:
    path: argonaute199/thermostat_tpi.yaml
    input:
      coeff_c: 0.6
      coeff_t: 0.01
      entity_temp_ext: sensor.vp2_temp_out
      entity_temp_int: sensor.chamb_parents_temperature
      entity_puissance: input_number.affichage_puissance_chauffe_chambre_parents
      entity_fenetre: binary_sensor.pac_circulateur_en_marche
      entity_consigne: input_number.consigne_temperature_chambre_parents
      entity_chauffage: switch.esp171_rel_chauf_chambre_parents
- id: '1675073061732'
  alias: 09-3-1 Thermostat  Chambre Sud
  description: PID Chauffage
  use_blueprint:
    path: argonaute199/thermostat_tpi.yaml
    input:
      coeff_c: 0.6
      coeff_t: 0.01
      entity_temp_ext: sensor.vp2_temp_out
      entity_temp_int: sensor.chambre_sud_temperature
      entity_puissance: input_number.affichage_puissance_chauffe_chambre_sud
      entity_fenetre: binary_sensor.pac_circulateur_en_marche
      entity_consigne: input_number.consigne_temperature_chambre_sud
      entity_chauffage: switch.esp171_rel_chauf_chambre_sud
- id: '1675073156647'
  alias: 09-3-0 Pilotage Chauffage Chambre Sud
  description: Affectation consigne
  trigger:
  - platform: state
    entity_id:
    - input_select.mode_chauffage_chambre_sud
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.mode_chauffage_chambre_sud
        state: Present
      sequence:
      - service: input_number.set_value
        data:
          value: 19
        target:
          entity_id: input_number.consigne_temperature_chambre_sud
      - service: automation.turn_on
        data: {}
        target:
          entity_id:
          - automation.09_3_1_thermostat_chambre_sud
    - conditions:
      - condition: state
        entity_id: input_select.mode_chauffage_chambre_sud
        state: Eco
      sequence:
      - service: input_number.set_value
        data:
          value: 17
        target:
          entity_id:
          - input_number.consigne_temperature_chambre_sud
      - service: automation.turn_on
        data: {}
        target:
          entity_id:
          - automation.09_3_1_thermostat_chambre_sud
    - conditions:
      - condition: state
        entity_id: input_select.mode_chauffage_chambre_sud
        state: Arret
      sequence:
      - service: automation.turn_off
        data: {}
        target:
          entity_id:
          - automation.09_3_1_thermostat_chambre_sud
  mode: single
- id: '1675530085157'
  alias: Dimmer
  description: Voir routeur.yaml
  trigger:
  - platform: state
    entity_id:
    - sensor.consigne_puissance_dimmer
  condition: []
  action:
  - service: rest_command.cde_dimmer
    data: {}
  mode: single
- id: '1675765119907'
  alias: 1_2_4 ECS Validation Routeur sur Absorption
  description: float alors routeur ECS Actif
  trigger:
  - platform: state
    entity_id:
    - sensor.mp2_status_bus_ve
    to: '4'
    id: bulk to Absorption
    from: '3'
  - platform: template
    value_template: "      {% set soc=states('sensor.mp2_niveau_charge_batteries')
      | float %}\n      {% set deval=states('input_number.mp2_seuil_devalidation_routeur')
      | float -5 %}\n      {{ soc < deval }}"
    id: devalid_routeur_seuil2
  - platform: numeric_state
    entity_id: sensor.mp2_niveau_charge_batteries
    for:
      hours: 0
      minutes: 5
      seconds: 0
    below: input_number.mp2_seuil_devalidation_routeur
    id: devalid_routeur_seuil1
  - platform: state
    entity_id:
    - sensor.mp2_status_bus_ve
    to: '3'
    id: Float to bulk
    from: '5'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: bulk to Absorption
      - condition: sun
        before: sunset
        after: sunrise
        after_offset: 02:00:00
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.ecs_av_pv
      - service: notify.telegram
        data:
          message: Bus VE passe en mode:{{states('sensor.mp2_affichage_status_bus_ve')}}{{-"\n"-}}
            Marche routeur ECS %{{-"\n"-}}{{states("sensor.date_time") }}
          title: Validation Routeur ECS_ Bulk to Absorption
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: devalid_routeur_seuil1
        - condition: trigger
          id: devalid_routeur_seuil2
        enabled: false
      - condition: trigger
        id: Float to bulk
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.ecs_av_pv
      - service: notify.telegram
        data:
          message: SOC:{{states('sensor.mp2_niveau_charge_batteries')}} % < {{states('input_number.mp2_seuil_devalidation_routeur')}}
            %{{-"\n"-}}{{states("sensor.date_time") }}
          title: De-Validation Routeur ECS - Float to Bulk
  mode: single
- id: '1676284606975'
  alias: Dimmer V2
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.consigne_puissance_dimmer
  condition: []
  action:
  - service: light.turn_on
    data:
      transition: 3
      brightness_pct: '{{ states("sensor.consigne_puissance_dimmer")|int }}'
    target:
      entity_id: light.esp174_puissance_dimmer_ecs
  mode: single
- id: '1678531257946'
  alias: 6_1_2 Surveillance Puissance Onduleur la nuit
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.pc_onduleur_eaton_puissance
    above: 150
  condition:
  - condition: time
    after: '23:00:00'
    before: 07:00:00
  action:
  - service: notify.telegram
    data:
      message: PC Bureau Allumé apres 23:00{{-"\n"-}}{{states("sensor.date_time")
        }}
  mode: single
