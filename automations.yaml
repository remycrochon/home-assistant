- id: '1610184966825'
  alias: 04-01-02 Volet Boolean Nuit/Jour
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.bh1750_illuminance'' )|float(default=0) >
      states(''input_number.luminosite_seuil_haut'')|float(default=0) and is_state("sun.sun",
      "above_horizon") }}'
    id: nuit->jour
  - platform: template
    value_template: '{{ states(''sensor.bh1750_illuminance'')|float(default=0) < states(''input_number.luminosite_seuil_bas'')|float(default=0)
      and is_state("sun.sun", "below_horizon") }}'
    id: jour->nuit
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: nuit->jour
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.nuit_jour
        data: {}
    - conditions:
      - condition: trigger
        id: jour->nuit
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.nuit_jour
        data: {}
    default: []
  mode: single
- id: '1610371647929'
  alias: 01-01-02 Purge base de données
  description: ''
  trigger:
  - platform: time
    at: 00:05:00
  condition: []
  action:
  - service: recorder.purge
    data:
      keep_days: 7
      repack: true
  mode: single
- id: '1617185147880'
  alias: 3_4_2 Piscine-Notification Alarme Appoint d'eau
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.ev_eau_tps_ouverture_jour
    above: '1.00'
  condition: []
  action:
  - service: notify.telegram
    data:
      message: Temps ouverture supérieur à {{states('sensor.ev_eau_tps_ouverture_jour')}}
        h{{-"\n"-}}{{states("sensor.date_time") }}
      title: Alarme EV Appoint d'eau Piscine
  - service: switch.turn_off
    target:
      entity_id: switch.ev_eau
  mode: single
- id: '1617199790692'
  alias: 3_4_3 Piscine-Notification alarme niveau bas
  description: ' '
  trigger:
  - platform: state
    entity_id: binary_sensor.tp_plein_lsl
    from: 'off'
    to: 'on'
    for: 00:00:10
  condition: []
  action:
  - service: notify.telegram
    data:
      title: ALARME
      message: Niveau bas Piscine
  - service: input_select.select_option
    data:
      option: 'Off'
    target:
      entity_id: input_select.mode_fonctionnement_piscine_test
  - service: notify.telegram
    data:
      message: Niveau bas piscine{{-"\n"-}}{{states("sensor.date_time") }}{{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Piscine Alarme Niveau Bas !!!
  mode: single
- id: '1617968589301'
  alias: '08-01-01 Alarmo  Activation Nuit '
  description: ''
  trigger:
  - platform: time
    at: input_datetime.heure_debut_alarme_porte
  condition: []
  action:
  - service: alarm_control_panel.alarm_arm_night
    target:
      entity_id: alarm_control_panel.alarmo
    data: {}
  mode: single
- id: '1617968698367'
  alias: 08-01-02 Alarmo Desactivation
  description: ''
  trigger:
  - platform: time
    at: input_datetime.heure_fin_alarme_porte
  condition: []
  action:
  - service: alarm_control_panel.alarm_disarm
    target:
      entity_id: alarm_control_panel.alarmo
    data: {}
  mode: single
- id: '1624083693650'
  alias: 3_2_1 Piscine-pH Validation Automatismes
  description: 'Valide les automations régulation pH au bout de 1 h de fonctionnement '
  trigger:
  - platform: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    for:
      hours: 0
      minutes: 15
      seconds: 0
    to: 'on'
    from: 'off'
    id: ma_pump
  - platform: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    id: at_pump
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  - platform: state
    entity_id: input_boolean.regul_ph
    id: regule_ph_off
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ma_pump
      - condition: state
        entity_id: input_boolean.regul_ph
        state: 'on'
      sequence:
      - service: automation.turn_on
        target:
          entity_id:
          - automation.piscine_notification_ph
          - automation.3_2_2_piscine_ph_injection_v2
        data: {}
      - service: notify.telegram
        data:
          message: pH sonde= {{states('sensor.ph_stat_median')}} {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Activation Traitement pH !
    - conditions:
      - condition: trigger
        id: at_pump
      sequence:
      - service: automation.turn_off
        target:
          entity_id:
          - automation.piscine_notification_ph
          - automation.3_2_2_piscine_ph_injection_v2
        data: {}
    - conditions:
      - condition: trigger
        id: regule_ph_off
      sequence:
      - service: automation.turn_off
        target:
          entity_id:
          - automation.piscine_notification_ph
          - automation.3_2_2_piscine_ph_injection_v2
        data: {}
    default: []
  mode: single
- id: '1624381456670'
  alias: 3_1_5 Piscine-Pression haute
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.pression_filtre
    above: '1'
    for:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
  condition: []
  action:
  - service: notify.telegram
    data:
      message: Pression Haute = {{states("sensor.pression_filtre") }}{{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Piscine Alerte Pression Filtre !!!
  mode: single
- id: '1624864713180'
  alias: 3_3_5 Piscine-Cartouche Chlore
  description: Mémorisation du temps d'utilisation cartouche chlore hedbo- RAZ à la
    main
  trigger:
  - platform: time
    at: '23:50'
  condition: []
  action:
  - service: input_number.set_value
    data_template:
      entity_id: input_number.temps_cartouche_chlore
      value: '{% set a=states(''input_number.temps_cartouche_chlore'')|float %} {%
        set b=states(''sensor.ma_ppe_piscine_jour'')|float %} {{ (a + b)|round(2)
        }}'
  mode: single
- id: '1625162846851'
  alias: 3_3_6 Piscine-Temps utilisation cartouche chlore atteint
  description: ''
  trigger:
  - platform: template
    value_template: '{% set a=states(''input_number.temps_cartouche_chlore'') | float
      %}

      {% set b=states(''input_number.chlore_seuil_max_utilisation'') | float %}

      {{ a > b }}'
  condition: []
  action:
  - service: notify.telegram
    data:
      message: 'Tps Utilisation cart. Chlore = {{states(''input_number.temps_cartouche_chlore'')}}
        h {{-"\n"-}} Temps maxi:  {{states(''input_number.chlore_seuil_max_utilisation'')}}
        h {{-"\n"-}}{{states("sensor.date_time") }}'
      title: Piscine Alerte Cartouche Chlore à changer!!!
  mode: single
- id: '1624811066594'
  alias: 3_3_2 Piscine-Chlore Injection
  description: ''
  trigger:
  - platform: time_pattern
    hours: /1
  condition:
  - condition: template
    value_template: '{% set m=states(''sensor.orp_piscine_orp'') | float %}

      {% set c=states(''input_number.orp_cible'') | float %}

      {{ m < c }}'
  - condition: numeric_state
    entity_id: sensor.orp_piscine_orp
    above: '0'
  - condition: state
    entity_id: input_boolean.regul_orp
    state: 'on'
  action:
  - service: input_number.set_value
    target:
      entity_id: input_number.chlore_duree_inject_s
    data_template:
      value: "{% set m=states('sensor.orp_piscine_orp') | float(default=0) %} {% set
        x=states('input_number.simul_orp') | float(default=0) %} {% set c=states('input_number.orp_cible')
        | float(default=0) %} {% set d=states('input_number.chlore_debit_ppe') | float(default=0)
        %} {% set e=states('input_number.chlore_concentration') | float(default=0)
        %} {% set r=(((c-m)/(e/100))/d)*3600|round(2)|int(default=0) %}  {% if r <
        0 %}\n  {{ 0 }}\n{% else %}\n  {{ (r%60)|int(default=0) }}\n{% endif %}"
  - service: input_number.set_value
    target:
      entity_id: input_number.chlore_duree_inject_mn
    data_template:
      value: "{% set m=states('sensor.orp_piscine_orp') | float(default=0) %} {% set
        y=state_attr(\"sensor.orp_stat\", \"mean\") | float(default=0) %} {% set x=states('input_number.simul_orp')
        | float(default=0) %} {% set c=states('input_number.orp_cible') | float(default=0)
        %} {% set d=states('input_number.chlore_debit_ppe') | float(default=0) %}
        {% set e=states('input_number.chlore_concentration') | float(default=0) %}
        {% set r=(((c-m)/(e/100))/d)*3600|round(2)|int(default=0) %}  {% if r < 0
        %}\n  {{ 0 }}\n{% else %}\n  {{ (r//60)|int(default=0) }}\n{% endif %}"
  - service: switch.turn_on
    target:
      entity_id:
      - switch.ppe_chlore
    data: {}
  - service: notify.telegram
    data:
      message: ORP sonde= {{states('sensor.orp_piscine_orp')}} {{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Piscine Début injection Chlore !!!
  - delay: 00:{{ states('input_number.chlore_duree_inject_mn')|int}}:{{ states('input_number.chlore_duree_inject_s')
      | int }}
  - service: input_number.set_value
    data_template:
      entity_id: input_number.chlore_vol_injecte
      value: '{% set a=states(''input_number.chlore_vol_injecte'')|float %} {% set
        b=states(''input_number.chlore_debit_ppe'')|float %} {% set c=states(''input_number.chlore_duree_inject_s'')|float
        %} {% set d=states(''input_number.chlore_duree_inject_mn'')|float %} {{a+(
        (b*((d*60)+c)/3600))|round(2) }}'
  - service: switch.turn_off
    target:
      entity_id: switch.ppe_chlore
    data: {}
  - service: notify.telegram
    data:
      message: ORP sonde= {{states('sensor.orp_piscine_orp')}}{{-"\n"-}} Vol Injecté
        =  {% set b=states('input_number.chlore_debit_ppe')|float %} {% set c=states('input_number.chlore_duree_inject_s')|float
        %} {% set d=states('input_number.chlore_duree_inject_mn')|float %} {{(b*((d*60)+c)/3600)|round(2)
        }} l {{-"\n"-}}{{states("sensor.date_time") }}
      title: Piscine Fin injection Chlore !!!
  mode: single
- id: '1629296468909'
  alias: 07-01-01 Robot Tondeuse
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.vp2_pluviometrie_moyenne
    above: input_number.seuil_pluie_stop_robot
    id: seuil_haut
  - platform: numeric_state
    entity_id: sensor.vp2_pluviometrie_moyenne
    id: seuil_bas
    below: input_number.seuil_pluie_stop_robot
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: seuil_haut
      sequence:
      - service: vacuum.return_to_base
        target:
          entity_id:
          - vacuum.am435x_awd
        data: {}
      - service: notify.telegram
        data:
          message: Retour Robot à la Base!!{{-"\n"-}} Pluvio Moyenne 12h = {{states('sensor.vp2_pluviometrie_moyenne')}}
            mm {{-"\n"-}} Seuil Stop robot= {{states('input_number.seuil_pluie_stop_robot')}}
            mm {{-"\n"-}}{{states("sensor.date_time") }}
          title: Robot-Début Alerte Meteo Pluie !!!
    - conditions:
      - condition: trigger
        id: seuil_bas
      - condition: state
        entity_id: input_boolean.am435x_awd_autorisation_tonte
        state: 'on'
      sequence:
      - service: vacuum.start
        data: {}
        target:
          entity_id: vacuum.am435x_awd
      - service: notify.telegram
        data:
          message: Validation Départ Robot!!{{-"\n"-}} Pluvio Moyenne 12h = {{states('sensor.vp2_pluviometrie_moyenne')}}
            mm {{-"\n"-}} Seuil Stop robot= {{states('input_number.seuil_pluie_stop_robot')}}
            mm {{-"\n"-}}{{states("sensor.date_time") }}
          title: Robot- Fin Alerte Meteo Pluie !!!
  mode: single
  trace:
    stored_traces: 10
- id: '1632232387237'
  alias: 05-01-01 Reseau Notification Nouvelle IP
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.myip
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition: []
  action:
  - service: notify.telegram
    data:
      message: 'Nouvelle IP: {{ states("sensor.myip")}} {{-"\n"-}}{{states("sensor.date_time")
        }}'
      title: Réseau:!!!
  - service: notify.telegram
    data:
      message: Nouvelle IP {{ states("sensor.myip")}}
      title: Reseau
  mode: single
- id: '1632989157968'
  alias: 04-01-01 Volet Automatismes
  description: 'Ete/Hiver/Absent '
  trigger:
  - platform: state
    entity_id:
    - input_boolean.nuit_jour
    from: 'on'
    to: 'off'
    id: jour->nuit
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: time
    at: input_datetime.horaire_ete_volet_ouv
    id: heure_ouv
  - platform: time
    at: input_datetime.horaire_ete_volet_ferm
    id: heure_ferm
  - platform: state
    entity_id:
    - input_boolean.nuit_jour
    id: nuit->jour
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Hiv
      - condition: trigger
        id: jour->nuit
      sequence:
      - service: script.fermeture_volet
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Hiv
      - condition: trigger
        id: heure_ouv
      sequence:
      - service: script.ouverture_volet
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Ete
      - condition: trigger
        id: heure_ouv
      sequence:
      - service: script.ouverture_volet
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Ete
      - condition: trigger
        id: heure_ferm
      sequence:
      - service: script.fermeture_volet
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Absent
      - condition: trigger
        id: jour->nuit
      sequence:
      - service: script.fermeture_volet_absent
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Absent
      - condition: trigger
        id: nuit->jour
      sequence:
      - service: script.ouverture_volet_absent
        data: {}
    default: []
  mode: single
- id: '1633075302563'
  alias: 3_1_2 Piscine-Hors-Gel
  description: ''
  trigger:
  - platform: time_pattern
    hours: /1
  - platform: state
    entity_id: input_boolean.hors_gel_valid
    id: hg_deval
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.vp2_temp_out
        below: input_number.hors_gel_inf_seuil2
      - condition: state
        entity_id: input_select.mode_fonctionnement_piscine
        state: Hiver
      - condition: state
        entity_id: input_boolean.hors_gel_valid
        state: 'on'
      sequence:
      - service: input_select.select_option
        data:
          option: Ma F
        target:
          entity_id: input_select.mode_fonctionnement_piscine
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel Seuil 2 Marc Ppe
      - delay:
          hours: 0
          minutes: 30
          seconds: 0
          milliseconds: 0
      - service: input_select.select_option
        target:
          entity_id: input_select.mode_fonctionnement_piscine
        data:
          option: At F
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - service: input_select.select_option
        target:
          entity_id: input_select.mode_fonctionnement_piscine
        data:
          option: Hiver
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel Seuil 2 Arret Ppe
    - conditions:
      - condition: numeric_state
        entity_id: sensor.vp2_temp_out
        below: input_number.hors_gel_inf_seuil1
      - condition: state
        entity_id: input_select.mode_fonctionnement_piscine
        state: Hiver
      - condition: state
        entity_id: input_boolean.hors_gel_valid
        state: 'on'
      sequence:
      - service: input_select.select_option
        data:
          option: Ma F
        target:
          entity_id: input_select.mode_fonctionnement_piscine
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel Seuil 1 Marc Ppe
      - delay:
          hours: 0
          minutes: 15
          seconds: 0
          milliseconds: 0
      - service: input_select.select_option
        target:
          entity_id: input_select.mode_fonctionnement_piscine
        data:
          option: Hiver
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel Seuil 1 Arret Ppe
    - conditions:
      - condition: trigger
        id: hg_deval
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.mode_fonctionnement_piscine
        data:
          option: Hiver
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel devalidé
    default: []
  mode: restart
  max: 10
- id: '1634204887702'
  alias: 3_2_3 Piscine-pH Notifications
  description: Notifie Ph bas, haut, anormal, bidon bas
  trigger:
  - platform: numeric_state
    entity_id: sensor.ph_stat_median
    below: '6.8'
    above: '0'
    id: ph_bas
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.ph_stat_median
    id: ph_haut
    above: '7.8'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.ph_stat_standard_deviation
    id: ph_mauvais
    above: '0.1'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: state
    entity_id:
    - binary_sensor.ph_niveau_bas_bidon
    id: niv_bas_bidon
    to: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ph_bas
      sequence:
      - service: notify.telegram
        data:
          message: Ph Bas = {{states('sensor.ph_stat_median') }}{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte pH !!!
    - conditions:
      - condition: trigger
        id: ph_haut
      sequence:
      - service: notify.telegram
        data:
          message: Ph Haut = {{states('sensor.ph_stat_median') }}{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte pH !!!
    - conditions:
      - condition: trigger
        id: ph_mauvais
      sequence:
      - service: notify.telegram
        data:
          message: pH Mauvais-sonde à calibrer??{{-"\n"-}} Median = {{states("sensor.ph_stat_median")}}{{-"\n"-}}
            Deviation(S=0.01) = {{states("sensor.ph_stat_standard_deviation")}} {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte pH !!!
    - conditions:
      - condition: trigger
        id: niv_bas_bidon
      sequence:
      - service: notify.telegram
        data:
          message: Volume Restant = {{(states("sensor.ph_volume_restant_bidon"))|round(2)
            }} l{{-"\n"-}}{{states("sensor.date_time") }}
          title: Piscine Alerte niveau Bas Bidon pH !!!
    default: []
  mode: single
- id: '1634222619535'
  alias: 3_1_3 Piscine-Notifications filtration
  description: Notification Debut, Fin filtration et mise à jour du fichier log "conso_piscine.csv"
  trigger:
  - platform: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    from: 'off'
    to: 'on'
    id: ma_ppe
  - platform: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    id: at_ppe
    from: 'on'
    to: 'off'
  - platform: time
    at: '23:59'
    id: minuit
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ma_ppe
      sequence:
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Début Filtration
    - conditions:
      - condition: trigger
        id: at_ppe
      sequence:
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Fin de filtration
    - conditions:
      - condition: trigger
        id: minuit
      sequence:
      - service: notify.telegram
        data:
          message: 'du {{states("sensor.date_time") }} {{-"\n"-}} Temps de filtration:  {{states(''sensor.ma_ppe_piscine_jour'')}}{{-"\n"-}}Conso:
            {{states(''sensor.compteur_energie_piscine_jour_hp_hc'')}} kWh {{-"\n"-}}
            Tps Utilisation cart. Chlore: {{states(''input_number.temps_cartouche_chlore'')}}
            h'
          title: Piscine Rapport Fin de journée
      - service: notify.log_piscine
        data:
          message: ',{{states(''sensor.compteur_energie_piscine_jour_hp_hc'')}},{{states(''sensor.ma_ppe_piscine_jour'')}}'
          title: Rapport jour piscine
    default: []
  mode: single
- id: '1634389653339'
  alias: 3_4_1 V0 Piscine-EV Appoint EAU
  description: 'Appoint EAU uniquement si volet ouvert depuis 15 mn  '
  trigger:
  - platform: state
    entity_id:
    - cover.volet_piscine
    to: open
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: vol_ouv
  - platform: state
    entity_id: input_boolean.ev_eau_piscine
    to: 'on'
    id: valid_ev
    from: 'off'
  - platform: state
    entity_id: input_boolean.ev_eau_piscine
    id: devalid_ev
    to: 'off'
    from: 'on'
  - platform: state
    entity_id: binary_sensor.tp_plein_lsh
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 20
    id: lsh_off
  - platform: time_pattern
    minutes: /1
    id: minute
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - vol_ouv
        - condition: state
          entity_id: binary_sensor.tp_plein_lsh
          state: 'on'
        - condition: state
          entity_id: switch.ev_eau
          state: 'off'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.ev_eau
        data: {}
      - service: notify.telegram
        data:
          message: Ouverture EV Eau {{-"\n"-}}{{states("sensor.date_time") }}
          title: Piscine Appoint Eau!
    - conditions:
      - condition: state
        entity_id: switch.ev_eau
        state: 'on'
      - condition: or
        conditions:
        - condition: trigger
          id: devalid_ev
        - condition: trigger
          id: lsh_off
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.ev_eau
        data: {}
      - service: notify.telegram
        data:
          message: Fermeture EV Eau {{-"\n"-}}{{states("sensor.date_time") }}
          title: Piscine Appoint Eau!
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - minute
        - condition: state
          entity_id: switch.ev_eau
          state: 'off'
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.ev_eau
        data: {}
    default: []
  mode: single
  trace:
    stored_traces: 10
- id: '1634569261594'
  alias: 02-01-04 Alarme Blueprints Notification Status PAC
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_status_pac
      alert_state: 'off'
      alert_action:
      - service: notify.telegram
        data:
          message: PAC Off Line{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Reseau !!!
      - service: notify.telegram
        data:
          message: PAC Off Line {{-"\n"-}}{{states("sensor.date_time") }}
      resolved_action:
      - service: notify.telegram
        data:
          message: PAC On Line{{-"\n"-}} {{states("sensor.date_time") }}
          title: Etat RESEAU!!!
      - service: notify.telegram
        data:
          message: PAC On Line{{-"\n"-}}{{states("sensor.date_time") }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 600
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 300
      max_alerts: 100
      condition_entity: input_boolean.inhib_alarme_pac
- id: '1634569580188'
  alias: 02-01-06 Alarme Blueprints Notification Porte Cellier Ouverte
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_porte_cellier
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Porte Cellier ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
      - service: notify.telegram
        data:
          message: Porte Cellier ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Porte Cellier OK{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Portes!!!
      - service: notify.telegram
        data:
          message: Porte Cellier OK{{-"\n"-}}{{states("sensor.date_time") }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 600
      resolved_message: Alerte {{ entity_name }} Résolu
      max_alerts: 100
      initial_delay: 300
- id: '1634569751638'
  alias: 02-01-08 Alarme Blueprints Notification Porte Sous Sol Ouverte
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      sensor_entity: binary_sensor.alarme_porte_sous_sol
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Porte Sous Sol ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
      resolved_action:
      - service: notify.telegram
        data:
          message: Porte Sous Sol OK{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Portes!!!
      notify_message: Porte Sous _Sol Ouverte
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      resolved_message: Porte Sous Sol Ok
      initial_delay: 300
      condition_entity_state: 'off'
      max_alerts: 100
      repeat_delay: 600
- id: '1634569897913'
  alias: 02-01-07 Alarme Blueprints Notification Porte Garage Ouverte
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_porte_garage
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Porte Garage ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
          data:
            inline_keyboard:
            - Ferme Porte:/ferme_garage, Cancel:/cancel
      - service: notify.telegram
        data:
          message: Porte Garage ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Porte Garage OK{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Portes!!!
      - service: notify.telegram
        data:
          message: Porte Garage OK{{-"\n"-}}{{states("sensor.date_time") }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 600
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 300
      max_alerts: 100
- id: '1634570304569'
  alias: 02-01-09 Al Bp Notif Discordance PAC
  description: ' Surveillance discordance PAC entre l''état du thermostat et l''état
    du switch de commande '
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_discord_pac
      alert_state: 'off'
      alert_action:
      - service: notify.telegram
        data:
          message: Discordance PAC=> PU= {{states("sensor.ecocompteur_pac")}} et Pilotage=
            {{states("switch.altherma")}}{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat PAC !!!
      - service: notify.telegram
        data:
          message: Discordance PAC=> PU= {{states("sensor.ecocompteur_pac")}} et Pilotage=
            {{states("switch.altherma")}}{{-"\n"-}}{{states("sensor.date_time") }}
      resolved_action:
      - service: notify.telegram
        data:
          message: PAC OK=> PU= {{states("sensor.ecocompteur_pac")}} et Pilotage=
            {{states("switch.altherma")}}{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat PAC !!!
      - service: notify.telegram
        data:
          message: PAC OK=> PU= {{states("sensor.ecocompteur_pac")}} et Pilotage=
            {{states("switch.altherma")}}{{-"\n"-}}{{states("sensor.date_time") }}
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 1200
      max_alerts: 100
      initial_delay: 1200
      dismiss_entity: input_boolean.inhib_alarme_pac
      resolved_message: Alerte {{ entity_name }} Résolu
      notify_message: Alerte {{ entity_name }}Déclenché
- id: '1634571065075'
  alias: 02-01-10 Al Bp Notif Porte frigo garage ouverte
  description: '# Alarme porte frigo garage ouverte   '
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.porte_frigo
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Porte Frigo Garage Ouverte {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
      - service: notify.telegram
        data:
          message: Porte Frigo Garage Ouverte {{-"\n"-}}{{states("sensor.date_time")
            }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Porte Frigo Garage Fermée {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
      - service: notify.telegram
        data:
          message: Porte Frigo Garage Fermée {{-"\n"-}}{{states("sensor.date_time")
            }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 60
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 60
      max_alerts: 100
- id: '1634571983587'
  alias: 02-01-11 Al Bp Notif Temp congelo haute
  description: '# Surveillance de la temperature du congelateur  '
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_temp_congelo_haute
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: T° Haute Congelo = {{states("sensor.temp_congelo_garage") }}°C
            {{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Congelo !!!
      - service: notify.telegram
        data:
          message: T° Haute Congelo = {{states("sensor.temp_congelo_garage") }}°C
            {{-"\n"-}}{{states("sensor.date_time") }}
      resolved_action:
      - service: notify.telegram
        data:
          message: T° Congelo normale = {{states("sensor.temp_congelo_garage") }}°C
            {{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Congelo !!!
      - service: notify.telegram
        data:
          message: T° Congelo normale = {{states("sensor.temp_congelo_garage") }}°C
            {{-"\n"-}}{{states("sensor.date_time") }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 300
      max_alerts: 100
- id: '1634621594490'
  alias: 02-01-14 Al Bp Notif Def Com VP2
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: input_boolean.com_vp2
      alert_state: 'off'
      alert_action:
      - service: notify.telegram
        data:
          message: VP2 Off Line{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Reseau !!!
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.rebootweeks
      resolved_action:
      - service: notify.telegram
        data:
          message: VP2 On Line{{-"\n"-}} {{states("sensor.date_time") }}
          title: Etat RESEAU!!!
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      initial_delay: 120
      max_alerts: 50
      resolved_message: Alerte {{ entity_name }} Résolu
      notify_message: Alerte {{ entity_name }}Déclenché
- id: '1634916685737'
  alias: 01-01-03 Pusch gitub
  description: pousse vers githtub
  trigger:
  - platform: time
    at: 02:00
  condition: []
  action:
  - service: shell_command.push_to_github
    data: {}
  mode: single
- id: '1637073026237'
  alias: 04-02-02 Volet Balise ouverture sous sol
  description: ''
  trigger:
  - platform: tag
    tag_id: 6e75d49a-ec3d-4bfc-bd4f-2d1ab41b7cb1
  condition: []
  action:
  - service: cover.open_cover
    target:
      entity_id: cover.garage_soussol
    data: {}
  mode: single
- id: '1637074521273'
  alias: 04-02-01 Volet Balise ouverture garage
  description: ''
  trigger:
  - platform: tag
    tag_id: dca56861-8baf-4881-a5c8-4b99d90c3716
  condition: []
  action:
  - service: cover.open_cover
    target:
      entity_id: cover.garage_rdc
    data: {}
  mode: single
- id: '1638119466260'
  alias: 02-01-13 Al Bp Notif Def Com Linky
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: input_boolean.com_linky
      alert_state: 'off'
      alert_action:
      - service: notify.telegram
        data:
          message: Com Linky off Line{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Reseau !!!
      resolved_action:
      - service: notify.telegram
        data:
          message: Com Linky On Line{{-"\n"-}} {{states("sensor.date_time") }}
          title: Etat RESEAU!!!
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      initial_delay: 1
      max_alerts: 100
      resolved_message: Alerte {{ entity_name }} Résolu
      notify_message: Alerte {{ entity_name }}Déclenché
- id: '1638433932226'
  alias: 01-02-01 VMC Niv0 Automatismes
  description: ' '
  trigger:
  - platform: state
    entity_id: input_select.vmc_niv0
    id: mode
  - platform: time
    at: input_datetime.heure_vmc_niv0_ma
  - platform: time
    at: input_datetime.heure_vmc_niv0_at
  - platform: numeric_state
    entity_id: sensor.esp145_conc_particules_2_5um
    id: pm2.5sh
    above: input_number.seuil_haut_pm2_5
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.esp145_mh_z19_co2_value
    id: co2sh
    above: input_number.seuil_haut_co2
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.esp145_conc_particules_2_5um
    id: pm2.5sth
    above: input_number.seuil_tres_haut_pm2_5
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.esp145_mh_z19_co2_value
    id: co2sth
    above: input_number.seuil_tres_haut_co2
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: sun
    event: sunrise
    offset: 0
    id: levee_soleil
  - platform: template
    value_template: '{% set temp=states(''sensor.vp2_temp_out'') | float(0) %}

      {% set saison=states(''sensor.season'') | default("") %}

      {% set mode=states(''input_select.vmc_niv0'') | default("") %}

      {% set soleil=states(''sun.sun'') | default("") %}

      {{ (temp< 5) and (saison == "autumn" or saison=="winter") and (mode=="CO2 PM2.5")
      and (soleil == ''below_horizon'')}}

      '
    id: temp_basse
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: Hor
      sequence:
      - choose:
        - conditions:
          - condition: time
            after: input_datetime.heure_vmc_niv0_ma
            before: input_datetime.heure_vmc_niv0_at
          sequence:
          - service: switch.turn_on
            target:
              entity_id:
              - switch.relais_cde_vmc_niv0_on_off
            data: {}
        default:
        - service: switch.turn_off
          target:
            entity_id:
            - switch.relais_cde_vmc_niv0_on_off
          data: {}
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: CO2 PM2.5
      - condition: or
        conditions:
        - condition: trigger
          id: pm2.5sh
        - condition: trigger
          id: co2sh
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.relais_cde_vmc_niv0_on_off
        data: {}
      - service: switch.turn_on
        target:
          entity_id: switch.esp136_vit_2
        data: {}
      - delay:
          hours: 0
          minutes: 30
          seconds: 0
          milliseconds: 0
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: CO2 PM2.5
      - condition: or
        conditions:
        - condition: trigger
          id: pm2.5sth
        - condition: trigger
          id: co2sth
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.relais_cde_vmc_niv0_on_off
        data: {}
      - service: switch.turn_on
        target:
          entity_id: switch.esp136_vit_3
        data: {}
      - delay:
          hours: 0
          minutes: 15
          seconds: 0
          milliseconds: 0
      - service: switch.turn_on
        target:
          entity_id: switch.esp136_vit_2
        data: {}
      - delay:
          hours: 0
          minutes: 30
          seconds: 0
          milliseconds: 0
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: Arret
      sequence:
      - service: switch.turn_off
        target:
          entity_id:
          - switch.relais_cde_vmc_niv0_on_off
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: Marche
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.relais_cde_vmc_niv0_on_off
        data: {}
    - conditions:
      - condition: trigger
        id:
        - temp_basse
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.relais_cde_vmc_niv0_on_off
    - conditions:
      - condition: trigger
        id:
        - levee_soleil
      - condition: state
        entity_id: input_select.vmc_niv0
        state: CO2 PM2.5
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.relais_cde_vmc_niv0_on_off
    default: []
  mode: single
  trace:
    stored_traces: 10
- id: '1634204887777'
  alias: 3_3_3 Piscine ORP Notifications
  description: Notifie ORP bas, haut, anormal, bidon bas
  trigger:
  - platform: numeric_state
    entity_id: sensor.orp_piscine_orp
    below: '600'
    above: '0'
    id: orp_bas
  - platform: numeric_state
    entity_id: sensor.orp_piscine_orp
    id: orp_haut
    above: '900'
  - platform: numeric_state
    entity_id: sensor.orp_stat_standard_deviation
    id: orp_mauvais
    above: '0.1'
  - platform: state
    entity_id: binary_sensor.orp_niveau_bas_bidon
    id: niv_bas_bidon
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: orp_bas
      sequence:
      - service: notify.telegram
        data:
          message: ORP Bas = {{states('sensor.orp_piscine_orp') }}{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte ORP !!!
    - conditions:
      - condition: trigger
        id: orp_haut
      sequence:
      - service: notify.telegram
        data:
          message: ORP Haut = {{states('sensor.orp_piscine_orp') }}{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte ORP !!!
    - conditions:
      - condition: trigger
        id: orp_mauvais
      sequence:
      - service: notify.telegram
        data:
          message: ORP Mauvais sonde à calibrer??{{-"\n"-}} Median = {{states("sensor.orp_stat_median")}}{{-"\n"-}}
            Deviation(S=0.01) = {{states("sensor.orp_stat_standard_deviation")}} {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte ORP !!!
    - conditions:
      - condition: trigger
        id: niv_bas_bidon
      sequence:
      - service: notify.telegram
        data:
          message: Volume Restant = {{(states("sensor.orp_volume_restant_bidon"))|round(2)
            }} l{{-"\n"-}}{{states("sensor.date_time") }}
          title: Piscine Alerte niveau Bas Bidon ORP !!!
    default: []
  mode: single
- id: '1640106345983'
  alias: 3_3_1 Piscine ORP Validation Automatismes
  description: 'Valide les automations régulation pH au bout de 1 h de fonctionnement '
  trigger:
  - platform: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    for:
      hours: 0
      minutes: 15
      seconds: 0
    to: 'on'
    from: 'off'
    id: ma_pump
  - platform: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    id: at_pump
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  - platform: state
    entity_id: input_boolean.regul_chlore
    id: regule_chlore_off
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ma_pump
      - condition: state
        entity_id: input_boolean.regul_chlore
        state: 'on'
      sequence:
      - service: automation.turn_on
        target:
          entity_id:
          - automation.piscine_injection_chlore
          - automation.piscine_orp_notifications
        data: {}
      - service: notify.telegram
        data:
          message: pH sonde= {{states('sensor.orp_piscine_orp')}} {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Activation Traitement ORP !
    - conditions:
      - condition: trigger
        id: at_pump
      sequence:
      - service: automation.turn_off
        target:
          entity_id:
          - automation.piscine_injection_chlore
          - automation.piscine_orp_notifications
        data: {}
    - conditions:
      - condition: trigger
        id: regule_chlore_off
      sequence:
      - service: automation.turn_off
        target:
          entity_id:
          - automation.piscine_injection_chlore
          - automation.piscine_orp_notifications
        data: {}
    default: []
  mode: single
- id: '1642614758763'
  alias: 06-01-00 Energie Changement HP<->HC
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.linky_n_tarif
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: sensor.linky_n_tarif
          state: '1'
        - condition: state
          entity_id: sensor.linky_n_tarif
          state: '3'
        - condition: state
          entity_id: sensor.linky_n_tarif
          state: '5'
      sequence:
      - service: select.select_option
        data:
          option: hc
        target:
          entity_id:
          - select.compteur_energie_pac
          - select.compteur_energie_piscine_jour
          - select.compteur_energie_autres_jour
          - select.compteur_energie_onduleur_jour
          - select.compteur_energie_vmc_jour
          - select.compteur_energie_sdb_jour
          - select.compteur_energie_wc_jour
          - select.compteur_energie_cuisine_jour
          - select.compteur_energie_mal_jour
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: sensor.linky_n_tarif
          state: '2'
        - condition: state
          entity_id: sensor.linky_n_tarif
          state: '4'
        - condition: state
          entity_id: sensor.linky_n_tarif
          state: '6'
      sequence:
      - service: select.select_option
        data:
          option: hp
        target:
          entity_id:
          - select.compteur_energie_pac
          - select.compteur_energie_piscine_jour
          - select.compteur_energie_autres_jour
          - select.compteur_energie_onduleur_jour
          - select.compteur_energie_vmc_jour
          - select.compteur_energie_sdb_jour
          - select.compteur_energie_wc_jour
          - select.compteur_energie_cuisine_jour
          - select.compteur_energie_mal_jour
    default: []
  mode: single
- id: '1642958036645'
  alias: 02-01-05 Alarme Blueprints Notification Petite Porte Sous Sol
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_petite_porte_sous_sol
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Petite Porte Sous-Sol ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
      - service: notify.telegram
        data:
          message: Petite Porte Sous-Sol ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Petite Porte Sous-Sol OK{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes!!!
      - service: notify.telegram
        data:
          message: Petite Porte Sous-Sol OK{{-"\n"-}}{{states("sensor.date_time")
            }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 600
      resolved_message: Alerte {{ entity_name }} Résolu
      max_alerts: 100
      initial_delay: 300
- id: '1644765337710'
  alias: 00-0-0 Démarrage System
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: script.create_all_automations_group
    data: {}
  - service: script.create_all_scripts_group
    data: {}
  mode: single
- id: '1652251351095'
  alias: 3_2_2 Piscine-pH Injection
  description: 'Injection pH '
  trigger:
  - platform: time_pattern
    hours: /1
  condition:
  - condition: template
    value_template: '{% set m=states(''sensor.ph_piscine_ph'') | float %}

      {% set c=states(''input_number.ph_cible'') | float %}

      {{ m > c }}'
  - condition: numeric_state
    entity_id: sensor.ph_piscine_ph
    above: '0'
  - condition: state
    entity_id: input_boolean.regul_ph
    state: 'on'
  - condition: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    state: 'on'
  action:
  - service: input_number.set_value
    target:
      entity_id: input_number.ph_duree_inject_s
    data_template:
      value: '{% set a=states(''sensor.ph_piscine_ph'') | float(default=0) %} {% set
        x=states(''input_number.simul_ph'') | float(default=0) %} {% set b=states(''input_number.ph_cible'')
        | float(default=0) %} {% set d=states(''input_number.ph_debit_ppe'') | float(default=0)
        %} {% set e=states(''input_number.ph_concentration'') | float(default=0) %}
        {% set r=(((a-b)/(e/100))/d)*3600|round(2)|int(default=0) %} {% if r < 0 %}
        {{ 0 }} {% else %} {{ (r%60)|int(default=0) }} {% endif %}'
  - service: input_number.set_value
    target:
      entity_id: input_number.ph_duree_inject_mn
    data_template:
      value: "{% set a=states('sensor.ph_piscine_ph') | float(default=0) %} {% set
        x=states('input_number.simul_ph') | float(default=0) %} {% set b=states('input_number.ph_cible')
        | float(default=0) %} {% set d=states('input_number.ph_debit_ppe') | float(default=0)
        %} {% set e=states('input_number.ph_concentration') | float(default=0) %}
        {% set r=(((a-b)/(e/100))/d)*3600|round(2)|int(default=0) %} \n  {% if r <
        0 %}\n    {{ 0 }}\n  {% else %}\n    {{ (r//60)|int(default=0) }}\n  {% endif
        %}"
  - service: switch.turn_on
    target:
      entity_id:
      - switch.ppe_ph
    data: {}
  - service: notify.telegram
    data:
      message: pH sonde= {{states('sensor.ph_piscine_ph')}} {{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Piscine Début injection pH !!!
  - delay: 00:{{ states('input_number.ph_duree_inject_mn')|int}}:{{ states('input_number.ph_duree_inject_s')
      | int }}
  - service: input_number.set_value
    data_template:
      entity_id: input_number.ph_vol_injecte
      value: '{% set a=states(''input_number.ph_vol_injecte'')|float %} {% set b=states(''input_number.ph_debit_ppe'')|float
        %} {% set c=states(''input_number.ph_duree_inject_s'')|float %} {% set d=states(''input_number.ph_duree_inject_mn'')|float
        %} {{a+( (b*((d*60)+c)/3600))|round(2) }}'
  - service: switch.turn_off
    target:
      entity_id: switch.ppe_ph
    data: {}
  - service: notify.telegram
    data:
      message: pH sonde= {{states('sensor.ph_piscine_ph')}}{{-"\n"-}} Vol Injecté
        =  {% set b=states('input_number.ph_debit_ppe')|float %} {% set c=states('input_number.ph_duree_inject_s')|float
        %} {% set d=states('input_number.ph_duree_inject_mn')|float %} {{(b*((d*60)+c)/3600)|round(2)
        }} l {{-"\n"-}}{{states("sensor.date_time") }}
      title: Piscine Fin injection pH !!!
  mode: single
- id: '1653294353395'
  alias: 04-03-03 sous sol position ouverte
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.porte_ssol_ouverte
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 100
      position_type: target
      entity_id: cover.porte_sous_sol
  mode: single
- id: '1653294805612'
  alias: 04-03-02 garage position fermee
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.porte_garage_fermee
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 0
      position_type: target
      entity_id: cover.porte_garage
  mode: single
- id: '1653294983774'
  alias: 04-03-04 sous sol position fermee
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.porte_ssol_fermee
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 0
      position_type: target
      entity_id: cover.porte_sous_sol
  mode: single
- id: '1653295223147'
  alias: 04-03-01 garage position ouverte
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.porte_garage_ouverte
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 100
      position_type: target
      entity_id: cover.porte_garage
  mode: single
- id: '1653409072754'
  alias: 04-03-05 volet parents grand position ouvert
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fdc_volet_parents_grand_ouvert
    to: 'off'
    from: 'on'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 100
      position_type: target
      entity_id: cover.volet_parents_grand_p
  mode: single
- id: '1653410044804'
  alias: 04-03-06 volet amis sud grand position ouvert
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fdc_volet_amis_sud_grand
    to: 'off'
    from: 'on'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 100
      position_type: target
      entity_id: cover.volet_amis_sud_grand_p
  mode: single
- id: '1655448600753'
  alias: 04-01-03 Volet-Suivi Azimuth Soleil
  description: Ouvre et ferme les volets en fonction de la course (azimuth) du soleil
  trigger:
  - platform: template
    value_template: '{% set a=states(''binary_sensor.position_soleil_matin'') %}

      {% set b=states(''sensor.vp2_radiation_moyenne'') | float(default=0) %}

      {% set c=states(''input_number.radiation_seuil_ferm_volet'') | float(default=0)
      %}

      {{ a == "on" and b>=c}}'
    id: ferm_matin
  - platform: state
    entity_id:
    - binary_sensor.position_soleil_midi
    id: ouv_midi
    to: 'on'
  - platform: template
    value_template: '{% set a=states(''binary_sensor.position_soleil_am'') %}

      {% set b=states(''sensor.vp2_radiation_moyenne'') | float(default=0) %}

      {% set c=states(''input_number.radiation_seuil_ferm_volet'') | float(default=0)
      %}

      {{ a == "on" and b>=c}}'
    id: ferm_am
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ferm_matin
      sequence:
      - service: cover.set_cover_position
        data:
          position: 10
        target:
          entity_id:
          - cover.volet_sdb_p
          - cover.volet_amis_nord_p
    - conditions:
      - condition: trigger
        id: ouv_midi
      sequence:
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.volet_sdb_p
      - condition: state
        entity_id: input_boolean.presence_amis_ch_nord
        state: 'off'
      - service: cover.open_cover
        target:
          entity_id:
          - cover.volet_amis_nord_p
        data: {}
    - conditions:
      - condition: trigger
        id: ferm_am
      sequence:
      - service: cover.set_cover_position
        data:
          position: 10
        target:
          entity_id:
          - cover.volet_amis_sud_p
          - cover.volet_ch_parent_p
    default: []
  mode: single
- id: '1656059504847'
  alias: 02-01-12 Al Bp Notif Tps lames robot AM435 atteint
  description: Surveillance du temps d'utilisation des lame du robot
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.robot_temps_usage_lames_atteint_2
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Lames robot à remplacer = {{states("sensor.am435x_awd_cutting_blade_usage_time")
            }} {{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Robot tonte !!!
      - service: notify.telegram
        data:
          message: Lames robot à remplacer = {{states("sensor.am435x_awd_cutting_blade_usage_time")
            }} {{-"\n"-}}{{states("sensor.date_time") }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Fin notification lames robot à remplacer {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat robot tonte !!!
      - service: notify.telegram
        data:
          message: Fin notification lames robot à remplacer {{-"\n"-}}{{states("sensor.date_time")
            }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 3600
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 1
      max_alerts: 10
- id: '1659166164037'
  alias: 3_2_2 Piscine-pH Injection V2
  description: Injection pH v2
  trigger:
  - platform: time
    at: '13:30:00'
  condition:
  - condition: template
    value_template: '{% set m=states(''sensor.ph_stat_median'') | float %}

      {% set c=states(''input_number.ph_cible'') | float %}

      {{ m > c }}'
  - condition: numeric_state
    entity_id: sensor.ph_stat_median
    above: '0'
  - condition: state
    entity_id: input_boolean.regul_ph
    state: 'on'
  - condition: state
    entity_id: binary_sensor.ppe_piscine_en_marche
    state: 'on'
  action:
  - service: input_number.set_value
    target:
      entity_id: input_number.ph_duree_inject_s
    data_template:
      value: '{% set a=states(''sensor.ph_stat_median'') | float(default=0) %} {%
        set x=states(''input_number.simul_ph'') | float(default=0) %} {% set b=states(''input_number.ph_cible'')
        | float(default=0) %} {% set d=states(''input_number.ph_debit_ppe'') | float(default=0)
        %} {% set e=states(''input_number.ph_concentration'') | float(default=0) %}
        {% set r=(((a-b)/(e/100))/d)*3600|round(2)|int(default=0) %} {% if r < 0 %}
        {{ 0 }} {% else %} {{ (r%60)|int(default=0) }} {% endif %}'
  - service: input_number.set_value
    target:
      entity_id: input_number.ph_duree_inject_mn
    data_template:
      value: "{% set a=states('sensor.ph_stat_median') | float(default=0) %} {% set
        x=states('input_number.simul_ph') | float(default=0) %} {% set b=states('input_number.ph_cible')
        | float(default=0) %} {% set d=states('input_number.ph_debit_ppe') | float(default=0)
        %} {% set e=states('input_number.ph_concentration') | float(default=0) %}
        {% set r=(((a-b)/(e/100))/d)*3600|round(2)|int(default=0) %} \n  {% if r <
        0 %}\n    {{ 0 }}\n  {% else %}\n    {{ (r//60)|int(default=0) }}\n  {% endif
        %}"
  - service: switch.turn_on
    target:
      entity_id:
      - switch.ppe_ph
    data: {}
  - service: notify.telegram
    data:
      message: pH sonde= {{states('sensor.ph_stat_median')}} {{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Piscine Début injection pH !!!
  - delay: 00:{{ states('input_number.ph_duree_inject_mn')|int}}:{{ states('input_number.ph_duree_inject_s')
      | int }}
  - service: input_number.set_value
    data_template:
      entity_id: input_number.ph_vol_injecte
      value: '{% set a=states(''input_number.ph_vol_injecte'')|float %} {% set b=states(''input_number.ph_debit_ppe'')|float
        %} {% set c=states(''input_number.ph_duree_inject_s'')|float %} {% set d=states(''input_number.ph_duree_inject_mn'')|float
        %} {{a+( (b*((d*60)+c)/3600))|round(2) }}'
  - service: switch.turn_off
    target:
      entity_id: switch.ppe_ph
    data: {}
  - service: notify.telegram
    data:
      message: pH sonde= {{states('sensor.ph_stat_median')}}{{-"\n"-}} Vol Injecté
        =  {% set b=states('input_number.ph_debit_ppe')|float %} {% set c=states('input_number.ph_duree_inject_s')|float
        %} {% set d=states('input_number.ph_duree_inject_mn')|float %} {{(b*((d*60)+c)/3600)|round(2)
        }} l {{-"\n"-}}{{states("sensor.date_time") }}
      title: Piscine Fin injection pH !!!
  mode: single
- id: '1669919504303'
  alias: 02-01-16 Alarme BP Temp basse Chalet
  description: '# Surveillance de la temperature du chalet'
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_temp_chalet_basse
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: T° Basse Chalet = {{states("sensor.pt100_0_chalet") }}°C {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Alarme Gel Chalet!!!
      resolved_action:
      - service: notify.telegram
        data:
          message: T° Basse Chalet = {{states("sensor.pt100_0_chalet") }}°C {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Fin Alarme Gel chalet !!!
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 300
      max_alerts: 10
- id: '1671811895133'
  alias: 10-00-00 Spot Terrasse
  description: ''
  trigger:
  - device_id: 191305ef12c4538ae3dc593438f5e19d
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: button
  condition: []
  action:
  - type: toggle
    device_id: 216e88150c3bb7fa0e5a68ac407485f9
    entity_id: switch.spots_ext_sud
    domain: switch
  mode: single
- id: '1678531257946'
  alias: 06-01-02 Surveillance Puissance Onduleur Bureau la nuit
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.pc_lidl_2023_a_active_power
    above: 20
  condition:
  - condition: time
    after: '23:00:00'
    before: 07:00:00
  action:
  - service: notify.telegram
    data:
      message: PC Bureau Allumé apres 23:00{{-"\n"-}}{{states("sensor.date_time")
        }}
  mode: single
- id: '1686145474191'
  alias: 02-01-17 Al Bp Def Com FREE
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.freebox_server_wan_status
      alert_state: 'off'
      alert_action:
      - service: notify.telegram
        data:
          message: Freebox off Line{{-"\n"-}}{{states("sensor.date_time") }}
          title: FREE NOK !!!
      resolved_action:
      - service: notify.telegram
        data:
          message: Freebox On Line{{-"\n"-}} {{states("sensor.date_time") }}
          title: FREE OK!!!
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      max_alerts: 10
      resolved_message: Alerte {{ entity_name }} Résolu
      notify_message: Alerte {{ entity_name }}Déclenché
      initial_delay: 180
- id: '1687859491524'
  alias: 00-00-03 Temperature haute stérilisateur
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.esp127_temperature
    above: 98
  condition: []
  action:
  - service: notify.telegram
    data:
      message: T° = {{states('sensor.esp127_temperature') }}{{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Temperature Haute Stérilisateur !!!
  mode: single
- id: '1690353892596'
  alias: 06-01-06 Surveillance Pu Chalet
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.esp131_pzem_chalet_puissance
    above: 500
    for:
      hours: 0
      minutes: 3
      seconds: 0
  condition: []
  action:
  - service: notify.telegram
    data:
      message: Pu Chalet superieure à 500W pendant 3mn{{-"\n"-}}{{states("sensor.date_time")
        }}
  mode: single
- id: '1690355630909'
  alias: 00-00-04 Restart Addon UPS si en défaut
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.myups_status
    to: unavailable
    for:
      hours: 0
      minutes: 2
      seconds: 0
  - platform: state
    entity_id:
    - binary_sensor.network_ups_tools_en_cours_d_execution
    from: 'off'
  - platform: state
    entity_id:
    - binary_sensor.network_ups_tools_en_cours_d_execution
    to: unavailable
  - platform: state
    entity_id:
    - binary_sensor.network_ups_tools_en_cours_d_execution
    to: unknown
  condition: []
  action:
  - service: hassio.addon_restart
    data:
      addon: a0d7b954_nut
  mode: single
- id: '1690434314772'
  alias: 06-2-2 MP2 Memorisation Production Jour
  description: ''
  trigger:
  - platform: time
    at: 03:48:00
  condition: []
  action:
  - service: input_number.set_value
    data_template:
      entity_id: input_number.mp2_memoire_estimation_production_jour
      value: '{% set a=states(''sensor.mp2_prod_vrm_total_mqtt'')|float %}  {{a }}'
  mode: single
- id: '1698053985865'
  alias: 10-01-00 Spot Ext Cuisine
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 2d249d1ffc712f4ec1c489cc0fa81f03
    entity_id: 16a044dd5dcf0557c473c93b43cc2c25
    domain: binary_sensor
    for:
      hours: 0
      minutes: 2
      seconds: 0
  - type: opened
    platform: device
    device_id: 193f4cea2f12db0ab1a4d044df803df3
    entity_id: b182f27a8204167b3f3b1893ec2d2196
    domain: binary_sensor
  condition:
  - condition: sun
    before: sunrise
    after: sunset
    enabled: true
  - condition: state
    entity_id: input_boolean.nuit_jour
    state: 'off'
  action:
  - type: turn_on
    device_id: c7b28db8c025b2f0bd975382bc4011f0
    entity_id: 6cf8b08e53c983c0c298cedd8a864449
    domain: switch
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - type: turn_off
    device_id: c7b28db8c025b2f0bd975382bc4011f0
    entity_id: 6cf8b08e53c983c0c298cedd8a864449
    domain: switch
    enabled: true
  mode: single
- id: '1698142750238'
  alias: 06-01-07 Notification niveau bas puit
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.esp140_niveau_puit
    for:
      hours: 0
      minutes: 5
      seconds: 0
    below: 0.8
  condition: []
  action:
  - service: notify.telegram
    data:
      message: Niveau eau puit inferieur à 0.8 ml{{-"\n"-}}{{states("sensor.date_time")
        }}
  mode: single
- id: '1698395745098'
  alias: 00-00-01 Redemarage NODERED
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /3
  condition: []
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.node_red_en_cours_d_execution
      for:
        hours: 0
        minutes: 0
        seconds: 0
      state: 'on'
    then: []
    else:
    - service: hassio.addon_restart
      data:
        addon: a0d7b954_nodered
  mode: single
- id: '1698923695048'
  alias: Alerte Météo actualisation
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  - platform: time_pattern
    hours: /6
  - platform: time
    at: 06:30:00
  - platform: time
    at: '16:30:00'
  condition: []
  action:
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id:
      - sensor.meteo_france_alertes_81
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id:
      - sensor.meteo_france_alerts_picture_today
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id:
      - sensor.meteo_france_alerts_picture_tomorrow
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id:
      - camera.mf_alerte_today
      - camera.mf_alerte_tomorrow
  mode: single
- id: '1699429641790'
  alias: 00-00-02 Backup total HA 1:00 du matin
  description: ''
  trigger:
  - platform: time
    at: 02:00:00
  condition: []
  action:
  - service: hassio.backup_full
    data:
      compressed: true
      location: freebox
  mode: single
- id: '1700469604629'
  alias: 06-01-01 Energie Asservissements Tarifs Tempos
  description: 'Si HP Rouge->Consigne Economique (15°)

    Si HC->Consigne Confort (20°)

    Si HP->Consigne Réduite (19°)'
  trigger:
  - platform: state
    entity_id:
    - sensor.linky_n_tarif
    to: '1'
    id: HC Bleu
  - platform: state
    entity_id:
    - sensor.linky_n_tarif
    to: '2'
    id: HP Bleu
  - platform: state
    entity_id:
    - sensor.linky_n_tarif
    to: '3'
    id: HC Blanc
  - platform: state
    entity_id:
    - sensor.linky_n_tarif
    to: '4'
    id: HP Blanc
  - platform: state
    entity_id:
    - sensor.linky_n_tarif
    to: '6'
    id: hprouge
  - platform: state
    entity_id:
    - sensor.linky_n_tarif
    id: sortiehprouge
    from: '6'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - hprouge
      sequence:
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Consigne PAC= 18 °C car Passage HP ROUGE FORCAGE ARRET PISCINE
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id:
          - input_boolean.piscine_arret_force
      - service: input_number.set_value
        target:
          entity_id: input_number.pac_nr_input_consigne_temperature
        data:
          value: 18
    - conditions:
      - condition: trigger
        id:
        - sortiehprouge
      sequence:
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Consigne PAC=20°C car sortie HP ROUGE
      - service: input_number.set_value
        target:
          entity_id: input_number.pac_nr_input_consigne_temperature
        data:
          value: 20
  mode: single
  trace:
    stored_traces: 15
- id: '1700839832402'
  alias: Update Group-Uptime_kuma
  trigger:
  - platform: homeassistant
    event: start
  - platform: event
    event_type: call_service
    event_data:
      domain: group
      service: reload
  action:
  - service: group.set
    data_template:
      name: uptime_kuma_3
      object_id: uptime_kuma_3
      entities: "{% set ns = namespace(entities=[]) %} {% for s in states.sensor if
        s.object_id.endswith('uptimekuma_') %}\n  {% set ns.entities = ns.entities
        + [ s.entity_id ] %}\n{% endfor %} {{ ns.entities }}      "
- id: '1702130253915'
  alias: 01-03-00 PAC Chauffage Salon Asservissement HP-HC V Loi Eau
  description: 'Si HP Rouge ou (SOC<25 et HP) ->Delta P =-5°

    Si HC->Delta P = 0°'
  trigger:
  - platform: state
    entity_id:
    - sensor.linky_libelle_tarif_fournisseur_en_cours
    to: HP ROUGE
    id: hprouge
  - platform: state
    entity_id:
    - sensor.linky_ptec
    id: hc
    to: HC..
    from: HP..
  - platform: state
    entity_id:
    - sensor.linky_ptec
    id: hp
    to: HP..
    from: HC..
  - platform: numeric_state
    entity_id:
    - sensor.mp2_soc_mqtt
    below: 25
    id: soc
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - hprouge
      sequence:
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Decalage Temp Sort PAC de {{ states('number.temperature_control')
            | float(0) }}°C car HP ROUGE
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id:
          - input_boolean.piscine_arret_force
      - service: input_number.set_value
        data:
          value: -5
        target:
          entity_id: input_number.pac_nr_input_decalage_temperature
    - conditions:
      - condition: trigger
        id:
        - soc
      sequence:
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Decalage Temp Sort PAC de {{ states('number.temperature_control')
            | float(0) }}°C car SOC={{ states('sensor.mp2_soc_mqtt') | float(0) }}<
            25%
      - service: input_number.set_value
        data:
          value: -5
        target:
          entity_id: input_number.pac_nr_input_decalage_temperature
    - conditions:
      - condition: trigger
        id:
        - hc
      sequence:
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Decalage Temp Sort PAC de {{ states('number.temperature_control')
            | float(0)}} car passage en HC
      - service: input_number.set_value
        data:
          value: 0
        target:
          entity_id: input_number.pac_nr_input_decalage_temperature
  mode: single
  trace:
    stored_traces: 15
- id: '1706170202385'
  alias: Ecran01 Eteint ecran toutes x mn
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /5
  condition: []
  action:
  - service: mqtt.publish
    data:
      topic: hasp/ecran01/command
      payload: backlight {"state":"true","brightness":10}
    enabled: false
  - service: mqtt.publish
    data:
      topic: hasp/ecran01/config/gui
      payload: '{"idle2":20}'
    enabled: false
  - type: turn_off
    device_id: 31203080ff3e67d781d95be03b42e98e
    entity_id: caf58cffba51ee848ade4eaa4c57a127
    domain: light
  mode: single
- id: '1706466237260'
  alias: 04-01-01 Volet Automatismes RTS
  description: 'Ete/Hiver/Absent '
  trigger:
  - platform: state
    entity_id:
    - input_boolean.nuit_jour
    from: 'on'
    to: 'off'
    id: jour->nuit
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: time
    at: input_datetime.horaire_ete_volet_ouv
    id: heure_ouv
  - platform: time
    at: input_datetime.horaire_ete_volet_ferm
    id: heure_ferm
  - platform: state
    entity_id:
    - input_boolean.nuit_jour
    id: nuit->jour
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Hiv
      - condition: trigger
        id: jour->nuit
      sequence:
      - service: script.1706464871250
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Hiv
      - condition: trigger
        id: heure_ouv
      sequence:
      - service: script.0_0_1_ouverture_volets_rts
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Ete
      - condition: trigger
        id: heure_ouv
      sequence:
      - service: script.0_0_1_ouverture_volets_rts
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Ete
      - condition: trigger
        id: heure_ferm
      sequence:
      - service: script.1706464871250
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Absent
      - condition: trigger
        id: jour->nuit
      sequence:
      - service: script.0_1_0_fermeture_volets_mode_absent_rts
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Absent
      - condition: trigger
        id: nuit->jour
      sequence:
      - service: script.0_1_1_ouverture_volets_mode_absent_rts
        data: {}
    default: []
  mode: single
