- id: '1610184966825'
  alias: 04-01-02 Volet Boolean Nuit/Jour
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.bh1750_illuminance'' )|float(default=0) >
      states(''input_number.luminosite_seuil_haut'')|float(default=0) and is_state("sun.sun",
      "above_horizon") }}'
    id: nuit->jour
  - platform: template
    value_template: '{{ states(''sensor.bh1750_illuminance'')|float(default=0) < states(''input_number.luminosite_seuil_bas'')|float(default=0)
      and is_state("sun.sun", "below_horizon") }}'
    id: jour->nuit
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: nuit->jour
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.nuit_jour
        data: {}
    - conditions:
      - condition: trigger
        id: jour->nuit
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.nuit_jour
        data: {}
    default: []
  mode: single
- id: '1610371647929'
  alias: 01-01-02 Purge base de données
  description: ''
  trigger:
  - platform: time
    at: 00:05:00
  condition: []
  action:
  - service: recorder.purge
    data:
      keep_days: 7
      repack: true
  mode: single
- id: '1617185147880'
  alias: Piscine-Surveillance et Alarme Appoint d'eau
  description: Ferme la vanne d'eau si ouverte depuis 1 heure
  trigger:
  - platform: state
    entity_id:
    - switch.esp178_cde_ev_eau
    from: 'off'
    to: 'on'
    for:
      hours: 1
      minutes: 0
      seconds: 0
  condition: []
  action:
  - data:
      message: '{{states("sensor.date_time") }}{{-"\n"-}}EV eau ouverte depuis plus
        de 1 heure'
      title: Alarme EV Appoint d'eau Piscine
    action: notify.telegram
  - target:
      entity_id:
      - switch.esp178_cde_ev_eau
    action: switch.turn_off
    data: {}
  - action: select.select_option
    metadata: {}
    data:
      option: At_f
    target:
      entity_id: select.esp178_mode_fonct_appoint_eau
  mode: single
- id: '1617199790692'
  alias: 3_4_3 Piscine-Notification alarme niveau bas
  description: ' '
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.esp178_niv_bas
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition: []
  action:
  - data:
      title: ALARME
      message: Niveau bas Piscine
    action: notify.telegram
  - action: select.select_option
    data:
      option: At_f
    target:
      entity_id: select.esp178_mode_fonctionnement_filtration
  - data:
      message: Niveau bas piscine{{-"\n"-}}{{states("sensor.date_time") }}{{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Piscine Alarme Niveau Bas !!!
    action: notify.telegram
  mode: single
- id: '1617968589301'
  alias: '08-01-01 Alarmo  Activation Nuit '
  description: ''
  trigger:
  - platform: time
    at: input_datetime.heure_debut_alarme_porte
  condition: []
  action:
  - service: alarm_control_panel.alarm_arm_night
    target:
      entity_id: alarm_control_panel.alarmo
    data: {}
  mode: single
- id: '1617968698367'
  alias: 08-01-02 Alarmo Desactivation
  description: ''
  trigger:
  - platform: time
    at: input_datetime.heure_fin_alarme_porte
  condition: []
  action:
  - service: alarm_control_panel.alarm_disarm
    target:
      entity_id: alarm_control_panel.alarmo
    data: {}
  mode: single
- id: '1624083693650'
  alias: 3_2_1 Piscine-pH Validation Automatismes
  description: 'Valide les automations régulation pH au bout de 1 h de fonctionnement '
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.esp137_ppe_en_fonctionnement
    for:
      hours: 0
      minutes: 15
      seconds: 0
    to: 'on'
    from: 'off'
    id: ma_pump
  - platform: state
    entity_id:
    - binary_sensor.esp137_ppe_en_fonctionnement
    id: at_pump
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  - platform: state
    entity_id: input_boolean.regul_ph
    id: regule_ph_off
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ma_pump
      - condition: state
        entity_id: input_boolean.regul_ph
        state: 'on'
      sequence:
      - service: automation.turn_on
        target:
          entity_id:
          - automation.piscine_notification_ph
          - automation.3_2_2_piscine_ph_injection_v2
        data: {}
      - service: notify.telegram
        data:
          message: pH sonde= {{states('sensor.ph_stat_median')}} {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Activation Traitement pH !
    - conditions:
      - condition: trigger
        id: at_pump
      sequence:
      - service: automation.turn_off
        target:
          entity_id:
          - automation.piscine_notification_ph
          - automation.3_2_2_piscine_ph_injection_v2
        data: {}
    - conditions:
      - condition: trigger
        id: regule_ph_off
      sequence:
      - service: automation.turn_off
        target:
          entity_id:
          - automation.piscine_notification_ph
          - automation.3_2_2_piscine_ph_injection_v2
        data: {}
    default: []
  mode: single
- id: '1624381456670'
  alias: 3_1_5 Piscine-Pression haute
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.esp178_pression_filtre
    above: '1'
    for:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
  condition: []
  action:
  - data:
      message: Pression Haute = {{states("sensor.pression_filtre") }}{{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Piscine Alerte Pression Filtre !!!
    action: notify.telegram
  mode: single
- id: '1624864713180'
  alias: 3_3_5 Piscine-Cartouche Chlore
  description: Mémorisation du temps d'utilisation cartouche chlore hedbo- RAZ à la
    main
  trigger:
  - platform: time
    at: '23:50'
  condition: []
  action:
  - service: input_number.set_value
    data_template:
      entity_id: input_number.temps_cartouche_chlore
      value: '{% set a=states(''input_number.temps_cartouche_chlore'')|float %} {%
        set b=states(''sensor.ma_ppe_piscine_jour'')|float %} {{ (a + b)|round(2)
        }}'
  mode: single
- id: '1625162846851'
  alias: 3_3_6 Piscine-Temps utilisation cartouche chlore atteint
  description: ''
  trigger:
  - platform: template
    value_template: '{% set a=states(''input_number.temps_cartouche_chlore'') | float
      %}

      {% set b=states(''input_number.chlore_seuil_max_utilisation'') | float %}

      {{ a > b }}'
  condition: []
  action:
  - service: notify.telegram
    data:
      message: 'Tps Utilisation cart. Chlore = {{states(''input_number.temps_cartouche_chlore'')}}
        h {{-"\n"-}} Temps maxi:  {{states(''input_number.chlore_seuil_max_utilisation'')}}
        h {{-"\n"-}}{{states("sensor.date_time") }}'
      title: Piscine Alerte Cartouche Chlore à changer!!!
  mode: single
- id: '1629296468909'
  alias: Robot AMX435 Surveillance Pluviometrie
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.vp2_pluviometrie_moyenne
    above: input_number.seuil_pluie_stop_robot
    id: seuil_haut
  - platform: numeric_state
    entity_id: sensor.vp2_pluviometrie_moyenne
    id: seuil_bas
    below: input_number.seuil_pluie_stop_robot
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: seuil_haut
      sequence:
      - data: {}
        action: lawn_mower.dock
        target:
          device_id: 7808727539e5cd0a67cbd0484d1835d4
      - data:
          message: Retour Robot à la Base!!{{-"\n"-}} Pluvio Moyenne 12h = {{states('sensor.vp2_pluviometrie_moyenne')}}
            mm {{-"\n"-}} Seuil Stop robot= {{states('input_number.seuil_pluie_stop_robot')}}
            mm {{-"\n"-}}{{states("sensor.date_time") }}
          title: Robot-Début Alerte Meteo Pluie !!!
        action: notify.telegram
    - conditions:
      - condition: trigger
        id: seuil_bas
      sequence:
      - data: {}
        action: lawn_mower.start_mowing
        target:
          device_id: 80c6c60b578848a2d4bb2a1e06f07fb1
      - data:
          message: Validation Départ Robot!!{{-"\n"-}} Pluvio Moyenne 12h = {{states('sensor.vp2_pluviometrie_moyenne')}}
            mm {{-"\n"-}} Seuil Stop robot= {{states('input_number.seuil_pluie_stop_robot')}}
            mm {{-"\n"-}}{{states("sensor.date_time") }}
          title: Robot- Fin Alerte Meteo Pluie !!!
        action: notify.telegram
  mode: single
  trace:
    stored_traces: 10
- id: '1632232387237'
  alias: 05-01-01 Reseau Notification Nouvelle IP
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.myip
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition: []
  action:
  - service: notify.telegram
    data:
      message: 'Nouvelle IP: {{ states("sensor.myip")}} {{-"\n"-}}{{states("sensor.date_time")
        }}'
      title: Réseau:!!!
  - service: notify.telegram
    data:
      message: Nouvelle IP {{ states("sensor.myip")}}
      title: Reseau
  mode: single
- id: '1633075302563'
  alias: 3_1_2 Piscine-Hors-Gel
  description: ''
  trigger:
  - platform: time_pattern
    hours: /1
  - platform: state
    entity_id: input_boolean.hors_gel_valid
    id: hg_deval
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.vp2_temp_out
        below: input_number.hors_gel_inf_seuil2
      - condition: state
        entity_id: input_select.mode_fonctionnement_piscine
        state: Hiver
      - condition: state
        entity_id: input_boolean.hors_gel_valid
        state: 'on'
      sequence:
      - service: input_select.select_option
        data:
          option: Ma F
        target:
          entity_id: input_select.mode_fonctionnement_piscine
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel Seuil 2 Marc Ppe
      - delay:
          hours: 0
          minutes: 30
          seconds: 0
          milliseconds: 0
      - service: input_select.select_option
        target:
          entity_id: input_select.mode_fonctionnement_piscine
        data:
          option: At F
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - service: input_select.select_option
        target:
          entity_id: input_select.mode_fonctionnement_piscine
        data:
          option: Hiver
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel Seuil 2 Arret Ppe
    - conditions:
      - condition: numeric_state
        entity_id: sensor.vp2_temp_out
        below: input_number.hors_gel_inf_seuil1
      - condition: state
        entity_id: input_select.mode_fonctionnement_piscine
        state: Hiver
      - condition: state
        entity_id: input_boolean.hors_gel_valid
        state: 'on'
      sequence:
      - service: input_select.select_option
        data:
          option: Ma F
        target:
          entity_id: input_select.mode_fonctionnement_piscine
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel Seuil 1 Marc Ppe
      - delay:
          hours: 0
          minutes: 15
          seconds: 0
          milliseconds: 0
      - service: input_select.select_option
        target:
          entity_id: input_select.mode_fonctionnement_piscine
        data:
          option: Hiver
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel Seuil 1 Arret Ppe
    - conditions:
      - condition: trigger
        id: hg_deval
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.mode_fonctionnement_piscine
        data:
          option: Hiver
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Hors-Gel devalidé
    default: []
  mode: restart
  max: 10
- id: '1634204887702'
  alias: 3_2_3 Piscine-pH Notifications
  description: Notifie Ph bas, haut, anormal, bidon bas
  trigger:
  - platform: numeric_state
    entity_id: sensor.ph_stat_median
    below: '6.8'
    above: '0'
    id: ph_bas
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.ph_stat_median
    id: ph_haut
    above: '7.8'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.ph_stat_standard_deviation
    id: ph_mauvais
    above: '0.1'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: state
    entity_id:
    - binary_sensor.ph_niveau_bas_bidon
    id: niv_bas_bidon
    to: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition:
  - condition: state
    entity_id: switch.ppe_ph
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ph_bas
      sequence:
      - data:
          message: Ph Bas = {{states('sensor.ph_stat_median') }}{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte pH !!!
        action: notify.telegram
    - conditions:
      - condition: trigger
        id: ph_haut
      sequence:
      - data:
          message: Ph Haut = {{states('sensor.ph_stat_median') }}{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte pH !!!
        action: notify.telegram
    - conditions:
      - condition: trigger
        id: ph_mauvais
      sequence:
      - data:
          message: pH Mauvais-sonde à calibrer??{{-"\n"-}} Median = {{states("sensor.ph_stat_median")}}{{-"\n"-}}
            Deviation(S=0.01) = {{states("sensor.ph_stat_standard_deviation")}} {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Piscine Alerte pH !!!
        action: notify.telegram
    - conditions:
      - condition: trigger
        id: niv_bas_bidon
      sequence:
      - data:
          message: Volume Restant = {{(states("sensor.ph_volume_restant_bidon"))|round(2)
            }} l{{-"\n"-}}{{states("sensor.date_time") }}
          title: Piscine Alerte niveau Bas Bidon pH !!!
        action: notify.telegram
    default: []
  mode: single
- id: '1634222619535'
  alias: 3_1_3 Piscine-Notifications filtration
  description: Notification Debut, Fin filtration et mise à jour du fichier log "conso_piscine.csv"
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.esp178_ppe_en_fonctionnement
    from: 'off'
    to: 'on'
    id: ma_ppe
  - platform: state
    entity_id:
    - binary_sensor.esp178_ppe_en_fonctionnement
    id: at_ppe
    from: 'on'
    to: 'off'
  - platform: time
    at: '23:59'
    id: minuit
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ma_ppe
      sequence:
      - data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Début Filtration
        action: notify.telegram
    - conditions:
      - condition: trigger
        id: at_ppe
      sequence:
      - data:
          message: '{{states("sensor.date_time") }}'
          title: Piscine Fin de filtration
        action: notify.telegram
    - conditions:
      - condition: trigger
        id: minuit
      sequence:
      - data:
          message: 'du {{states("sensor.date_time") }} {{-"\n"-}} Temps de filtration:  {{states(''sensor.ma_ppe_piscine_jour'')}}{{-"\n"-}}Conso:
            {{states(''sensor.compteur_energie_piscine_jour_hp_hc'')}} kWh {{-"\n"-}}
            Tps Utilisation cart. Chlore: {{states(''input_number.temps_cartouche_chlore'')}}
            h'
          title: Piscine Rapport Fin de journée
        action: notify.telegram
    default: []
  mode: single
- id: '1634389653339'
  alias: 3_4_1 V0 Piscine-EV Appoint EAU
  description: 'Appoint EAU uniquement si volet ouvert depuis 15 mn  '
  trigger:
  - platform: state
    entity_id:
    - cover.volet_piscine
    to: open
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: vol_ouv
  - platform: state
    entity_id: input_boolean.ev_eau_piscine
    to: 'on'
    id: valid_ev
    from: 'off'
  - platform: state
    entity_id: input_boolean.ev_eau_piscine
    id: devalid_ev
    to: 'off'
    from: 'on'
  - platform: state
    entity_id: binary_sensor.tp_plein_lsh
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 20
    id: lsh_off
  - platform: time_pattern
    minutes: /5
    id: minute
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - vol_ouv
        - condition: state
          entity_id: binary_sensor.tp_plein_lsh
          state: 'on'
        - condition: state
          entity_id: switch.ev_eau
          state: 'off'
      sequence:
      - target:
          entity_id: switch.ev_eau
        data: {}
        action: switch.turn_on
      - data:
          message: Ouverture EV Eau {{-"\n"-}}{{states("sensor.date_time") }}
          title: Piscine Appoint Eau!
        action: notify.telegram
    - conditions:
      - condition: state
        entity_id: switch.ev_eau
        state: 'on'
      - condition: or
        conditions:
        - condition: trigger
          id: devalid_ev
        - condition: trigger
          id: lsh_off
      sequence:
      - target:
          entity_id: switch.ev_eau
        data: {}
        action: switch.turn_off
      - data:
          message: Fermeture EV Eau {{-"\n"-}}{{states("sensor.date_time") }}
          title: Piscine Appoint Eau!
        action: notify.telegram
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - minute
        - condition: state
          entity_id: switch.ev_eau
          state: 'off'
      sequence:
      - target:
          entity_id: switch.ev_eau
        data: {}
        action: switch.turn_off
    default: []
  mode: single
  trace:
    stored_traces: 10
- id: '1634569261594'
  alias: 02-01-04 Alarme Blueprints Notification Status PAC
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_status_pac
      alert_state: 'off'
      alert_action:
      - service: notify.telegram
        data:
          message: PAC Off Line{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Reseau !!!
      - service: notify.telegram
        data:
          message: PAC Off Line {{-"\n"-}}{{states("sensor.date_time") }}
      resolved_action:
      - service: notify.telegram
        data:
          message: PAC On Line{{-"\n"-}} {{states("sensor.date_time") }}
          title: Etat RESEAU!!!
      - service: notify.telegram
        data:
          message: PAC On Line{{-"\n"-}}{{states("sensor.date_time") }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 600
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 300
      max_alerts: 100
      condition_entity: input_boolean.inhib_alarme_pac
- id: '1634569580188'
  alias: 02-01-06 Alarme Blueprints Notification Porte Cellier Ouverte
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_porte_cellier
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Porte Cellier ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
      - service: notify.telegram
        data:
          message: Porte Cellier ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Porte Cellier OK{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Portes!!!
      - service: notify.telegram
        data:
          message: Porte Cellier OK{{-"\n"-}}{{states("sensor.date_time") }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 600
      resolved_message: Alerte {{ entity_name }} Résolu
      max_alerts: 100
      initial_delay: 300
- id: '1634569751638'
  alias: 02-01-08 Alarme Blueprints Notification Porte Sous Sol Ouverte
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      sensor_entity: binary_sensor.alarme_porte_sous_sol
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Porte Sous Sol ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
      resolved_action:
      - service: notify.telegram
        data:
          message: Porte Sous Sol OK{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Portes!!!
      notify_message: Porte Sous _Sol Ouverte
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      resolved_message: Porte Sous Sol Ok
      initial_delay: 300
      condition_entity_state: 'off'
      max_alerts: 100
      repeat_delay: 600
- id: '1634569897913'
  alias: 02-01-07 Alarme Blueprints Notification Porte Garage Ouverte
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_porte_garage
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Porte Garage ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
          data:
            inline_keyboard:
            - Ferme Porte:/ferme_garage, Cancel:/cancel
      - service: notify.telegram
        data:
          message: Porte Garage ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Porte Garage OK{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Portes!!!
      - service: notify.telegram
        data:
          message: Porte Garage OK{{-"\n"-}}{{states("sensor.date_time") }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 600
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 300
      max_alerts: 100
- id: '1634570304569'
  alias: 02-01-09 Al Bp Notif Discordance PAC
  description: ' Surveillance discordance PAC entre l''état du thermostat et l''état
    du switch de commande '
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_discord_pac
      alert_state: 'off'
      alert_action:
      - service: notify.telegram
        data:
          message: Discordance PAC=> PU= {{states("sensor.ecocompteur_pac")}} et Pilotage=
            {{states("switch.altherma")}}{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat PAC !!!
      - service: notify.telegram
        data:
          message: Discordance PAC=> PU= {{states("sensor.ecocompteur_pac")}} et Pilotage=
            {{states("switch.altherma")}}{{-"\n"-}}{{states("sensor.date_time") }}
      resolved_action:
      - service: notify.telegram
        data:
          message: PAC OK=> PU= {{states("sensor.ecocompteur_pac")}} et Pilotage=
            {{states("switch.altherma")}}{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat PAC !!!
      - service: notify.telegram
        data:
          message: PAC OK=> PU= {{states("sensor.ecocompteur_pac")}} et Pilotage=
            {{states("switch.altherma")}}{{-"\n"-}}{{states("sensor.date_time") }}
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 1200
      max_alerts: 100
      initial_delay: 1200
      dismiss_entity: input_boolean.inhib_alarme_pac
      resolved_message: Alerte {{ entity_name }} Résolu
      notify_message: Alerte {{ entity_name }}Déclenché
- id: '1634571065075'
  alias: 02-01-10 Al Bp Notif Porte frigo garage ouverte
  description: '# Alarme porte frigo garage ouverte   '
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.porte_frigo
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Porte Frigo Garage Ouverte {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
      - service: notify.telegram
        data:
          message: Porte Frigo Garage Ouverte {{-"\n"-}}{{states("sensor.date_time")
            }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Porte Frigo Garage Fermée {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
      - service: notify.telegram
        data:
          message: Porte Frigo Garage Fermée {{-"\n"-}}{{states("sensor.date_time")
            }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 60
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 60
      max_alerts: 100
- id: '1634571983587'
  alias: 02-01-11 Al Bp Notif Temp congelo haute
  description: '# Surveillance de la temperature du congelateur  '
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_temp_congelo_haute
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: T° Haute Congelo = {{states("sensor.temp_congelo_garage") }}°C
            {{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Congelo !!!
      - service: notify.telegram
        data:
          message: T° Haute Congelo = {{states("sensor.temp_congelo_garage") }}°C
            {{-"\n"-}}{{states("sensor.date_time") }}
      resolved_action:
      - service: notify.telegram
        data:
          message: T° Congelo normale = {{states("sensor.temp_congelo_garage") }}°C
            {{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Congelo !!!
      - service: notify.telegram
        data:
          message: T° Congelo normale = {{states("sensor.temp_congelo_garage") }}°C
            {{-"\n"-}}{{states("sensor.date_time") }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 300
      max_alerts: 100
- id: '1634621594490'
  alias: 02-01-14 Al Bp Notif Def Com VP2
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: input_boolean.com_vp2
      alert_state: 'Off'
      alert_action:
      - service: notify.telegram
        data:
          message: VP2 Off Line{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Reseau !!!
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.rebootweeks
      resolved_action:
      - service: notify.telegram
        data:
          message: VP2 On Line{{-"\n"-}} {{states("sensor.date_time") }}
          title: Etat RESEAU!!!
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      initial_delay: 120
      max_alerts: 25
      resolved_message: Alerte {{ entity_name }} Résolu
      notify_message: Alerte {{ entity_name }}Déclenché
- id: '1634916685737'
  alias: 01-01-03 Pusch gitub
  description: pousse vers githtub
  trigger:
  - platform: time
    at: 02:00
  condition: []
  action:
  - service: shell_command.push_to_github
    data: {}
  mode: single
- id: '1637073026237'
  alias: 04-02-02 Volet Balise ouverture sous sol
  description: ''
  trigger:
  - platform: tag
    tag_id: 6e75d49a-ec3d-4bfc-bd4f-2d1ab41b7cb1
  condition: []
  action:
  - service: cover.open_cover
    target:
      entity_id: cover.garage_soussol
    data: {}
  mode: single
- id: '1637074521273'
  alias: 04-02-01 Volet Balise ouverture garage
  description: ''
  trigger:
  - platform: tag
    tag_id: dca56861-8baf-4881-a5c8-4b99d90c3716
  condition: []
  action:
  - service: cover.open_cover
    target:
      entity_id: cover.garage_rdc
    data: {}
  mode: single
- id: '1638119466260'
  alias: 02-01-13 Al Bp Notif Def Com Linky
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: input_boolean.com_linky
      alert_state: 'off'
      alert_action:
      - service: notify.telegram
        data:
          message: Com Linky off Line{{-"\n"-}}{{states("sensor.date_time") }}
          title: Etat Reseau !!!
      resolved_action:
      - service: notify.telegram
        data:
          message: Com Linky On Line{{-"\n"-}} {{states("sensor.date_time") }}
          title: Etat RESEAU!!!
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      initial_delay: 1
      max_alerts: 100
      resolved_message: Alerte {{ entity_name }} Résolu
      notify_message: Alerte {{ entity_name }}Déclenché
- id: '1638433932226'
  alias: 01-02-01 VMC Niv0 Automatismes
  description: ' '
  trigger:
  - platform: state
    entity_id: input_select.vmc_niv0
    id: mode
  - platform: time
    at: input_datetime.heure_vmc_niv0_ma
  - platform: time
    at: input_datetime.heure_vmc_niv0_at
  - platform: numeric_state
    entity_id: sensor.esp145_conc_particules_2_5um
    id: pm2.5sh
    above: input_number.seuil_haut_pm2_5
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.esp145_mh_z19_co2_value
    id: co2sh
    above: input_number.seuil_haut_co2
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.esp145_conc_particules_2_5um
    id: pm2.5sth
    above: input_number.seuil_tres_haut_pm2_5
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.esp145_mh_z19_co2_value
    id: co2sth
    above: input_number.seuil_tres_haut_co2
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: sun
    event: sunrise
    offset: 0
    id: levee_soleil
  - platform: template
    value_template: '{% set temp=states(''sensor.vp2_temp_out'') | float(0) %}

      {% set saison=states(''sensor.season'') | default("") %}

      {% set mode=states(''input_select.vmc_niv0'') | default("") %}

      {% set soleil=states(''sun.sun'') | default("") %}

      {{ (temp< 5) and (saison == "autumn" or saison=="winter") and (mode=="CO2 PM2.5")
      and (soleil == ''below_horizon'')}}

      '
    id: temp_basse
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: Hor
      sequence:
      - choose:
        - conditions:
          - condition: time
            after: input_datetime.heure_vmc_niv0_ma
            before: input_datetime.heure_vmc_niv0_at
          sequence:
          - service: switch.turn_on
            target:
              entity_id:
              - switch.relais_cde_vmc_niv0_on_off
            data: {}
        default:
        - service: switch.turn_off
          target:
            entity_id:
            - switch.relais_cde_vmc_niv0_on_off
          data: {}
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: CO2 PM2.5
      - condition: or
        conditions:
        - condition: trigger
          id: pm2.5sh
        - condition: trigger
          id: co2sh
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.relais_cde_vmc_niv0_on_off
        data: {}
      - service: switch.turn_on
        target:
          entity_id: switch.esp136_vit_2
        data: {}
      - delay:
          hours: 0
          minutes: 30
          seconds: 0
          milliseconds: 0
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: CO2 PM2.5
      - condition: or
        conditions:
        - condition: trigger
          id: pm2.5sth
        - condition: trigger
          id: co2sth
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.relais_cde_vmc_niv0_on_off
        data: {}
      - service: switch.turn_on
        target:
          entity_id: switch.esp136_vit_3
        data: {}
      - delay:
          hours: 0
          minutes: 15
          seconds: 0
          milliseconds: 0
      - service: switch.turn_on
        target:
          entity_id: switch.esp136_vit_2
        data: {}
      - delay:
          hours: 0
          minutes: 30
          seconds: 0
          milliseconds: 0
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: Arret
      sequence:
      - service: switch.turn_off
        target:
          entity_id:
          - switch.relais_cde_vmc_niv0_on_off
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.vmc_niv0
        state: Marche
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.relais_cde_vmc_niv0_on_off
        data: {}
    - conditions:
      - condition: trigger
        id:
        - temp_basse
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.relais_cde_vmc_niv0_on_off
    - conditions:
      - condition: trigger
        id:
        - levee_soleil
      - condition: state
        entity_id: input_select.vmc_niv0
        state: CO2 PM2.5
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.relais_cde_vmc_niv0_on_off
    default: []
  mode: single
  trace:
    stored_traces: 10
- id: '1642614758763'
  alias: 06-01-00 Energie Changement HP<->HC
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.linky_n_tarif
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: sensor.linky_n_tarif
          state: '1'
        - condition: state
          entity_id: sensor.linky_n_tarif
          state: '3'
        - condition: state
          entity_id: sensor.linky_n_tarif
          state: '5'
      sequence:
      - service: select.select_option
        data:
          option: hc
        target:
          entity_id:
          - select.compteur_energie_pac
          - select.compteur_energie_piscine_jour
          - select.compteur_energie_autres_jour
          - select.compteur_energie_onduleur_jour
          - select.compteur_energie_vmc_jour
          - select.compteur_energie_sdb_jour
          - select.compteur_energie_wc_jour
          - select.compteur_energie_cuisine_jour
          - select.compteur_energie_mal_jour
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: sensor.linky_n_tarif
          state: '2'
        - condition: state
          entity_id: sensor.linky_n_tarif
          state: '4'
        - condition: state
          entity_id: sensor.linky_n_tarif
          state: '6'
      sequence:
      - service: select.select_option
        data:
          option: hp
        target:
          entity_id:
          - select.compteur_energie_pac
          - select.compteur_energie_piscine_jour
          - select.compteur_energie_autres_jour
          - select.compteur_energie_onduleur_jour
          - select.compteur_energie_vmc_jour
          - select.compteur_energie_sdb_jour
          - select.compteur_energie_wc_jour
          - select.compteur_energie_cuisine_jour
          - select.compteur_energie_mal_jour
    default: []
  mode: single
- id: '1642958036645'
  alias: 02-01-05 Alarme Blueprints Notification Petite Porte Sous Sol
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_petite_porte_sous_sol
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: Petite Porte Sous-Sol ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes !!!
      - service: notify.telegram
        data:
          message: Petite Porte Sous-Sol ouverte après le coucher du soleil{{-"\n"-}}{{states("sensor.date_time")
            }}
      resolved_action:
      - service: notify.telegram
        data:
          message: Petite Porte Sous-Sol OK{{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Etat Portes!!!
      - service: notify.telegram
        data:
          message: Petite Porte Sous-Sol OK{{-"\n"-}}{{states("sensor.date_time")
            }}
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 600
      resolved_message: Alerte {{ entity_name }} Résolu
      max_alerts: 100
      initial_delay: 300
- id: '1644765337710'
  alias: 00-0-0 Démarrage System
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: script.create_all_automations_group
    data: {}
  - service: script.create_all_scripts_group
    data: {}
  mode: single
- id: '1653294353395'
  alias: 04-03-03 sous sol position ouverte
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.porte_ssol_ouverte
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 100
      position_type: target
      entity_id: cover.porte_sous_sol
  mode: single
- id: '1653294805612'
  alias: 04-03-02 garage position fermee
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.porte_garage_fermee
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 0
      position_type: target
      entity_id: cover.porte_garage
  mode: single
- id: '1653294983774'
  alias: 04-03-04 sous sol position fermee
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.porte_ssol_fermee
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 0
      position_type: target
      entity_id: cover.porte_sous_sol
  mode: single
- id: '1653295223147'
  alias: 04-03-01 garage position ouverte
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.porte_garage_ouverte
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 100
      position_type: target
      entity_id: cover.porte_garage
  mode: single
- id: '1653410044804'
  alias: 04-03-06 volet amis sud grand position ouvert
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fdc_volet_amis_sud_grand
    to: 'off'
    from: 'on'
  condition: []
  action:
  - service: cover_rf_time_based.set_known_position
    data:
      confident: true
      position: 100
      position_type: target
      entity_id: cover.volet_amis_sud_grand_p
  mode: single
- id: '1655448600753'
  alias: 04-01-03 Volet-Suivi Azimuth Soleil
  description: Ouvre et ferme les volets en fonction de la course (azimuth) du soleil
  trigger:
  - platform: template
    value_template: '{% set a=states(''binary_sensor.position_soleil_matin'') %}

      {% set b=states(''sensor.vp2_radiation_moyenne'') | float(default=0) %}

      {% set c=states(''input_number.radiation_seuil_ferm_volet'') | float(default=0)
      %}

      {{ a == "on" and b>=c}}'
    id: ferm_matin
  - platform: state
    entity_id:
    - binary_sensor.position_soleil_midi
    id: ouv_midi
    to: 'on'
  - platform: template
    value_template: '{% set a=states(''binary_sensor.position_soleil_am'') %}

      {% set b=states(''sensor.vp2_radiation_moyenne'') | float(default=0) %}

      {% set c=states(''input_number.radiation_seuil_ferm_volet'') | float(default=0)
      %}

      {{ a == "on" and b>=c}}'
    id: ferm_am
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ferm_matin
      sequence:
      - service: cover.set_cover_position
        data:
          position: 10
        target:
          entity_id:
          - cover.volet_sdb_p
          - cover.volet_amis_nord_p
    - conditions:
      - condition: trigger
        id: ouv_midi
      sequence:
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.volet_sdb_p
      - condition: state
        entity_id: input_boolean.presence_amis_ch_nord
        state: 'off'
      - service: cover.open_cover
        target:
          entity_id:
          - cover.volet_amis_nord_p
        data: {}
    - conditions:
      - condition: trigger
        id: ferm_am
      sequence:
      - service: cover.set_cover_position
        data:
          position: 10
        target:
          entity_id:
          - cover.volet_amis_sud_p
          - cover.volet_ch_parent_p
    default: []
  mode: single
- id: '1656059504847'
  alias: Robot AMX435 Al Bp Notif Tps lames atteint
  description: Surveillance du temps d'utilisation des lame du robot
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.amx435x_temps_usage_lames_atteint
      alert_state: 'on'
      alert_action:
      - data:
          message: '{{states("sensor.date_time") }}{{-"\n"-}}Lames robot à remplacer
            = {{states("sensor.am435x_awd_duree_d_utilisation_des_lames")}} h'
          title: Alarme Robot AMX435X!!!
        action: notify.telegram
      resolved_action:
      - data:
          message: '{{states("sensor.date_time") }} {{-"\n"-}}Fin notification lames
            robot à remplacer'
          title: Fin Alarme Robot AMX435X!!!
        action: notify.telegram
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 3600
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 1
      max_alerts: 10
- id: '1659166164037'
  alias: 3_2_2 Piscine-pH Injection V2
  description: Injection pH v2
  trigger:
  - platform: state
    entity_id:
    - input_select.mode_fonct_regulation_ph
  - platform: time
    at: '10:00:00'
    id: 11h
  - platform: time
    at: '15:00:00'
    id: 15h
  - platform: state
    entity_id:
    - binary_sensor.esp137_ppe_en_fonctionnement
    from: 'on'
    to: 'off'
    id: at_filtration
  - platform: state
    entity_id:
    - input_button.declenche_regule_ph
    id: bpregulation
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.mode_fonct_regulation_ph
        state: Auto
      - condition: template
        value_template: '{% set m=states(''sensor.ph_piscine_ph'') | float %}

          {% set c=states(''input_number.ph_cible'') | float %}

          {{ m > c }}'
      - condition: numeric_state
        entity_id: sensor.ph_piscine_ph
        above: '0'
      - condition: state
        state: 'on'
        entity_id: binary_sensor.esp137_ppe_en_fonctionnement
        for:
          hours: 0
          minutes: 15
          seconds: 0
      - condition: trigger
        id:
        - 11h
        - 15h
        - bpregulation
      sequence:
      - target:
          entity_id: input_number.ph_vol_ph_moins_a_injecter
        data_template:
          value: '{% set m=states(''sensor.ph_piscine_ph'') | float(default=0) %}
            {% set x=states(''input_number.simul_ph'') | float(default=0) %} {% set
            c=states(''input_number.ph_cible'') | float(default=0) %} {% set mp=0.2
            %} {% set ve=0.2 %} {% set va=10 %} {% set vb=50 %} {% set de=states(''input_number.ph_debit_ppe'')
            | float(default=0) %} {% set coef=states(''input_number.ph_coefficient_injection_ph_moins'')
            | float(default=0) %} {% set q=((m-c)/ve*(vb/va)*mp*coef/100)|round(2)
            %} {% if q < 0 %} {{ 0 }} {% else %} {{ (q) }} {% endif %}'
        action: input_number.set_value
      - target:
          entity_id: input_number.ph_duree_inject_s
        data_template:
          value: '{% set q=states(''input_number.ph_vol_ph_moins_a_injecter'') | float(default=0)
            %} {% set de=states(''input_number.ph_debit_ppe'') | float(default=0)
            %} {% set tps=(q*3600/de)|round(2) %} {% if tps < 0 %} {{ 0 }} {% else
            %} {{ (tps%60)|round(0)|int(default=0) }} {% endif %}'
        action: input_number.set_value
      - target:
          entity_id: input_number.ph_duree_inject_mn
        data_template:
          value: '{% set q=states(''input_number.ph_vol_ph_moins_a_injecter'') | float(default=0)
            %} {% set de=states(''input_number.ph_debit_ppe'') | float(default=0)
            %} {% set tps=(q*3600/de)|round(2) %} {% if tps < 0 %} {{ 0 }} {% else
            %} {{ (tps//60)|round(0)|int(default=0) }} {% endif %}'
        action: input_number.set_value
      - data:
          message: '{{states("sensor.date_time") }}{{-"\n"-}} pH sonde= {{states(''sensor.ph_piscine_ph'')}}
            {{-"\n"-}} Cible pH= {{states(''input_number.ph_cible'')}} {{-"\n"-}}
            Vol à Injecter={{states(''input_number.ph_vol_ph_moins_a_injecter'')}}l
            {{-"\n"-}} Durée injection= {{states(''input_number.ph_duree_inject_mn'')}}mn-{{states(''input_number.ph_duree_inject_s'')}}s
            {{-"\n"-}}     Poids du bidon= {{states(''sensor.esp129_poids_ph_moins'')}}kg'
          title: Piscine Début injection pH !!!
        action: notify.telegram
      - target:
          entity_id:
          - switch.ppe_ph
        data: {}
        action: switch.turn_on
      - delay: 00:{{ states('input_number.ph_duree_inject_mn')|int}}:{{ states('input_number.ph_duree_inject_s')
          | int }}
      - target:
          entity_id: switch.ppe_ph
        data: {}
        action: switch.turn_off
      - data:
          message: pH sonde= {{states('sensor.ph_piscine_ph')}} {{-"\n"-}} Poids du
            bidon= {{states('sensor.esp129_poids_ph_moins')}}kg {{-"\n"-}} {{states("sensor.date_time")
            }}
          title: Piscine Fin injection pH !!!
        action: notify.telegram
    - conditions:
      - condition: state
        entity_id: input_select.mode_fonct_regulation_ph
        state: Ma Forcée
      sequence:
      - target:
          entity_id:
          - switch.ppe_ph
        data: {}
        action: switch.turn_on
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.mode_fonct_regulation_ph
          state: At Forcé
        - condition: trigger
          id:
          - at_filtration
      sequence:
      - target:
          entity_id: switch.ppe_ph
        data: {}
        action: switch.turn_off
  mode: single
- id: '1669919504303'
  alias: 02-01-16 Alarme BP Temp basse Chalet
  description: '# Surveillance de la temperature du chalet'
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.alarme_temp_chalet_basse
      alert_state: 'on'
      alert_action:
      - service: notify.telegram
        data:
          message: T° Basse Chalet = {{states("sensor.pt100_0_chalet") }}°C {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Alarme Gel Chalet!!!
      resolved_action:
      - service: notify.telegram
        data:
          message: T° Basse Chalet = {{states("sensor.pt100_0_chalet") }}°C {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: Fin Alarme Gel chalet !!!
      notify_message: Alerte {{ entity_name }}Déclenché
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      resolved_message: Alerte {{ entity_name }} Résolu
      initial_delay: 300
      max_alerts: 10
- id: '1671811895133'
  alias: 10-00-00 Spot Terrasse
  description: ''
  trigger:
  - device_id: 191305ef12c4538ae3dc593438f5e19d
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: button
  - platform: event
    event_type: motioneye.motion_detected
    event_data:
      device_id: ae78c8213b3a95e1ef3d7ac161697e42
  condition: []
  action:
  - type: toggle
    device_id: 216e88150c3bb7fa0e5a68ac407485f9
    entity_id: switch.spots_ext_sud
    domain: switch
  mode: single
- id: '1678531257946'
  alias: 06-01-02 Surveillance Puissance Onduleur Bureau la nuit
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.pc_lidl_2023_c_active_power
    above: 20
  condition:
  - condition: time
    after: '23:00:00'
    before: 07:00:00
  action:
  - data:
      message: PC Bureau Allumé apres 23:00{{-"\n"-}}{{states("sensor.date_time")
        }}
    action: notify.telegram
  mode: single
- id: '1686145474191'
  alias: 02-01-17 Al Bp Def Com FREE
  description: Blue Print
  use_blueprint:
    path: pavax/nagging_alert_notification.yaml
    input:
      condition_entity_state: 'on'
      sensor_entity: binary_sensor.freebox_server_wan_status
      alert_state: 'off'
      alert_action:
      - service: notify.telegram
        data:
          message: Freebox off Line{{-"\n"-}}{{states("sensor.date_time") }}
          title: FREE NOK !!!
      resolved_action:
      - service: notify.telegram
        data:
          message: Freebox On Line{{-"\n"-}} {{states("sensor.date_time") }}
          title: FREE OK!!!
      notify_device: 62cdce054a9d3448484b4df8e44cc499
      repeat_delay: 300
      max_alerts: 10
      resolved_message: Alerte {{ entity_name }} Résolu
      notify_message: Alerte {{ entity_name }}Déclenché
      initial_delay: 180
- id: '1687859491524'
  alias: 00-00-03 Temperature haute stérilisateur
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.esp127_temperature
    above: 98
  condition: []
  action:
  - service: notify.telegram
    data:
      message: T° = {{states('sensor.esp127_temperature') }}{{-"\n"-}}{{states("sensor.date_time")
        }}
      title: Temperature Haute Stérilisateur !!!
  mode: single
- id: '1690355630909'
  alias: 00-00-04 Restart Addon UPS si en défaut
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.myups_status
    to: unavailable
    for:
      hours: 0
      minutes: 2
      seconds: 0
  - platform: state
    entity_id:
    - binary_sensor.network_ups_tools_en_cours_d_execution
    from: 'off'
  - platform: state
    entity_id:
    - binary_sensor.network_ups_tools_en_cours_d_execution
    to: unavailable
  - platform: state
    entity_id:
    - binary_sensor.network_ups_tools_en_cours_d_execution
    to: unknown
  - platform: time
    at: 00:30:00
  condition: []
  action:
  - service: hassio.addon_restart
    data:
      addon: a0d7b954_nut
  mode: single
- id: '1690434314772'
  alias: 06-02-02 MP2 Memorisation Production Jour
  description: ''
  trigger:
  - platform: time
    at: '22:05:00'
    id: '22:05'
  - platform: time
    at: 03:48:00
    id: 3h48
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - 3h48
      sequence:
      - data_template:
          entity_id: input_number.mp2_memoire_estimation_production_jour
          value: '{% set a=states(''sensor.mp2_prod_vrm_total_mqtt'')|float %}  {{a
            }}'
        action: input_number.set_value
    - conditions:
      - condition: trigger
        id:
        - '22:05'
      sequence:
      - data:
          message: '{{states("sensor.date_time") }}{{-"\n"-}} Prévi Prod PV du Jour={{states(''input_number.mp2_memoire_estimation_production_jour'')}}
            kwh{{-"\n"-}} Prod PV du Jour={{states(''sensor.mp2_total_energie_produite_jour'')}}
            kwh{{-"\n"-}} Prévi Prod PV Demain={{states(''sensor.mp2_prod_vrm_total_mqtt'')}}
            kwh{{-"\n"-}} SOC Actuel={{states(''sensor.mp2_soc_mqtt'')}} %{{-"\n"-}}
            SOC Cible= {{states(''sensor.mp2_cible_soc_par_mqtt'')}} %{{-"\n"-}}'
          title: Prévision production PV
        action: notify.telegram
  mode: single
- id: '1698053985865'
  alias: 10-01-00 Spot Ext Cui old
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 193f4cea2f12db0ab1a4d044df803df3
    entity_id: b182f27a8204167b3f3b1893ec2d2196
    domain: binary_sensor
  condition:
  - condition: sun
    before: sunrise
    after: sunset
    enabled: true
  - condition: state
    entity_id: input_boolean.nuit_jour
    state: 'off'
  action:
  - type: turn_on
    device_id: c7b28db8c025b2f0bd975382bc4011f0
    entity_id: 6cf8b08e53c983c0c298cedd8a864449
    domain: switch
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - type: turn_off
    device_id: c7b28db8c025b2f0bd975382bc4011f0
    entity_id: 6cf8b08e53c983c0c298cedd8a864449
    domain: switch
    enabled: true
  mode: single
- id: '1698142750238'
  alias: Notification niveau bas puits
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.esp174_niveau_remplissage_puit
    for:
      hours: 0
      minutes: 5
      seconds: 0
    below: 0.8
  condition: []
  action:
  - data:
      message: '{{states("sensor.date_time") }}{{-"\n"-}} Niveau Puit {{states(''sensor.esp174_niveau_puit'')}}
        ml'
      title: Niveau eau puit inferieur à 0.8 ml depuis 10mn
    action: notify.telegram
  mode: single
- id: '1698395745098'
  alias: 00-00-01 Redemarage NODERED
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /3
  condition: []
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.node_red_en_cours_d_execution
      for:
        hours: 0
        minutes: 0
        seconds: 0
      state: 'on'
    then: []
    else:
    - service: hassio.addon_restart
      data:
        addon: a0d7b954_nodered
  mode: single
- id: '1698923695048'
  alias: Alerte Météo actualisation
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  - platform: time_pattern
    hours: /6
  - platform: time
    at: 06:30:00
  - platform: time
    at: '16:30:00'
  condition: []
  action:
  - data:
      entity_id:
      - sensor.meteo_france_alertes_81
    target:
      entity_id:
      - sensor.meteo_france_alertes_81
    action: homeassistant.update_entity
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - data:
      entity_id:
      - sensor.meteo_france_alerts_picture_today
    target:
      entity_id:
      - sensor.meteo_france_alerts_picture_today
    action: homeassistant.update_entity
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - data:
      entity_id:
      - sensor.meteo_france_alerts_picture_tomorrow
    target:
      entity_id:
      - sensor.meteo_france_alerts_picture_tomorrow
    action: homeassistant.update_entity
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - data:
      entity_id:
      - camera.mf_alerte_today
      - camera.mf_alerte_tomorrow
    target:
      entity_id:
      - camera.mf_alerte_today
      - camera.mf_alerte_tomorrow
    action: homeassistant.update_entity
  mode: single
- id: '1699429641790'
  alias: 00-00-02 Backup total HA 1:00 du matin
  description: ''
  triggers:
  - at: 02:00:00
    trigger: time
  conditions: []
  actions:
  - data:
      compressed: true
      location: truenas
    action: hassio.backup_full
  mode: single
- id: '1700469604629'
  alias: 06-01-01 Energie Asservissements Tarifs Tempos
  description: 'Si HP Rouge->Consigne Economique (15°)

    Si HC->Consigne Confort (20°)

    Si HP->Consigne Réduite (19°)'
  trigger:
  - platform: state
    entity_id:
    - sensor.linky_n_tarif
    to: '1'
    id: HC Bleu
  - platform: state
    entity_id:
    - sensor.linky_n_tarif
    to: '2'
    id: HP Bleu
  - platform: state
    entity_id:
    - sensor.linky_n_tarif
    to: '3'
    id: HC Blanc
  - platform: state
    entity_id:
    - sensor.linky_n_tarif
    to: '4'
    id: HP Blanc
  - platform: state
    entity_id:
    - sensor.linky_n_tarif
    to: '6'
    id: hprouge
  - platform: state
    entity_id:
    - sensor.linky_n_tarif
    id: sortiehprouge
    from: '6'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - hprouge
      sequence:
      - data:
          message: '{{states("sensor.date_time") }}'
          title: Consigne PAC= 18 °C car Passage HP ROUGE FORCAGE ARRET PISCINE
        action: notify.telegram
      - action: switch.turn_on
        target:
          entity_id: switch.esp178_ent_arret_force
        data: {}
      - target:
          entity_id: input_number.pac_nr_input_consigne_temperature
        data:
          value: 18
        action: input_number.set_value
    - conditions:
      - condition: trigger
        id:
        - sortiehprouge
      sequence:
      - data:
          message: '{{states("sensor.date_time") }}'
          title: Consigne PAC=20°C car sortie HP ROUGE
        action: notify.telegram
      - target:
          entity_id: input_number.pac_nr_input_consigne_temperature
        data:
          value: 20
        action: input_number.set_value
      - action: switch.turn_off
        target:
          entity_id:
          - switch.esp178_ent_arret_force
        data: {}
  mode: single
  trace:
    stored_traces: 15
- id: '1700839832402'
  alias: Update Group-Uptime_kuma
  trigger:
  - platform: homeassistant
    event: start
  - platform: event
    event_type: call_service
    event_data:
      domain: group
      service: reload
  action:
  - service: group.set
    data_template:
      name: uptime_kuma_3
      object_id: uptime_kuma_3
      entities: "{% set ns = namespace(entities=[]) %} {% for s in states.sensor if
        s.object_id.endswith('uptimekuma_') %}\n  {% set ns.entities = ns.entities
        + [ s.entity_id ] %}\n{% endfor %} {{ ns.entities }}      "
- id: '1702130253915'
  alias: 01-03-00 PAC Chauffage Salon Asservissement HP-HC V Loi Eau
  description: 'Si HP Rouge ou (SOC<25 et HP) ->Delta P =-5°

    Si HC->Delta P = 0°'
  trigger:
  - platform: state
    entity_id:
    - sensor.linky_libelle_tarif_fournisseur_en_cours
    to: HP ROUGE
    id: hprouge
  - platform: state
    entity_id:
    - sensor.linky_ptec
    id: hc
    to: HC..
    from: HP..
  - platform: state
    entity_id:
    - sensor.linky_ptec
    id: hp
    to: HP..
    from: HC..
  - platform: numeric_state
    entity_id:
    - sensor.mp2_soc_mqtt
    below: 25
    id: soc
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - hprouge
      sequence:
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Decalage Temp Sort PAC de {{ states('number.temperature_control')
            | float(0) }}°C car HP ROUGE
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id:
          - input_boolean.piscine_arret_force
      - service: input_number.set_value
        data:
          value: -5
        target:
          entity_id: input_number.pac_nr_input_decalage_temperature
    - conditions:
      - condition: trigger
        id:
        - soc
      sequence:
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Decalage Temp Sort PAC de {{ states('number.temperature_control')
            | float(0) }}°C car SOC={{ states('sensor.mp2_soc_mqtt') | float(0) }}<
            25%
      - service: input_number.set_value
        data:
          value: -5
        target:
          entity_id: input_number.pac_nr_input_decalage_temperature
    - conditions:
      - condition: trigger
        id:
        - hc
      sequence:
      - service: notify.telegram
        data:
          message: '{{states("sensor.date_time") }}'
          title: Decalage Temp Sort PAC de {{ states('number.temperature_control')
            | float(0)}} car passage en HC
      - service: input_number.set_value
        data:
          value: 0
        target:
          entity_id: input_number.pac_nr_input_decalage_temperature
  mode: single
  trace:
    stored_traces: 15
- id: '1706170202385'
  alias: Ecran01 Eteint ecran toutes x mn
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /30
  condition: []
  action:
  - data:
      topic: hasp/ecran01/command
      payload: backlight {"state":"true","brightness":10}
    enabled: false
    action: mqtt.publish
  - data:
      topic: hasp/ecran01/config/gui
      payload: '{"idle2":20}'
    enabled: false
    action: mqtt.publish
  - type: turn_off
    device_id: 31203080ff3e67d781d95be03b42e98e
    entity_id: caf58cffba51ee848ade4eaa4c57a127
    domain: light
  mode: single
- id: '1706466237260'
  alias: 04-01-01 Volet Automatismes RTS
  description: 'Ete/Hiver/Absent '
  trigger:
  - platform: state
    entity_id:
    - input_boolean.nuit_jour
    from: 'on'
    to: 'off'
    id: jour->nuit
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: time
    at: input_datetime.horaire_ete_volet_ouv
    id: heure_ouv
  - platform: time
    at: input_datetime.horaire_ete_volet_ferm
    id: heure_ferm
  - platform: state
    entity_id:
    - input_boolean.nuit_jour
    id: nuit->jour
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: time
    at: input_datetime.horaire_hiver_volet_ouv
    id: ouv_hiv
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Hiv
      - condition: trigger
        id: jour->nuit
      sequence:
      - service: script.1706464871250
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Hiv
      - condition: trigger
        id:
        - ouv_hiv
      sequence:
      - service: script.0_0_1_ouverture_volets_rts
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Ete
      - condition: trigger
        id: heure_ouv
      sequence:
      - service: script.0_0_1_ouverture_volets_rts
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Auto Ete
      - condition: trigger
        id: heure_ferm
      sequence:
      - service: script.1706464871250
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Absent
      - condition: trigger
        id: jour->nuit
      sequence:
      - service: script.0_1_0_fermeture_volets_mode_absent_rts
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.volets
        state: Absent
      - condition: trigger
        id: nuit->jour
      sequence:
      - service: script.0_1_1_ouverture_volets_mode_absent_rts
        data: {}
    default: []
  mode: single
- id: '1708433020641'
  alias: 03-01-01 ECS Automatismes
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.ecs_ssol
  - platform: sun
    event: sunrise
    offset: 0
    id: levee_soleil
  - platform: sun
    event: sunset
    offset: 0
    id: couche_soleil
  - platform: time
    at: 03:00:00
    id: a3h
  - platform: time
    at: 05:59:00
    id: a6h
  - platform: state
    entity_id:
    - sensor.esp126_temp_ecs
    enabled: false
  - platform: numeric_state
    entity_id:
    - sensor.esp126_temp_ecs
    id: tempbasse
    below: input_number.ecs_seuil_bas_temp
  - platform: numeric_state
    entity_id:
    - sensor.esp126_temp_ecs
    above: input_number.ecs_seuil_haut_temp
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.ecs_ssol
        state: Auto
      - condition: numeric_state
        entity_id: sensor.esp126_temp_ecs
        below: input_number.ecs_seuil_bas_temp
      - condition: trigger
        id:
        - a3h
      sequence:
      - service: script.ecs_on
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.ecs_ssol
        state: Auto
      - condition: sun
        before: sunrise
        after: sunset
      - condition: or
        conditions:
        - condition: numeric_state
          entity_id: sensor.esp126_temp_ecs
          above: input_number.ecs_seuil_haut_temp
        - condition: trigger
          id:
          - a6h
      sequence:
      - service: script.ecs_off_off
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.ecs_ssol
        state: Auto
      - condition: trigger
        id:
        - levee_soleil
      sequence:
      - service: script.ecs_off
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.ecs_ssol
        state: Auto
      - condition: trigger
        id:
        - couche_soleil
      sequence:
      - service: script.ecs_off_off
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.ecs_ssol
        state: At Forcé
      sequence:
      - service: script.ecs_off_off
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.ecs_ssol
        state: Ma Forcée
      sequence:
      - service: script.ecs_on
        data: {}
    default: []
  mode: single
  trace:
    stored_traces: 15
- id: '1710317639852'
  alias: 06-02-01 MP2 Etat Mode de Fonctionnement
  description: Alarme Mode de fonctionnement MP2
  trigger:
  - platform: state
    entity_id:
    - sensor.mp2_mode_fonctionnement_par_mqtt
  condition: []
  action:
  - data:
      message: MP2-Mode de fonctionnement -> {{states("sensor.mp2_mode_fonctionnement_texte")
        }}{{-"\n"-}}{{states("sensor.date_time") }}
    action: notify.telegram
  mode: single
- id: '1711527591458'
  alias: Aqara Magic Cube
  description: ''
  use_blueprint:
    path: brent/zha-aqara-magic-cube-57-actions.yaml
    input:
      remote: d77c1d0ca21349e462286aedbcc553cf
      one_to_one: []
      slide_on_two: []
      slide_on_one:
      - service: switch.toggle
        target:
          entity_id: switch.lumiere_salon
        data: {}
- id: '1711609776550'
  alias: 10-01-00 Spot Ext Cuisine detecteur exterieur
  description: ''
  triggers:
  - type: motion
    device_id: f63a7a8078a6c8ad8bff217525241849
    entity_id: 4b474d7b778812c1ca35464b7bcb7ba0
    domain: binary_sensor
    trigger: device
    enabled: false
  - type: opened
    device_id: 193f4cea2f12db0ab1a4d044df803df3
    entity_id: b182f27a8204167b3f3b1893ec2d2196
    domain: binary_sensor
    trigger: device
    enabled: true
  conditions:
  - condition: sun
    before: sunrise
    after: sunset
  - condition: numeric_state
    entity_id: sensor.bh1750_illuminance
    below: 10
  actions:
  - type: turn_on
    device_id: c7b28db8c025b2f0bd975382bc4011f0
    entity_id: 6cf8b08e53c983c0c298cedd8a864449
    domain: switch
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - type: turn_off
    device_id: c7b28db8c025b2f0bd975382bc4011f0
    entity_id: 6cf8b08e53c983c0c298cedd8a864449
    domain: switch
    enabled: true
  mode: single
  trace:
    stored_traces: 15
- id: '1711979815836'
  alias: Low Battery Notifications & Actions
  description: ''
  use_blueprint:
    path: Blackshome/low-battery-notifications-and-actions.yaml
    input: {}
- id: '1722434877942'
  alias: Camera Activation-Désactivation detection
  description: Activation detection entre 5:30 et 23:30
  triggers:
  - at: 05:30:00
    id: fin
    trigger: time
  - at: '23:30:00'
    id: debut
    trigger: time
  - trigger: homeassistant
    event: start
    id: ha
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - debut
      sequence:
      - data:
          message: Activation Détection video surveillance
          title: Caméra
        action: notify.telegram
      - action: switch.turn_on
        target:
          entity_id:
          - switch.cuisine_detect
          - switch.cuisine_motion
          - switch.cuisine_recordings
          - switch.cuisine_snapshots
          - switch.piscine_detect
          - switch.piscine_motion
          - switch.piscine_recordings
          - switch.piscine_snapshots
          - switch.garage_ext_detect
          - switch.garage_ext_motion
          - switch.garage_ext_recordings
          - switch.garage_ext_snapshots
        data: {}
    - conditions:
      - condition: trigger
        id:
        - fin
        - ha
      sequence:
      - data:
          message: Désactivation Détection video surveillance
          title: Caméra
        action: notify.telegram
      - action: switch.turn_off
        target:
          entity_id:
          - switch.cuisine_detect
          - switch.cuisine_motion
          - switch.cuisine_recordings
          - switch.cuisine_snapshots
          - switch.piscine_detect
          - switch.piscine_motion
          - switch.piscine_recordings
          - switch.piscine_snapshots
          - switch.garage_ext_detect
          - switch.garage_ext_motion
          - switch.garage_ext_recordings
          - switch.garage_ext_snapshots
        data: {}
  mode: single
- id: '1724083468200'
  alias: 3_4_4 Piscine-Notification Niveau Haut
  description: ' '
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.esp178_niv_haut
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition: []
  action:
  - data:
      message: Niveau Haut Piscine
      title: Avertissement
    action: notify.telegram
  mode: single
- id: '1724834782718'
  alias: 3_4_5 Piscine-Notification Status ESP178
  description: ' '
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.esp178_status
    for:
      hours: 0
      minutes: 2
      seconds: 0
    from: 'on'
    to: 'off'
    id: decon
  - platform: state
    entity_id:
    - binary_sensor.esp178_piscine
    for:
      hours: 0
      minutes: 0
      seconds: 10
    enabled: false
  - platform: state
    entity_id:
    - binary_sensor.esp178_status
    from: 'off'
    to: 'on'
    id: recon
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - decon
      sequence:
      - data:
          message: '{{states("sensor.date_time") }}{{-"\n"-}} Nouveau Status ESP178=
            {{states(''binary_sensor.esp178_status'')}}{{-"\n"-}} Etat du Ping= {{states(''binary_sensor.esp178_piscine'')}}'
          title: Piscine ESP178 Deconnecté!!!
        action: notify.telegram
      - action: switch.turn_off
        target:
          entity_id: switch.pc3_lidl
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - action: switch.turn_on
        target:
          entity_id:
          - switch.pc3_lidl
        data: {}
    - conditions:
      - condition: trigger
        id:
        - recon
      sequence:
      - data:
          message: '{{states("sensor.date_time") }}{{-"\n"-}} Nouveau Status ESP178=
            {{states(''binary_sensor.esp178_status'')}}{{-"\n"-}} Etat du Ping= {{states(''binary_sensor.esp178_piscine'')}}'
          title: Piscine ESP178 Reconnecté!!!
        action: notify.telegram
  mode: single
- id: '1724936171395'
  alias: 3_2_4 Piscine Time out Ppe pH
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.ppe_ph
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 25
      seconds: 0
  condition:
  - condition: state
    entity_id: select.esp178_mode_fonctionnement_regul_ph
    state: Auto
  action:
  - data:
      message: '{{states("sensor.date_time") }}{{-"\n"-}} pH sonde= {{states(''sensor.ph_piscine_ph'')}}
        {{-"\n"-}} Cible pH= {{states(''input_number.ph_cible'')}} {{-"\n"-}} Vol
        à Injecter={{states(''input_number.ph_vol_ph_moins_a_injecter'')}}l {{-"\n"-}}
        Durée injection= {{states(''input_number.ph_duree_inject_mn'')}}mn-{{states(''input_number.ph_duree_inject_s'')}}s
        {{-"\n"-}}     Poids du bidon= {{states(''sensor.esp129_poids_ph_moins'')}}kg'
      title: Piscine Arret Ppe pH sur time Out injection pH !!!
    action: notify.telegram
  - target:
      entity_id: switch.ppe_ph
    data: {}
    action: switch.turn_off
  mode: single
- id: '1725460687135'
  alias: Notification message Telegram de ESP178
  description: ' Notifie sur Telegram le message mis à jour par l''ESP178 Piscine'
  trigger:
  - platform: state
    entity_id:
    - sensor.esp178_message_notif_telegram
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition:
  - condition: not
    conditions:
    - condition: or
      conditions:
      - condition: state
        entity_id: sensor.esp178_message_notif_telegram
        state: unavailable
      - condition: state
        entity_id: sensor.esp178_message_notif_telegram
        state: unknown
  action:
  - data:
      message: '{{states(''sensor.esp178_message_notif_telegram'')}}'
      title: Message ESP178!!!
    action: notify.telegram
  mode: single
- id: '1725537112371'
  alias: Message telegram ESP142
  description: ' '
  trigger:
  - platform: state
    entity_id:
    - sensor.esp142_message_notif_telegram
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - data:
      message: '{{states(''sensor.esp142_message_notif_telegram'')}}'
      title: Message ESP142!!!
    action: notify.telegram
  mode: single
- id: '1726147313541'
  alias: Robot AMX435 Notif Erreur
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.am435x_awd_error
    id: error
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.am435x_awd_error
      state: unavailable
    enabled: false
  action:
  - data:
      message: "{{states(\"sensor.date_time\")}} {% set er=states('sensor.am435x_awd_error')%}
        {% if er==\"no_error\" %}\n  Pas de Probleme\n{%- else -%}\n  Probleme={{er}}\n{%-
        endif%}  "
      title: Robot-Début Alerte Meteo Pluie !!!
    action: notify.telegram
  mode: single
  trace:
    stored_traces: 10
- id: '1726422825041'
  alias: Recopie Etat HA vers NR MP2
  description: Lien entre HA et le nodered du MP2
  trigger:
  - platform: time_pattern
    id: mn
    hours: /1
  - platform: state
    entity_id:
    - input_boolean.mp2_valid_ess_charge_prog_1
    - input_boolean.forcage_charge_pgm_mp2_100
    - input_number.mp2_niveau_forcage_cp1
    - sensor.linky_ptec
  condition: []
  action:
  - action: mqtt.publish
    metadata: {}
    data:
      evaluate_payload: false
      qos: '0'
      retain: false
      topic: ha/mp2/cp/validcp
      payload: '"{{ states(''input_boolean.mp2_valid_ess_charge_prog_1'') }}"'
  - action: mqtt.publish
    metadata: {}
    data:
      evaluate_payload: false
      qos: '0'
      retain: false
      topic: ha/mp2/cp/forcage100
      payload: '"{{ states(''input_boolean.forcage_charge_pgm_mp2_100'') }}"'
  - action: mqtt.publish
    metadata: {}
    data:
      evaluate_payload: false
      qos: '0'
      retain: false
      topic: ha/mp2/cp/niveauforcagecp1
      payload: '"{{ states(''input_number.mp2_niveau_forcage_cp1'') }}"'
  - action: mqtt.publish
    metadata: {}
    data:
      evaluate_payload: false
      qos: '0'
      retain: false
      topic: ha/mp2/cp/hc
      payload: '"{{ states(''sensor.linky_ptec'') }}"'
  mode: single
- id: '1726480156769'
  alias: Surveillance Puissance Chalet
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.esp131_pzem_chalet_puissance
    for:
      hours: 0
      minutes: 10
      seconds: 0
    above: 500
  condition: []
  action:
  - data:
      message: '{{states("sensor.date_time") }}{{-"\n"-}} Puissance Chalet > 300w
        depuis 10mn{{-"\n"-}} P= {{states(''sensor.esp131_pzem_chalet_puissance'')}}
        W'
      title: Consommation Chalet
    action: notify.telegram
  mode: single
- id: '1726480725890'
  alias: Message Journalier Recap Conso
  description: ''
  trigger:
  - platform: time
    at: '23:59:00'
  condition: []
  action:
  - data:
      message: '{{states("sensor.date_time") }}{{-"\n"-}} Conso totale= {{states(''sensor.compteur_energie_total_jour_tous_tarifs'')}}
        kW{{-"\n"-}} Bleu HC= {{states(''sensor.compteur_energie_hc_bleu_jour'')}}
        / Bleu HP= {{states(''sensor.compteur_energie_hp_bleu_jour'')}} kW{{-"\n"-}}
        Blanc HC= {{states(''sensor.compteur_energie_hc_blanc_jour'')}} / Blanc HP=
        {{states(''sensor.compteur_energie_hp_blanc_jour'')}} kW{{-"\n"-}} Rouge HC=
        {{states(''sensor.compteur_energie_hc_rouge_jour'')}} / Rouge HP= {{states(''sensor.compteur_energie_hp_rouge_jour'')}}
        kW{{-"\n"-}}'
      title: Recap Journalier Consommation Elec
    action: notify.telegram
  mode: single
- id: '1727193343831'
  alias: Nouvelle automatisation
  description: ''
  trigger:
  - platform: mqtt
    topic: ha/nrpve/
    payload: 'true'
    id: ma
  - platform: mqtt
    topic: ha/nrpve/
    payload: 'false'
    id: at
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - ma
      sequence:
      - type: turn_on
        device_id: 9975bf8e5a4c6ab6d23cb5934c972ecc
        entity_id: e2ad4dd004c939fbba02a2aa31a7967c
        domain: switch
    - conditions:
      - condition: trigger
        id:
        - at
      sequence:
      - type: turn_off
        device_id: 9975bf8e5a4c6ab6d23cb5934c972ecc
        entity_id: e2ad4dd004c939fbba02a2aa31a7967c
        domain: switch
  mode: single
- id: '1728311341373'
  alias: 'Notification: anniversaire à souhaiter'
  description: Rappel anniversaire
  trigger:
  - platform: calendar
    event: start
    offset: '7:0:0'
    entity_id: calendar.anniversaires
  condition:
  - condition: state
    entity_id: calendar.anniversaires
    state: 'on'
  action:
  - data:
      message: Il y a l'anniversaire de {{ states.calendar.anniversaires.attributes.message
        }} a souhaiter aujourd'hui
    action: notify.telegram
- id: '1729177635873'
  alias: Defaut Secteur
  description: Surveille la tension d'entrée du MP2
  triggers:
  - trigger: numeric_state
    entity_id:
    - sensor.mp2_tension_entree_l1
    below: 50
    id: perte_secteur
  conditions: []
  actions:
  - data:
      message: '{{states("sensor.date_time") }}{{-"\n"-}} U Secteur= {{states(''sensor.mp2_tension_entree_l1'')}}
        V'
      title: Defaut Secteur MP2
    action: notify.telegram
  - wait_for_trigger:
    - trigger: numeric_state
      entity_id:
      - sensor.mp2_tension_entree_l1
      above: 200
  - data:
      message: '{{states("sensor.date_time") }}{{-"\n"-}} U Secteur= {{states(''sensor.mp2_tension_entree_l1'')}}
        V'
      title: Retour Secteur MP2
    action: notify.telegram
  mode: single
