
police:
  styles:
    card:
      - font-family: Avenir
style:
  styles:
    card:
      - border-color: rgba(12, 12, 14, 0.2)
      - border-style: outset
      - border-width: 1px
      - box-shadow: 1px 1px 2px 0px rgba(12, 12, 14,0.3)
sidebar:
  entity: weather.tu_mets_ta_ville
  show_entity_picture: true
  show_icon: true
  show_name: false
  show_state: false
  show_label: false
  template:
    - police
    - style
  entity_picture: |
    [[[
      if ((entity.state == 'sunny') && (states['sun.sun'].state == 'above_horizon'))
        return "/local/weather/icones animes/clear-day.svg"
      if ((entity.state == 'sunny') || (entity.state == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
        return "/local/weather/icones animes/clear-night.svg"  

      if ((entity.state == 'lightning-rainy') && (states['sun.sun'].state == 'above_horizon'))
        return "/local/weather/icones animes/thunderstorms-day-rain.svg"
      if ((entity.state == 'lightning-rainy') || (entity.state == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
        return "/local/weather/icones animes/thunderstorms-night-rain.svg"

      if ((entity.state == 'fog') && (states['sun.sun'].state == 'above_horizon'))
        return "/local/weather/icones animes/fog-day.svg"             
      if ((entity.state == 'fog') && (states['sun.sun'].state == 'below_horizon'))
        return "/local/weather/icones animes/fog-night.svg"

      if ((entity.state == 'partlycloudy') && (states['sun.sun'].state == 'above_horizon'))
        return "/local/weather/icones animes/partly-cloudy-day.svg"                    
      if ((entity.state == 'partlycloudy') && (states['sun.sun'].state == 'below_horizon'))
        return "/local/weather/icones animes/partly-cloudy-night.svg"  

      if ((entity.state == 'rainy') && (states['sun.sun'].state == 'above_horizon'))
        return "/local/weather/icones animes/partly-cloudy-day-rain.svg"                      
      if ((entity.state == 'rainy') && (states['sun.sun'].state == 'below_horizon'))
        return "/local/weather/icones animes/partly-cloudy-night-rain.svg" 

      if ((entity.state == 'lightning') && (states['sun.sun'].state == 'above_horizon'))
        return "/local/weather/icones animes/thunderstorms-day.svg"                      
      if ((entity.state == 'lightning') && (states['sun.sun'].state == 'below_horizon'))
        return "/local/weather/icones animes/thunderstorms-night.svg" 

      if (entity.state == 'clear-night')
        return "/local/weather/icones animes/clear-night.svg";

      if (entity.state == 'sleet')
        return "/local/weather/icones animes/sleet.svg";  

      if (entity.state == 'pouring')
        return "/local/weather/icones animes/umbrella.svg"; 

      if (entity.state == 'snowy-rainy')
        return "/local/weather/icones animes/sleet.svg";  

      if (entity.state == 'snow')
        return "/local/weather/icones animes/snow.svg"; 

      if (entity.state == 'snowy')
        return "/local/weather/icones animes/snow.svg"; 

      if (entity.state == 'cloudy')
        return "/local/weather/icones animes/cloudy.svg"; 

      if (entity.state == 'wind')
        return "/local/weather/icones animes/wind.svg"; 

      if (entity.state == 'hail')
        return "/local/weather/icones animes/hail.svg"; 
    ]]]
  styles:
    img_cell:
      - border-radius: 50%
      - width: 60px
      - height: 60px
      - position: absolute
      - top: 0%
      - left: 5%
      - background-color: transparent
      - color: transparent
      - border-color: transparent
      - box-shadow: transparent
    entity_picture:
      - width: 90%
    grid:
      - grid-template-areas: |
          "date"
          "meteo"
          "alerte"
          "titre_programme"
          "anniv"
          "calendrier"
          "poubelle"
          "titre_activite"
          "reveil"
          "rappel"
          "mouvement"
          "porte"
          "lumiere"
          "appareil"
          "modes"
          "air"
          "app_connectes"
          "enedis"
          "gaz"
          "titre_info"
          "info"
          "titre_avertissement"
          "device_hs"
          "jauge"
          "boutons"
          "titre_maj"
          "maj"
      - grid-template-columns: 1fr
      - grid-template-rows: >-
          min-content min-content min-content min-content  min-content 
          min-content  min-content  min-content  min-content  min-content 
          min-content  min-content   min-content  min-content  min-content
          min-content  min-content  min-content  min-content  min-content 
          min-content 1fr
      - gap: 0%
      - overflow: hidden
    card:
      - '-webkit-tap-highlight-color': rgba(0,0,0,0)
      - padding: 3% 4% 2% 4%
      - line-height: 125%
      - font-size: 13px
    custom_fields:
      date:
        - padding: 0px 0px 0px 0px
        - font-weight: bold
        - font-size: 13px
        - color: var(--text_on_sidebar)
        - align-self: middle
        - white-space: normal
      meteo:
        - padding: 2px 0px 0px 0px
        - font-weight: null
        - font-size: 13px
        - color: var(--text_on_sidebar)
        - align-self: middle
        - white-space: normal
      alerte:
        - padding: 0px 0px 0px 0px
        - padding-left: 8px
        - font-size: 11px
        - color: |
            [[[
              if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Jaune')
                return 'yellow'
              if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Orange')
                return 'orange'
              if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Rouge')
                return 'red'
              return ''
            ]]]
        - align-self: middle
        - white-space: normal
      titre_programme:
        - padding: 20px 0px 03px 0px
        - font-weight: bold
        - font-style: italic
        - font-size: 12px
        - justifiy-self: start
        - text-align: left
        - color: var(--text_on_sidebar)
        - white-space: normal
      anniv:
        - border-left: |
            [[[
              if (states['sensor.anniversaire'].state == 'Aucun')
                return '';
              return '2px rgb(180, 70, 70) solid';
            ]]]
        - padding: 0px 0px 0px 0px
        - padding-left: 8px
        - justifiy-self: start
        - text-align: left
        - color: var(--text_on_info_sidebar)
        - white-space: normal
      calendrier:
        - border-left: 2px rgb(180, 70, 70) solid
        - padding: 0px 0px 0px 0px
        - padding-left: 8px
        - color: |
            [[[
              if (states['sensor.calendar_famille'].state == 'Aucun évènement')
                return 'var(--text_off_sidebar)';
              return 'var(--text_on_info_sidebar)';
            ]]]
        - justifiy-self: start
        - text-align: left
        - white-space: normal
      poubelle:
        - border-left: 2px rgb(180, 70, 70) solid
        - padding: 0px 0px 0px 0px
        - padding-left: 8px
        - color: |
            [[[
              if (states['sensor.calendar_poubelles'].state == 'Aucun rappel')
                return 'var(--text_off_sidebar)';
              return 'var(--text_on_info_sidebar)';
            ]]]
        - justifiy-self: start
        - text-align: left
        - white-space: normal
      titre_avertissement:
        - font-style: italic
        - font-size: 12px
        - padding: |
            [[[
              if (states['sensor.systeme_avertissement'].state == '' )
                return "0px 0px 0px 0px" ;
              return "15px 0px 03px 0px" ;
            ]]]
        - font-weight: bold
        - justifiy-self: start
        - text-align: left
        - color: red
        - white-space: normal
      device_hs:
        - border-left: 2px rgb(180, 70, 70) solid
        - padding: |
            [[[
              if (states['sensor.systeme_avertissement'].state == '')
                return "0px 0px 0px 0px" ;
              return "0px 0px 0px 08px" ;
            ]]]
        - justifiy-self: start
        - color: red
        - white-space: normal
        - text-align: left
      titre_activite:
        - font-style: italic
        - font-size: 12px
        - padding: 15px 0px 03px 0px
        - font-weight: bold
        - justifiy-self: start
        - text-align: left
        - color: var(--text_on_sidebar)
        - white-space: normal
      appareil:
        - border-left: 2px grey solid
        - white-space: normal
        - text-align: left
        - padding: 0px 0px 0px 08px
        - justifiy-self: start
        - color: |
            [[[
              if (states['sensor.compteur_autre'].state == '0')
                return 'var(--text_off_sidebar)';
              return 'var(--text_on_info_sidebar)';
            ]]]
      reveil:
        - border-left: 2px grey solid
        - white-space: normal
        - text-align: left
        - padding: 0px 0px 0px 08px
        - justifiy-self: start
        - color: |
            [[[
              if (states['input_boolean.nilemato'].state == "on" && states['sensor.tom_reveil'].state == "unknown")
                return 'red';
              return 'var(--text_on_info_sidebar)';
            ]]]
      air:
        - border-left: 2px grey solid
        - white-space: normal
        - text-align: left
        - padding: 0px 0px 0px 08px
        - justifiy-self: start
        - color: var(--text_on_info_sidebar)
      lumiere:
        - border-left: 2px grey solid
        - padding: 0px 0px 0px 08px
        - justifiy-self: start
        - color: |
            [[[
              if (states['light.tout'].state == 'off')
                return 'var(--text_off_sidebar)';
              return 'var(--text_on_info_sidebar)';
            ]]]
        - white-space: normal
        - text-align: left
      mouvement:
        - border-left: 2px grey solid
        - padding: 0px 0px 0px 08px
        - justifiy-self: start
        - text-align: left
        - color: |
            [[[
              if (states['binary_sensor.mouvements'].state == 'off')
                return 'var(--text_off_sidebar)';
              return 'var(--text_on_info_sidebar)';
            ]]]
        - white-space: normal
      porte:
        - border-left: 2px grey solid
        - padding: 0px 0px 0px 08px
        - justifiy-self: start
        - text-align: left
        - color: |
            [[[
              if (states['binary_sensor.portes'].state == 'off')
                return 'var(--text_off_sidebar)';
              return 'var(--text_on_info_sidebar)';
            ]]]
        - white-space: normal
      rappel:
        - border-left: 2px grey solid
        - padding: 0px 0px 0px 08px
        - justifiy-self: start
        - text-align: left
        - white-space: normal
        - color: |
            [[[
              if (states['sensor.rappel'].state == 'Aucun')
                return 'var(--text_off_sidebar)';
              return 'var(--text_on_info_sidebar)';
            ]]]
      app_connectes:
        - border-left: 2px grey solid
        - padding: 0px 0px 0px 08px
        - justifiy-self: start
        - text-align: left
        - color: var(--text_on_info_sidebar)
        - white-space: normal
      enedis:
        - border-left: 2px grey solid
        - padding: 0px 0px 0px 08px
        - justifiy-self: start
        - text-align: left
        - color: var(--text_on_info_sidebar)
        - white-space: normal
      gaz:
        - border-left: 2px grey solid
        - padding: 0px 0px 0px 08px
        - justifiy-self: start
        - text-align: left
        - color: var(--text_on_info_sidebar)
        - white-space: normal
      modes:
        - border-left: 2px grey solid
        - padding: 0px 0px 0px 08px
        - justifiy-self: start
        - text-align: left
        - color: var(--text_on_info_sidebar)
        - white-space: normal
      titre_info:
        - padding: |
            [[[
              if (states['input_boolean.sidecar_show_info'].state == 'off')
                return "0px" ;
              return "15px 0px 01px 0px" 
            ]]]
        - font-weight: bold
        - justifiy-self: start
        - text-align: left
        - color: var(--text_on_sidebar)
        - white-space: normal
      info:
        - border-left: 2px darkslategrey solid
        - padding: 0px 0px 0px 08px
        - justifiy-self: start
        - text-align: left
        - color: var(--text_on_info_sidebar)
        - white-space: normal
      jauge:
        - padding: 15px 0px 0px 23px
        - align-self: middle
        - white-space: normal
        - width: calc(85% + 0px)
        - '--ha-card-border-width': 0px
      boutons:
        - padding: 15px 0px 0px 0px
        - align-self: middle
        - white-space: normal
        - width: calc(100% + 1px)
        - '--ha-card-border-width': 0px
      titre_maj:
        - font-size: 12px
        - padding: |
            [[[
              if (states['input_boolean.sidecar_show_maj'].state == 'off')
                return "0px" ;
              return "15px 0px 03px 0px" 
            ]]]
        - font-weight: bold
        - font-style: italic
        - justifiy-self: start
        - text-align: left
        - color: var(--text_on_sidebar)
        - white-space: normal
      maj:
        - border-left: 2px dodgerblue solid
        - padding: 0px 0px 0px 08px
        - justifiy-self: start
        - text-align: left
        - color: |
            [[[
              if (states['sensor.maj'].state == 'Aucune')
                return "var(--text_off)" ;
              return "var(--text_on_info_sidebar)" 
            ]]]
        - white-space: normal
  custom_fields:
    date: |
      [[[ return states['sensor.date_simple'].state ]]]
    meteo: >
      [[[ return states['sensor.weather_conditions'].state+",
      "+states['sensor.weather_temperature_v2'].state +"° " ]]]
    alerte: |
      [[[
        if (states['sensor.weather_alerte_couleur_v2'].state == "Aucune vigilance en cours" ) 
          return ""
        return "Vigilance "+states['sensor.weather_alerte'].state
      ]]]
    titre_programme: |
      [[[ return "Aujourd'hui " ]]]
    anniv: |
      [[[
        if (states['sensor.anniversaire'].state == 'Aucun')
          return "" 
        return "🎉 " + states['sensor.anniversaire'].state
      ]]]
    calendrier: |
      [[[ return  states['sensor.calendar_famille'].state
      ]]]
    poubelle: |
      [[[ return  states['sensor.calendar_poubelles'].state
      ]]]
    titre_avertissement: |
      [[[
        if (states['sensor.systeme_avertissement'].state == '')
          return "" 
        return "Avertissement" 
      ]]]
    device_hs: |
      [[[
        if (states['sensor.systeme_avertissement'].state == '')
          return "" 
        return states['sensor.systeme_avertissement'].state ;
      ]]]
    titre_activite: |
      [[[ return "Maison" 
      ]]]
    appareil: |
      [[[
        if (states['sensor.compteur_autre'].state == 0 || states['input_boolean.sidecar_show_autre'].state == 'off')
          return ""
        return `<ha-icon
          icon="mdi:power"
          style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
          </ha-icon><span> ${states['sensor.autres_appareils'].state}</span>`
      ]]]
    air: |
      [[[
        if (states['input_boolean.sidecar_show_air'].state == 'off' )
          return ""
        if (states['sensor.moniteur_qualite_air'].state < 65 )
          return ""
        if (states['sensor.moniteur_qualite_air'].state >= 65 && states['sensor.moniteur_qualite_air'].state < 220 )
          return `<ha-icon
            icon="mdi:blur"
            style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
            </ha-icon><span>Air correct : aération recommandée</span>`
        if (states['sensor.moniteur_qualite_air'].state >= 220 && states['sensor.moniteur_qualite_air'].state < 660 )
          return `<ha-icon
            icon="mdi:blur"
            style="width: 16px; color: yellow; height: 16px; margin-right: 2px;">
            </ha-icon><span>Air moyen : aération intense recommandée</span>`
        if (states['sensor.moniteur_qualite_air'].state >= 660 && states['sensor.moniteur_qualite_air'].state < 2200 )
          return `<ha-icon
            icon="mdi:blur"
            style="width: 16px; color: orange; height: 16px; margin-right: 2px;">
            </ha-icon><span>Air mauvais : aération intense nécessaire </span>`
        if (states['sensor.moniteur_qualite_air'].state >= 2200 )
          return `<ha-icon
            icon="mdi:blur"
            style="width: 16px; color: red; height: 16px; margin-right: 2px;">
            </ha-icon><span>Air Danger : aération intense nécessaire </span>`
      ]]]
    lumiere: |
      [[[
        if (states['sensor.lumiere_etat'].state == 'Aucune' || states['input_boolean.sidecar_show_lumiere'].state == 'off')
          return ""
        return `<ha-icon
          icon="phu:bulb-group-filament-candle"
          style="width: 16px; color: gold; height: 16px; margin-right: 2px;">
          </ha-icon><span> ${states['sensor.lumiere_etat'].state}</span>`
      ]]]
    mouvement: |
      [[[
        if (states['sensor.mouv_on'].state == 'Aucun' || states['input_boolean.sidecar_show_mouvement'].state == 'off')
          return ""
        return `<ha-icon
          icon="mdi:run"
          style="width: 16px; color: red; height: 16px; margin-right: 2px;">
          </ha-icon><span> ${states['sensor.mouv_on'].state}</span>`
      ]]]
    porte: |
      [[[
        if (states['sensor.porte_on'].state == 'Aucune'|| states['input_boolean.sidecar_show_porte'].state == 'off')
          return ""
        return `<ha-icon
          icon="mdi:door-open"
          style="width: 16px; color: red; height: 16px; margin-right: 2px;">
          </ha-icon><span> ${states['sensor.porte_on'].state}</span>`
      ]]]
    rappel: |
      [[[
        if (states['sensor.rappel'].state == "Aucun")
          return ""
        return `<ha-icon
          icon="mdi:reminder"
          style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
          </ha-icon><span> ${states['sensor.rappel'].state}</span>`
      ]]]
    reveil: |
      [[[
        if (states['input_boolean.nilemato'].state == "on" && states['sensor.tom_reveil'].state == "unavailable")
          return `<ha-icon
            icon="mdi:alarm"
            style="width: 16px; color: red; height: 16px; margin-right: 2px;">
            </ha-icon><span>Indisponible</span>`
        if (states['input_boolean.nilemato'].state == "off")
          return ""
        if (states['input_boolean.nilemato'].state == "on" && states['sensor.reveil'].state == "" )
        return `<ha-icon
          icon="mdi:alarm"
          style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
          </ha-icon><span> Aucun réveil</span>`
        if (states['input_boolean.nilemato'].state == "on" && states['sensor.reveil'].state != "" )
        return `<ha-icon
          icon="mdi:alarm"
          style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
          </ha-icon><span> ${states['sensor.reveil'].state}</span>`

      ]]]
    app_connectes: |
      [[[
        if (states['sensor.app_connectes'].state == 'Aucun' || states['input_boolean.sidecar_show_connecte'].state == 'off')
          return ""
        return `<ha-icon
          icon="mdi:access-point-network"
          style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
          </ha-icon><span> ${states['sensor.app_connectes2'].state}</span>`
      ]]]
    enedis: |
      [[[
        if (states['input_boolean.sidecar_show_electricite'].state == 'off')
          return ""
        if (states['sensor.myenedis_cost_yesterday_09397539765420'].state == '-1.0')
        return `<ha-icon
          icon="mdi:flash-alert"
          style="width: 16px; color: var(--text_on_sidebar); height: 16px; margin-right: 2px;">
          </ha-icon><span>Enedis: en attente</span>`
        if (states['sensor.myenedis_cost_yesterday_09397539765420'].state == 'unavailable')
        return `<ha-icon
          icon="mdi:flash-off"
          style="width: 16px; color: var(--text_on_sidebar); height: 16px; margin-right: 2px;">
          </ha-icon><span>Enedis : en attente</span>`
        if (states['sensor.myenedis_cost_yesterday_09397539765420'].state != '-1.0')
        return `<ha-icon
          icon="mdi:flash"
          style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
          </ha-icon><span>Électricité : ${states['sensor.electricite_conso_kwh_arrondie'].state}kWh / ${states['sensor.electricite_cout_jour_avec_abo'].state}€</span>`
      ]]]
    gaz: |
      [[[
        if (states['input_boolean.sidecar_show_gaz'].state == 'off')
          return ""
        if (states['sensor.grdf_consommation_gaz'].state == 'unavailable')
        return `<ha-icon
          icon="mdi:gas-burner"
          style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
          </ha-icon><span>Gaz : en attente</span>`
        if (states['sensor.grdf_consommation_gaz'].state != '-1.0')
        return `<ha-icon
          icon="mdi:gas-burner"
          style="width: 16px; color: '#6aa17f'; height: 16px; margin-right: 2px;">
          </ha-icon><span>Gaz : ${states['sensor.grdf_consommation_gaz'].state}kWh / ${states['sensor.gaz_cout_jour_avec_abo'].state}€</span>`
      ]]]
    modes: |
      [[[
        if (states['sensor.modes'].state == 'Aucun'|| states['input_boolean.sidecar_show_mode'].state == 'off')
          return ""
        return `<ha-icon
          icon="mdi:cogs"
          style="width: 16px; color: darkgrey; height: 16px; margin-right: 2px;">
          </ha-icon><span> ${states['sensor.modes'].state}</span>`
      ]]]
    titre_info: |
      [[[  if (states['input_boolean.sidecar_show_info'].state == 'on')
              return "Savoir Inutile" 
            return ""
      ]]]
    info: |
      [[[ if (states['input_boolean.sidecar_show_info'].state == 'on')
            return states['sensor.web_scrape'].state 
            return ""
      ]]]
    titre_maj: |
      [[[ 
        if (states['input_boolean.sidecar_show_maj'].state == 'off')
          return "" 
        return "Système"
      ]]]
    maj: |
      [[[ 
        if (states['input_boolean.sidecar_show_maj'].state == 'off')
          return "" 
        return "Démarrage il y a "+states['sensor.uptime_ha'].state+"<br>"+states['sensor.maj'].state  
        ]]] 
    jauge:
      card:
        square: false
        columns: 5
        type: grid
        cards:
          - type: custom:button-card
            entity: sensor.temp_sejour
            tap_action:
              action: navigate
              navigation_path: /lovelace/Temp
            name: rdc
            show_name: true
            show_state: false
            show_label: true
            show_units: false
            units: °
            label: |
              [[[
                if (states['sensor.temp_moyenne_rdc'].state != "unavailable"  )
                  return states['sensor.temp_moyenne_rdc'].state
                if (states['sensor.temp_sejour'].state != "unavailable" )
                  return states['sensor.temp_sejour'].state
                if (states['sensor.moniteur_qualite_air_temperature'].state != "unavailable" )
                  return states['sensor.moniteur_qualite_air_temperature'].state
                return '-'
                    ]]]
            template:
              - carte_jauge
            styles:
              card:
                - line-height: 70%
                - background-color: |
                    [[[
                      if (states['sensor.thermo_alerte_froid_rdc'].state > 0  )
                        return 'var(--custom-card-color-blue)'
                      if (states['sensor.thermo_alerte_chaud_rdc'].state > 0  )
                        return 'var(--custom-card-color-red)'
                      return ''
                    ]]]
              name:
                - font-size: 11px
                - font-weight: null
                - color: darkgrey
              state:
                - font-size: 11px
              label:
                - font-size: 11px
                - font-weight: bold
              custom_fields:
                gauge:
                  - width: calc(140% + 0px)
            custom_fields:
              gauge:
                card:
                  entity: sensor.temp_sejour
                  gauge:
                    max_value: 50
                    min_value: 0
                    severity:
                      - color: darkgrey
                      - color: var(--custom-icon-color-blue)
                        from: 0
                        to: 18.4
                      - color: rgb(180, 70, 70)
                        from: 26.9
                        to: 50
                  tap_action:
                    action: navigate
                    navigation_path: /lovelace/Temp
          - type: custom:button-card
            color_type: blank-card
          - type: custom:button-card
            entity: sensor.temp_moyenne_etage
            tap_action:
              action: navigate
              navigation_path: /lovelace/Temp
            name: étage
            show_name: true
            show_state: false
            show_label: true
            show_units: false
            units: °
            label: |
              [[[
                if (states['sensor.temp_moyenne_etage'].state != "unavailable"  )
                  return states['sensor.temp_moyenne_etage'].state
                if (states['sensor.temp_tom'].state != "unavailable" )
                  return states['sensor.temp_tom'].state
                if (states['sensor.temp_manon'].state != "unavailable" )
                  return states['sensor.temp_manon'].state
                if (states['sensor.temp_nina'].state != "unavailable" )
                  return states['sensor.temp_nina'].state
                return '-'
                    ]]]
            template:
              - carte_jauge
            styles:
              card:
                - line-height: 70%
                - background-color: |
                    [[[
                      if (states['sensor.thermo_alerte_froid_etage'].state > 0 )
                        return 'var(--custom-card-color-blue)'
                      if (states['sensor.thermo_alerte_chaud_etage'].state > 0 )
                        return 'var(--custom-card-color-red)'
                      return ''
                    ]]]
              name:
                - font-size: 9px
                - font-weight: null
                - color: darkgrey
              state:
                - font-size: 11px
              label:
                - font-size: 11px
                - font-weight: bold
              custom_fields:
                gauge:
                  - width: calc(140% + 0px)
            custom_fields:
              gauge:
                card:
                  entity: sensor.temp_tom
                  gauge:
                    max_value: 50
                    min_value: 0
                    severity:
                      - color: darkgrey
                      - color: var(--custom-icon-color-blue)
                        from: 0
                        to: 18.4
                      - color: rgb(180, 70, 70)
                        from: 26.9
                        to: 50
                  tap_action:
                    action: navigate
                    navigation_path: /lovelace/Temp
          - type: custom:button-card
            color_type: blank-card
          - type: custom:button-card
            entity: sensor.qualite_air_pourcentage
            tap_action:
              action: navigate
              navigation_path: /lovelace/air
            name: Air
            show_name: true
            show_label: false
            show_units: false
            template:
              - carte_jauge
              - state_unavailable
            styles:
              card:
                - line-height: 70%
                - background-color: |
                    [[[
                      if (states['sensor.qualite_air_pourcentage'].state >= 96.1 && states['sensor.qualite_air_pourcentage'].state <= 98.8)
                        return "var(--custom-card-color-blue)" 
                      if (states['sensor.qualite_air_pourcentage'].state >= 88.1 && states['sensor.qualite_air_pourcentage'].state <= 96)
                        return "var(--custom-card-color-yellow)" 
                      if (states['sensor.qualite_air_pourcentage'].state >= 60.1 && states['sensor.qualite_air_pourcentage'].state <= 88)
                        return "var(--custom-card-color-orange)" 
                      if (states['sensor.qualite_air_pourcentage'].state >= 0 && states['sensor.qualite_air_pourcentage'].state <= 60)
                        return "var(--custom-card-color-red)" 
                      return "" 
                    ]]]
              name:
                - font-size: 11px
                - font-weight: null
                - color: darkgrey
              state:
                - font-size: 11px
                - color: |
                    [[[
                      if (states['sensor.qualite_air_pourcentage'].state >= 96.1 && states['sensor.qualite_air_pourcentage'].state <= 98.8)
                        return "var(--custom-icon-color-blue)" 
                      if (states['sensor.qualite_air_pourcentage'].state >= 88.1 && states['sensor.qualite_air_pourcentage'].state <= 96)
                        return "var(--custom-icon-color-yellow)" 
                      if (states['sensor.qualite_air_pourcentage'].state >= 60.1 && states['sensor.qualite_air_pourcentage'].state <= 88)
                        return "var(--custom-icon-color-orange)" 
                      if (states['sensor.qualite_air_pourcentage'].state >= 0 && states['sensor.qualite_air_pourcentage'].state <= 60)
                        return "var(--custom-icon-color-red)" 
                      return "" 
                    ]]]
              custom_fields:
                gauge:
                  - top: 50.5%
                  - left: 50%
                  - opacity: 50%
                  - width: calc(140% + 0px)
            custom_fields:
              gauge:
                card:
                  entity: sensor.qualite_air_pourcentage
                  gauge:
                    max_value: 100
                    severity:
                      - color: darkgrey
                      - color: var(--custom-icon-color-blue)
                        from: 96.1
                        to: 98.8
                      - color: yellow
                        from: 88.1
                        to: 96
                      - color: orange
                        from: 60.1
                        to: 88
                      - color: red
                        from: 0
                        to: 60
                  tap_action:
                    action: navigate
                    navigation_path: /lovelace/air
    boutons:
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: switch.adguard_protection
            name: AdGuard
            template:
              - carte_bouton
            styles:
              icon:
                - color: |
                    [[[
                      if (states['switch.adguard_protection'].state == 'off')
                      return 'red'
                    return 'lightgrey'
                    ]]]
              card:
                - background-color: |
                    [[[
                      if (states['switch.adguard_protection'].state == 'off')
                        return 'var(--custom-img-cell-color-red)'
                      return 'var(--custom-img-cell-color-blue)'
                    ]]]
          - type: custom:button-card
            entity: binary_sensor.home_assistant_versions_update_available
            icon: mdi:update
            show_name: true
            show_state: false
            show_label: true
            show_icon: false
            name: Core
            label: |
              [[[
                if (states['binary_sensor.home_assistant_versions_update_available'].state == "on")
                  return states['sensor.home_assistant_versions'].state
                return states['sensor.home_assistant_versions'].state
              ]]]
            template:
              - carte_bouton
              - carte_bouton_state
            styles:
              card:
                - background-color: |
                    [[[
                      if (states['binary_sensor.home_assistant_versions_update_available'].state == "on")
                        return 'var(--custom-img-cell-color-blue)'
                      return 'rgba(43,53,66,0.6)'
                    ]]]
            double_tap_action:
              action: more-info
            tap_action:
              action: call-service
              service: input_boolean.toggle
              service_data:
                entity_id: input_boolean.sidecar_show_maj
          - type: custom:button-card
            entity: update.home_assistant_supervisor_update
            icon: mdi:update
            show_name: true
            show_state: false
            show_label: true
            show_icon: false
            name: Supervisor
            label: |
              [[[
                if (states['update.home_assistant_supervisor_update'].state == "on")
                  return states['update.home_assistant_supervisor_update'].attributes.latest_version
                return states['update.home_assistant_supervisor_update'].attributes.installed_version
              ]]]
            styles:
              card:
                - background-color: |
                    [[[
                      if (states['update.home_assistant_supervisor_update'].state == "on")
                        return 'var(--custom-img-cell-color-blue)'
                      return 'rgba(43,53,66,0.6)'
                    ]]]
            template:
              - carte_bouton
              - carte_bouton_state
            double_tap_action:
              action: more-info
            tap_action:
              action: call-service
              service: input_boolean.toggle
              service_data:
                entity_id: input_boolean.sidecar_show_maj
          - type: custom:button-card
            entity: update.home_assistant_operating_system_update
            icon: mdi:update
            show_name: true
            show_state: false
            show_label: true
            show_icon: false
            name: HassOS
            label: |
              [[[
                if (states['update.home_assistant_operating_system_update'].state == "on")
                  return states['sensor.home_assistant_operating_system_newest_version'].state
                return states['sensor.home_assistant_operating_system_version'].state
              ]]]
            styles:
              card:
                - background-color: |
                    [[[
                      if (states['update.home_assistant_operating_system_update'].state == "on")
                        return 'var(--custom-img-cell-color-blue)'
                      return 'rgba(43,53,66,0.6)'
                    ]]]
            template:
              - carte_bouton
              - carte_bouton_state
            double_tap_action:
              action: more-info
            tap_action:
              action: call-service
              service: input_boolean.toggle
              service_data:
                entity_id: input_boolean.sidecar_show_maj
          - type: custom:button-card
            entity: sensor.hacs
            show_name: true
            show_state: false
            show_label: true
            show_icon: false
            name: hacs
            label: |
              [[[
                if (states['sensor.hacs'].state > 1)
                  return states['sensor.hacs'].state
                return '0'
              ]]]
            template:
              - carte_bouton
            styles:
              label:
                - font-weight: |
                    [[[
                      if (states['sensor.hacs'].state > 1)
                        return 'bold'
                      return ''
                    ]]]
              card:
                - background-color: |
                    [[[
                      if (states['sensor.hacs'].state > 1)
                        return 'var(--custom-img-cell-color-blue)'
                      return 'rgba(43,53,66,0.7)'
                    ]]]
            double_tap_action:
              action: more-info
            tap_action:
              action: call-service
              service: input_boolean.toggle
              service_data:
                entity_id: input_boolean.sidecar_show_maj
base:
  show_icon: true
  show_name: true
  show_state: false
  show_label: true
  template:
    - police
    - style
  styles:
    grid:
      - grid-template-areas: '"i n" "i s" "i l" '
      - grid-template-columns: min-content auto
      - grid-template-rows: min-content min-content min-content
    img_cell:
      - background-color: var(--pastille_off)
      - border-radius: 50%
      - place-self: start
      - text-align: start
      - width: 35px
      - height: 35px
    icon:
      - width: 55%
      - color: var(--icon_off)
    name:
      - color: rgba(232,233,242,1)
      - align-self: end
      - justify-self: start
      - text-align: left
      - font-weight: bold
      - font-size: 12px
      - margin-left: 9px
    state:
      - white-space: normal
      - color: lightgrey
      - justify-self: start
      - align-self: end
      - font-weight: null
      - text-align: left
      - font-size: 12px
      - filter: opacity(90%)
      - margin-left: 9px
      - line-height: 110%
      - margin-top: 0px
    label:
      - white-space: normal
      - color: lightgrey
      - justify-self: start
      - align-self: start
      - text-align: left
      - font-weight: null
      - font-size: 12px
      - filter: opacity(90%)
      - margin-left: 9px
      - margin-bottom: 2px
      - line-height: 110%
    card:
      - padding: 8px 5px 8px 5px
      - font-size: 100%
      - white-space: normal
    custom_fields:
      bouton:
        - position: absolute
        - top: 70%
        - left: 50%
        - width: calc(90% + 1px)
        - transform: translate(-50%, calc(-50% + 10px))
        - '--ha-card-border-width': 0px
      jauge-cercle:
        - top: '-03%'
        - left: 75%
        - width: 25%
        - position: absolute
        - z-index: 2
        - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
        - '--ha-card-background': rgba(0, 0, 0, 0.0)"
        - '--ha-card-box-shadow': none
        - '--ha-card-border-width': 0px
      jauge-horizontal:
        - opacity: 90%
        - position: absolute
        - top: 65%
        - left: 0%
        - width: calc(100% + 0px)
        - transform: translate(-50%, calc(-50% + 10px))
        - z-index: 1
        - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
        - '--ha-card-background': rgba(0, 0, 0, 0.0)"
        - '--ha-card-box-shadow': none
        - '--ha-card-border-width': 0px
      graph_temp:
        - position: absolute
        - top: 80%
        - left: 50%
        - width: calc(100% + 15px)
        - transform: translate(-50%, calc(-50% + 10px))
        - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
        - '--ha-card-background': rgba(0, 0, 0, 0.0)"
        - '--ha-card-box-shadow': none
        - '--ha-card-border-width': 0px
      temp:
        - position: absolute
        - left: 8%
        - top: 60px
        - font-size: 20px
        - font-weight: bold
      hum:
        - position: absolute
        - left: 60%
        - top: 60px
        - font-size: 20px
        - font-weight: bold
  tap_action:
    action: more-info
  double_tap_action:
    action: toggle
graph_temp:
  custom_fields:
    graph_temp:
      card:
        type: custom:mini-graph-card
        height: 250
        line_width: 4
        lower_bound: 10
        points_per_hour: 1
        hours_to_show: 24
        show:
          fill: fade
          icon: false
          name: false
          state: false
          legend: false
          points: false
          labels: false
jauge_horizontal:
  custom_fields:
    jauge-horizontal:
      card:
        type: custom:bar-card
        name: null
        entity_row: true
        direction: null
        unit_of_measurement: null
        positions:
          value: 'off'
          name: 'off'
          indicator: 'off'
        height: 20px
        width: 100%
        icon: 'off'
carte_bouton:
  show_name: false
  show_state: false
  show_label: false
  show_icon: true
  styles:
    card:
      - border-radius: 8px
      - height: 27px
      - padding: 02px
      - line-height: 77%
      - background: rgba(43,53,66,0.6)
    icon:
      - color: grey
      - width: 16px
      - padding-bottom: 0px
    name:
      - font-size: 9px
    label:
      - font-size: 11px
    state:
      - font-size: 11px
  double_tap_action:
    action: more-info
  tap_action:
    action: toggle
carte_bouton_state:
  state:
    - value: 'on'
      styles:
        state:
          - font-weight: bold
        label:
          - font-weight: bold
        icon:
          - color: lightgrey
    - value: home
      styles:
        icon:
          - color: lightgrey
    - value: heat
      styles:
        icon:
          - color: lightgrey
    - value: Run
      styles:
        icon:
          - color: lightgrey
    - value: armed_away
      styles:
        icon:
          - color: lightgrey
    - value: playing
      styles:
        icon:
          - color: lightgrey
    - value: veille
      styles:
        icon:
          - color: lightgrey
    - value: 'off'
      styles:
        icon:
          - color: grey
    - value: not_home
      styles:
        icon:
          - color: grey
    - value: disarmed
      styles:
        icon:
          - color: grey
    - value: standby
      styles:
        icon:
          - color: grey
    - value: idle
      styles:
        icon:
          - color: grey
    - value: paused
      styles:
        icon:
          - color: grey
    - value: unavailable
      styles:
        icon:
          - color: red
          - animation: blink 0.8s ease infinite
  tap_action:
    action: more-info
carte_bouton_state_tv_salon:
  styles:
    icon:
      - color: |
          [[[
            if (states['media_player.tv_salon'].state == "on")
              return 'lightgrey';
            return "grey"
          ]]]
carte_bouton_state_tv_parents:
  styles:
    icon:
      - color: |
          [[[
            if (states['switch.tele_des_parents'].state == "on")
              return 'lightgrey';
            return "grey"
          ]]]
base_petite:
  styles:
    card:
      - height: 50px
base_moyenne:
  styles:
    card:
      - height: 80px
base_large:
  styles:
    card:
      - height: 95px
base_tres_large:
  styles:
    card:
      - height: 147px
base_extra_large:
  styles:
    card:
      - height: 235px
carte_piece:
  styles:
    custom_fields:
      notification:
        - border-radius: 50%
        - position: absolute
        - left: 18%
        - top: 6%
        - height: 15px
        - width: 15px
        - font-size: 85%
        - line-height: 17px
        - font-weight: null
        - background-color: |
            [[[
              if (entity.state == "off")
                return 'rgba(0,191,205,0)';
              return 'rgba(0,0,0,0.4)';
            ]]]
        - color: |
            [[[
              if (entity.state == "off")
                return 'rgba(0,191,205,0)';
              return 'lightgrey';
            ]]]
      lum:
        - position: absolute
        - top: 46%
        - left: 50%
        - width: calc(90% + 0px)
        - transform: translate(-50%, calc(-50% + 10px))
        - z-index: 8
        - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
        - '--ha-card-background': rgba(0, 0, 0, 0.0)
        - '--ha-card-box-shadow': none
        - '--ha-card-border-width': 0px
piece_jauge_lumiere:
  custom_fields:
    lum:
      card:
        type: conditional
        card:
          type: custom:my-slider
          radius: 10px
          height: 8px
          width: 100%
          mainSliderColor: var(--button-card-light-color-no-temperature)
          secondarySliderColor: darkslategrey
          thumbHorizontalPadding: 0px
          thumbVerticalPadding: 0px
          minSet: 1
          thumbWidth: 1px
          thumbColor: lightgrey
jauge_lumiere:
  custom_fields:
    lum:
      card:
        type: custom:my-slider
        radius: 6px
        height: 20px
        mainSliderColor: var(--button-card-light-color-no-temperature)
        thumbHorizontalPadding: 0px
        thumbVerticalPadding: 0px
        thumbWidth: 2px
        minSet: 1
  styles:
    custom_fields:
      lum:
        - position: absolute
        - top: 72%
        - left: 51%
        - width: calc(90% + 1px)
        - transform: translate(-50%, calc(-50% + 10px))
        - z-index: 1
        - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
        - '--ha-card-background': rgba(0, 0, 0, 0.0)"
        - '--ha-card-box-shadow': none
        - '--ha-card-border-width': 0px
carte_lumiere:
  template:
    - carte_badge
    - state_lumiere
    - state_unavailable
  styles:
    card:
      - height: 90px
    name:
      - padding-bottom: 30px
carte_badge:
  show_icon: true
  show_name: true
  show_state: false
  show_label: false
  template:
    - police
    - style
  styles:
    img_cell:
      - border-radius: 50%
      - width: 30px
      - height: 30px
      - background-color: var(--pastille_off)
      - color: var(--text_systeme_info)
      - margin-top: 2px
    icon:
      - width: 60%
      - color: var(--icon_off)
    label:
      - font-weight: null
      - font-size: 11px
      - color: var(--text_on)
    state:
      - font-weight: null
      - font-size: 11px
      - color: var(--text_on)
    name:
      - font-weight: bold
      - font-size: 11px
      - padding-top: 5%
      - color: rgba(232,233,242,1)
    card:
      - border-radius: 15px
      - height: auto
      - padding-left: 3px
      - padding-right: 3px
  state:
    - value: 'off'
      styles:
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
        label:
          - color: var(--text_off)
        state:
          - color: var(--text_off)
  double_tap_action:
    action: toggle
  tap_action:
    action: more-info
carte_ronde:
  show_icon: true
  show_name: false
  show_state: false
  show_label: false
  aspect_ratio: 1/1
  template:
    - police
    - style
  styles:
    img_cell:
      - border-radius: 100%
      - width: 27px
      - height: 27px
      - background-color: var(--pastille_off)
      - color: var(--text_systeme_info)
    icon:
      - width: 62%
      - color: var(--icon_off)
    card:
      - border-radius: 50%
      - padding: 0px
  double_tap_action:
    action: more-info
carte_thermo:
  template:
    - carte_ronde
    - state_unavailable
  show_icon: false
  show_state: true
  show_name: true
  show_label: true
  state:
    - value: 18.5
      operator: <
      styles:
        card:
          - background-color: var(--custom-card-color-blue)
        state:
          - color: var(--custom-icon-color-blue)
    - value: 26.9
      operator: '>'
      styles:
        card:
          - background-color: var(--custom-card-color-red)
        state:
          - color: var(--custom-icon-color-red)
  styles:
    name:
      - font-size: 90%
    state:
      - font-size: 130%
      - font-weight: bold
    label:
      - font-size: 90%
    custom_fields:
      gauge:
        - z-index: 1
        - position: absolute
        - top: 50.5%
        - left: 50%
        - opacity: 90%
        - width: calc(115% + 0px)
        - transform: translate(-50%, calc(-50% + 0px))
        - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
        - '--ha-card-background': rgba(0, 0, 0, 0.0)
        - '--ha-card-box-shadow': none
        - '--ha-card-border-width': 0px
  custom_fields:
    gauge:
      card:
        type: custom:hatc-gauge-card
        title:
          name: false
          icon: false
        gauge:
          icon: false
          icon-size: 20px
          state: false
          text-color: lightgrey
          font-size: 20px
          max_value: 50
          friendly_name: true
          severity:
            - color: rgb(0,191,255)
            - color: rgb(176, 196, 222)
              from: 0
              to: 18.4
            - color: rgb(180, 70, 70)
              from: 26.9
              to: 50
carte_humidite:
  template:
    - carte_ronde
    - state_unavailable
  show_icon: false
  show_state: true
  show_name: true
  show_label: true
  state:
    - value: 40
      operator: <
      styles:
        card:
          - background-color: var(--custom-card-color-blue)
        state:
          - color: var(--custom-icon-color-blue)
    - value: 70
      operator: '>'
      styles:
        card:
          - background-color: var(--custom-card-color-red)
        state:
          - color: var(--custom-icon-color-red)
  styles:
    name:
      - font-size: 90%
    state:
      - font-size: 130%
      - font-weight: bold
    label:
      - font-size: 90%
    custom_fields:
      gauge:
        - z-index: 1
        - position: absolute
        - top: 50.5%
        - left: 50%
        - opacity: 90%
        - width: calc(115% + 0px)
        - transform: translate(-50%, calc(-50% + 0px))
        - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
        - '--ha-card-background': rgba(0, 0, 0, 0.0)
        - '--ha-card-box-shadow': none
        - '--ha-card-border-width': 0px
  custom_fields:
    gauge:
      card:
        type: custom:hatc-gauge-card
        title:
          name: false
          icon: false
        gauge:
          icon: false
          icon-size: 20px
          state: false
          text-color: lightgrey
          font-size: 20px
          max_value: 100
          friendly_name: true
          severity:
            - color: rgb(0,191,255)
            - color: rgb(176, 196, 222)
              from: 0
              to: 39.9
            - color: rgb(180, 70, 70)
              from: 69.9
              to: 50
carte_lum:
  template:
    - carte_ronde
    - state_unavailable
  show_icon: false
  show_state: true
  show_name: true
  show_label: true
  state:
    - value: 100
      operator: <
      styles:
        card:
          - background-color: var(--custom-card-color-blue)
        state:
          - color: var(--custom-icon-color-blue)
    - value: 500
      operator: '>'
      styles:
        card:
          - background-color: var(--custom-card-color-red)
        state:
          - color: var(--custom-icon-color-red)
  styles:
    name:
      - font-size: 90%
    state:
      - font-size: 130%
      - font-weight: bold
    label:
      - font-size: 90%
    custom_fields:
      gauge:
        - position: absolute
        - top: 50.5%
        - left: 50%
        - opacity: 90%
        - width: calc(115% + 0px)
        - transform: translate(-50%, calc(-50% + 0px))
        - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
        - '--ha-card-background': rgba(0, 0, 0, 0.0)
        - '--ha-card-box-shadow': none
        - '--ha-card-border-width': 0px
  custom_fields:
    gauge:
      card:
        type: custom:hatc-gauge-card
        title:
          name: false
          icon: false
        gauge:
          icon: false
          icon-size: 20px
          state: false
          text-color: lightgrey
          font-size: 20px
          max_value: 1000
          friendly_name: true
          severity:
            - color: rgb(222, 222, 176)
            - color: rgb(176, 196, 222)
              from: 0
              to: 99.9
            - color: rgb(180, 70, 70)
              from: 500
              to: 10000
carte_jauge:
  template:
    - carte_ronde
    - state_unavailable
  show_icon: false
  show_state: true
  show_name: true
  show_label: true
  styles:
    name:
      - font-size: 90%
    state:
      - font-size: 130%
      - font-weight: bold
    label:
      - font-size: 90%
    custom_fields:
      gauge:
        - position: absolute
        - top: 50.5%
        - left: 50%
        - opacity: 90%
        - width: calc(115% + 0px)
        - transform: translate(-50%, calc(-50% + 0px))
        - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
        - '--ha-card-background': rgba(0, 0, 0, 0.0)
        - '--ha-card-box-shadow': none
        - '--ha-card-border-width': 0px
  custom_fields:
    gauge:
      card:
        type: custom:hatc-gauge-card
        title:
          name: false
          icon: false
        gauge:
          unit_of_measurement: false
          icon: false
          icon-size: 20px
          state: false
          text-color: lightgrey
          font-size: 20px
          friendly_name: true
state_lumiere:
  state:
    - value: 'on'
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: |-
              [[[ 
                var color = '255,215,0'; // Default Color

                if( states[entity.entity_id].attributes.rgb_color != undefined)
                  color = states[entity.entity_id].attributes.rgb_color; 
                
                return 'rgb(' + color + ',0.5)';
              ]]]
        img_cell:
          - background-color: |-
              [[[ 
                var color = '255,215,0'; // Default Color

                if( states[entity.entity_id].attributes.rgb_color != undefined)
                  color = states[entity.entity_id].attributes.rgb_color; 
                
                return 'rgb(' + color + ',0.3)';
              ]]]
        icon:
          - color: |-
              [[[ 
                var color = '255,215,0'; // Default Color

                if( states[entity.entity_id].attributes.rgb_color != undefined)
                  color = states[entity.entity_id].attributes.rgb_color; 
                
                return 'rgb(' + color + ',1)';
              ]]]
          - transition: 1s ease
    - value: 'off'
      color: grey
      styles:
        card:
          - animation: ball-scale2 0.2s
        img_cell:
          - background-color: var(--pastille_off)
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
state_porte:
  state:
    - value: 'on'
      icon: mdi:door-open
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-red)
        img_cell:
          - background-color: var(--custom-img-cell-color-red)
        icon:
          - color: var(--custom-icon-color-red)
          - transition: 1s ease
    - value: 'off'
      icon: mdi:door
      color: grey
      styles:
        card:
          - animation: ball-scale2 0.2s
        img_cell:
          - background-color: var(--pastille_off)
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
state_mouv:
  state:
    - value: 'on'
      icon: mdi:human-greeting
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-red)
        img_cell:
          - background-color: var(--custom-img-cell-color-red)
        icon:
          - color: var(--custom-icon-color-red)
          - transition: 1s ease
    - value: 'off'
      icon: mdi:human-male
      color: grey
      styles:
        card:
          - animation: ball-scale2 0.2s
        img_cell:
          - background-color: var(--pastille_off)
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
state_person:
  state:
    - value: Atoll
      styles:
        label:
          - color: var(--custom-icon-color-red)
        state:
          - color: var(--custom-icon-color-red)
    - value: Travail
      styles:
        label:
          - color: var(--custom-icon-color-red)
        state:
          - color: var(--custom-icon-color-red)
    - value: Collège
      styles:
        label:
          - color: var(--custom-icon-color-red)
        state:
          - color: var(--custom-icon-color-red)
    - value: Lycée
      styles:
        label:
          - color: var(--custom-icon-color-red)
        state:
          - color: var(--custom-icon-color-red)
    - value: home
      operator: '!='
      styles:
        label:
          - color: var(--custom-icon-color-red)
        state:
          - color: var(--custom-icon-color-red)
    - value: 'off'
      styles:
        label:
          - color: var(--custom-icon-color-red)
        state:
          - color: var(--custom-icon-color-red)
state_alarme:
  state:
    - value: disarmed
      color: grey
      styles:
        img_cell:
          - background-color: var(--pastille_off)
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
    - value: 'off'
      color: grey
      styles:
        img_cell:
          - background-color: var(--pastille_off)
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
    - value: armed_away
      color: red
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-red)
        img_cell:
          - background-color: var(--custom-img-cell-color-red)
        icon:
          - color: var(--custom-icon-color-red)
          - transition: 1s ease
    - value: armed_night
      color: red
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-red)
        img_cell:
          - background-color: var(--custom-img-cell-color-red)
        icon:
          - color: var(--custom-icon-color-red)
          - transition: 1s ease
    - value: 'on'
      color: red
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-red)
        img_cell:
          - background-color: var(--custom-img-cell-color-red)
        icon:
          - color: var(--custom-icon-color-red)
          - transition: 1s ease
    - value: arming
      color: gold
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-red)
        img_cell:
          - background-color: var(--custom-img-cell-color-red)
        icon:
          - color: var(--custom-icon-color-red)
          - transition: 1s ease
    - value: pending
      color: red
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-red)
        img_cell:
          - background-color: var(--custom-img-cell-color-red)
        icon:
          - color: var(--custom-icon-color-red)
          - animation: blink 1s ease infinite
          - transition: 1s ease
    - value: triggered
      color: red
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-red)
        img_cell:
          - background-color: var(--custom-img-cell-color-red)
        icon:
          - color: var(--custom-icon-color-red)
          - animation: blink 1s ease infinite
          - transition: 1s ease
state_temp:
  state:
    - value: 25.9
      operator: '>'
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-red)
        icon:
          - color: var(--custom-icon-color-red)
          - transition: 1s ease
    - value: 18.5
      operator: <
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
    - value: 25.9
      operator: <
      styles: null
state_temp_exterieur:
  state:
    - value: 25
      operator: '>'
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-red)
        img_cell:
          - background-color: var(--custom-img-cell-color-red)
        icon:
          - color: var(--custom-icon-color-red)
          - transition: 1s ease
        state:
          - font-weight: bold
    - value: 10
      operator: <
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: rgba(30,144,255,0.5)
        img_cell:
          - background-color: rgba(30,144,255,0.08)
        icon:
          - color: rgba(30,144,255,1)
          - transition: 1s ease
        state:
          - font-weight: bold
state_humidite:
  state:
    - value: 70
      operator: '>'
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-red)
        icon:
          - color: var(--custom-icon-color-red)
          - transition: 1s ease
        img_cell:
          - background-color: var(--custom-img-cell-color-red)
    - value: 40
      operator: <
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
state_luminosite:
  state:
    - value: 500
      operator: '>'
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-red)
        img_cell:
          - background-color: var(--custom-img-cell-color-red)
        icon:
          - color: var(--custom-icon-color-red)
          - transition: 1s ease
    - value: 150
      operator: <
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
state_imprimante:
  state:
    - value: idle
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
    - value: printing
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
    - value: stopped
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
    - value: unavailable
      color: var(--text_off)
      styles:
        card:
          - animation: ball-scale 0.2s
        img_cell:
          - background-color: var(--pastille_off)
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
    - value: 'off'
      color: var(--text_off)
      styles:
        card:
          - animation: ball-scale 0.2s
        img_cell:
          - background-color: var(--pastille_off)
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
state_appareil:
  state:
    - value: 'on'
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
    - value: 'off'
      color: var(--text_off)
      styles:
        img_cell:
          - background-color: var(--pastille_off)
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
state_musique:
  state:
    - value: 'on'
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
    - value: playing
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
    - value: 'off'
      color: var(--text_off)
      styles:
        img_cell:
          - background-color: var(--pastille_off)
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
state_machine:
  state:
    - value: 'on'
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
    - value: 'off'
      color: var(--text_off)
      styles:
        card:
          - animation: ball-scale 0.2s
        img_cell:
          - background-color: var(--pastille_off)
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
state_lave_linge:
  state:
    - value: 'on'
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
    - value: veille
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
    - value: 'off'
      color: var(--text_off)
      styles:
        card:
          - animation: ball-scale 0.2s
        img_cell:
          - background-color: var(--pastille_off)
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
state_aspi:
  state:
    - value: 'on'
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
          - animation: rotating 4s ease infinite
    - value: cleaning
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
          - animation: rotating 4s ease infinite
    - value: returning
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
          - animation: rotating 4s ease infinite
    - value: idle
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
    - value: paused
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
    - value: docked
      styles:
        card:
          - animation: ball-scale 0.2s
        img_cell:
          - background-color: var(--pastille_off)
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
    - value: 'off'
      styles:
        card:
          - animation: ball-scale 0.2s
        img_cell:
          - background-color: var(--pastille_off)
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
    - value: error
      styles:
        icon:
          - animation: blink 1s ease infinite
          - color: firebrick
          - transition: 1s ease
        card:
          - animation: ball-scale 0.2s
        img_cell:
          - background-color: var(--pastille_off)
        name:
          - color: firebrick
        label:
          - color: firebrick
          - font-weight: bold
  tap_action:
    action: navigate
    navigation_path: /lovelace/Aspis
state_tv:
  state:
    - value: 'on'
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
    - value: home
      styles:
        card:
          - animation: ball-scale 0.2s
          - background-color: var(--custom-card-color-blue)
        img_cell:
          - background-color: var(--custom-img-cell-color-blue)
        icon:
          - color: var(--custom-icon-color-blue)
          - transition: 1s ease
    - value: 'off'
      color: var(--text_off)
      styles:
        card:
          - animation: ball-scale 0.2s
        img_cell:
          - background-color: var(--pastille_off)
        icon:
          - color: var(--icon_off)
          - transition: 1s ease
state_batterie:
  show_state: true
  show_last_changed: true
  styles:
    name:
      - font-size: 12px
    state:
      - font-size: 12px
      - font-weight: bold
    label:
      - font-size: 9px
  units: '%'
  state:
    - value: 40
      operator: '>'
    - value: 20
      operator: '>'
      styles:
        card:
          - background-color: var(--custom-card-color-red)
        img_cell:
          - background-color: var(--custom-img-cell-color-red)
        icon:
          - color: var(--custom-icon-color-red)
        state:
          - color: var(--custom-icon-color-red)
    - value: 0
      operator: '>'
      styles:
        card:
          - background-color: var(--custom-card-color-red)
        img_cell:
          - background-color: var(--custom-img-cell-color-red)
        icon:
          - color: var(--custom-icon-color-red)
          - animation: blink 1s ease infinite
        state:
          - color: var(--custom-icon-color-red)
    - value: 0
      styles:
        card:
          - background-color: var(--custom-card-color-red)
        img_cell:
          - background-color: var(--custom-img-cell-color-red)
        icon:
          - color: var(--custom-icon-color-red)
          - animation: blink 1s ease infinite
        state:
          - color: var(--custom-icon-color-red)
    - value: unavailable
      styles:
        card:
          - border-color: rgba(255, 0, 0, 0.5)
          - opacity: 100%
        img_cell:
          - background-color: black
        icon:
          - color: red
          - transition: 1s ease
        name:
          - color: red
        label:
          - color: red
          - font-size: 65%
        state:
          - color: red
          - font-weight: bold
state_unavailable:
  state:
    - value: unavailable
      styles:
        card:
          - border-color: rgba(255, 0, 0, 0.8)
          - opacity: 100%
        img_cell:
          - background-color: black
        icon:
          - color: var(--custom-icon-color-red)
          - animation: blink 0.8s ease infinite
          - transition: 1s ease
        name:
          - color: red
        label:
          - color: red
        state:
          - color: red
carte_personne:
  show_entity_picture: true
  show_state: false
  template:
    - base
    - base_large
    - state_person
  styles:
    entity_picture:
      - width: 100%
    custom_fields:
      jauge-cercle:
        - width: 27%
      notification:
        - border-radius: 100%
        - position: absolute
        - left: 28px
        - top: 5%
        - width: 17.5px
        - height: 17.5px
        - line-height: 16px
        - background-color: |
            [[[
              if (entity.state == 'home') 
                return "rgb(103,173,91)"
              if (entity.state == 'not_home') 
                return "var(--custom-badge-color-red)"
              return "var(--custom-badge-color-blue)"
            ]]]
  custom_fields:
    notification: |
      [[[
            var f_n_zone = states[entity.entity_id].state;

            // supprime les accents
            var b="áàâäãåçéèêëíïîìñóòôöõúùûüýÁÀÂÄÃÅÇÉÈÊËÍÏÎÌÑÓÒÔÖÕÚÙÛÜÝ",
            c="aaaaaaceeeeiiiinooooouuuuyAAAAAACEEEEIIIINOOOOOUUUUY",
            d="";
            for(var i = 0, j = f_n_zone.length; i < j; i++) {
              var e = f_n_zone.substr(i, 1);
              d += (b.indexOf(e) !== -1) ? c.substr(b.indexOf(e), 1) : e;
            }
            // remplace " - " par "_"
            var id_zone = d.replaceAll(' - ', '_');
            // remplace les espaces restants par "_"
            id_zone = id_zone.replaceAll(' ', '_');
            // transforme le texte en minuscule 
            id_zone = id_zone.toLowerCase();

            if(states["zone." + id_zone] == undefined){
              return `<ha-icon icon="mdi:home-export-outline" style="width: 13px; height: 13px; color: white;"></ha-icon>`;
            }else{
              return `<ha-icon icon="${states["zone." + id_zone].attributes.icon}" style="width: 13px; height: 13px; color: white;"></ha-icon>`;
            }
          ]]]
  tap_action:
    action: navigate
    navigation_path: /lovelace/Personnes
  double_tap_action:
    action: more-info
carte_personne_aurel:
  entity: person.herve
  template:
    - carte_personne
  label: |
    [[[return states["sensor.aurel_gps"].state ]]]
  styles:
    label:
      - white-space: normal
  custom_fields:
    jauge-cercle:
      card:
        type: horizontal-stack
        cards:
          - type: conditional
            conditions:
              - entity: sensor.iphone_aurel_battery_state
                state: Not Charging
            card:
              type: custom:hatc-gauge-card
              entity: sensor.iphone_aurel_battery_level
              title:
                name: false
                icon: false
              gauge:
                icon: false
                font-size: 11px
                text-color: severity
                max_value: 100
                friendly_name: false
                unit_of_measurement: false
                severity:
                  - color: darkgrey
                  - color: rgb(70, 130, 180)
                    from: 100
                    to: 100
                  - color: rgb(255,215,0)
                    from: 31
                    to: 50
                  - color: rgb(180, 70, 70)
                    from: 0
                    to: 30
          - type: conditional
            conditions:
              - entity: sensor.iphone_aurel_battery_state
                state_not: Not Charging
            card:
              type: custom:hatc-gauge-card
              entity: sensor.iphone_aurel_battery_level
              title:
                name: false
                icon: false
              gauge:
                state: false
                font-size: 11px
                icon-size: 13px
                icon-color: severity
                max_value: 100
                friendly_name: false
                unit_of_measurement: false
                severity:
                  - color: darkgrey
                  - color: rgb(70, 130, 180)
                    from: 100
                    to: 100
                  - color: rgb(255,215,0)
                    from: 31
                    to: 50
                  - color: rgb(180, 70, 70)
                    from: 0
                    to: 30
    bouton:
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: sensor.aurel_duree
            show_state: true
            show_icon: false
            template:
              - carte_bouton
              - state_unavailable
            styles:
              state:
                - font-size: 10px
                - white-space: normal
              card:
                - padding-top: 5px
                - line-height: 60%
                - width: 35px
          - type: custom:button-card
            entity: sensor.iphone_activity
            template:
              - carte_bouton
            icon: |
              [[[
                if (states['sensor.iphone_activity'].state == 'Unknown')
                  return "mdi:human-handsdown"
                if (states['sensor.iphone_activity'].state == 'Stationary')
                  return "mdi:human-male"
                if (states['sensor.iphone_activity'].state == 'Automotive')
                  return "mdi:car"
                if (states['sensor.iphone_activity'].state == 'Walking')
                  return "mdi:walk"
                if (states['sensor.iphone_activity'].state == 'Running')
                  return "mdi:run-fast"
                if (states['sensor.iphone_activity'].state == 'Cycling')
                  return "mdi:bike"
                return ""
              ]]]
            styles:
              icon:
                - color: |
                    [[[
                      if (states['sensor.iphone_activity'].state == 'Stationary')
                        return "grey"
                      if (states['sensor.iphone_activity'].state == 'Automotive')
                        return "red"
                      return 'lightgrey'
                    ]]]
          - type: custom:button-card
            entity: device_tracker.aurel_mac_ping
            icon: mdi:laptop
            template:
              - carte_bouton
            styles:
              card:
                - background-color: |
                    [[[
                        if (states['sensor.macbook_aurel_internal_battery_state'].state == "Charging" && states['sensor.macbook_aurel_internal_battery_level'].state != 100 )
                          return "var(--custom-img-cell-color-yellow)"
                        if (states['sensor.macbook_aurel_internal_battery_state'].state == "Charging" && states['sensor.macbook_aurel_internal_battery_level'].state == 100)
                          return "var(--custom-img-cell-color-blue)"
                        if (states['sensor.macbook_aurel_internal_battery_state'].state == "Full" )
                          return "var(--custom-img-cell-color-blue)"
                        return "rgba(43,53,66,0.6)"
                    ]]]
              icon:
                - color: |
                    [[[
                      if (states['sensor.macbook_aurel_internal_battery_level'].state < 50)
                        return "tomato"
                      if (states['sensor.macbook_aurel_internal_battery_level'].state < 30)
                        return "rgb(180, 70, 70)"
                      if (states['device_tracker.aurel_mac_ping'].state == "home")
                        return 'lightgrey'
                      if (states['device_tracker.aurel_mac_ping'].state == "not_home")
                        return 'grey'
                    ]]]
          - type: custom:button-card
            entity: device_tracker.aurel_ipad_ping
            icon: mdi:tablet
            template:
              - carte_bouton
            styles:
              card:
                - background-color: |
                    [[[
                        if (states['sensor.ipad_aurel_battery_state'].state == "Charging" )
                          return "var(--custom-img-cell-color-gold)"
                        if (states['sensor.ipad_aurel_battery_state'].state == "Full" )
                          return "var(--custom-img-cell-color-blue)"
                        return "rgba(43,53,66,0.6)"
                    ]]]
              icon:
                - color: |
                    [[[
                      if (states['sensor.ipad_aurel_battery_level'].state < 50)
                        return "tomato"
                      if (states['sensor.ipad_aurel_battery_level'].state < 30)
                        return "rgb(180, 70, 70)"
                      if (states['device_tracker.aurel_ipad_ping'].state == "home")
                        return 'lightgrey'
                      if (states['device_tracker.aurel_ipad_ping'].state == "not_home")
                        return 'grey'
                    ]]]
carte_personne_alex:
  entity: person.alex
  label: |
    [[[return states["sensor.alex_gps"].state]]]
  template:
    - carte_personne
  styles:
    label:
      - white-space: normal
  custom_fields:
    jauge-cercle:
      card:
        type: horizontal-stack
        cards:
          - type: conditional
            conditions:
              - entity: sensor.alex_iphone_battery_state_ha
                state: Not Charging
            card:
              type: custom:hatc-gauge-card
              entity: sensor.alex_iphone_battery_level_ha
              title:
                name: false
                icon: false
              gauge:
                icon: false
                font-size: 11px
                text-color: severity
                max_value: 100
                friendly_name: false
                unit_of_measurement: false
                severity:
                  - color: darkgrey
                  - color: rgb(70, 130, 180)
                    from: 100
                    to: 100
                  - color: rgb(255,215,0)
                    from: 31
                    to: 50
                  - color: rgb(180, 70, 70)
                    from: 0
                    to: 30
          - type: conditional
            conditions:
              - entity: sensor.alex_iphone_battery_state_ha
                state_not: Not Charging
            card:
              type: custom:hatc-gauge-card
              entity: sensor.alex_iphone_battery_level_ha
              title:
                name: false
                icon: false
              gauge:
                state: false
                font-size: 11px
                icon-size: 13px
                icon-color: severity
                max_value: 100
                friendly_name: false
                unit_of_measurement: false
                severity:
                  - color: darkgrey
                  - color: rgb(70, 130, 180)
                    from: 100
                    to: 100
                  - color: rgb(255,215,0)
                    from: 31
                    to: 50
                  - color: rgb(180, 70, 70)
                    from: 0
                    to: 30
    bouton:
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: sensor.alex_duree
            show_state: true
            show_icon: false
            template:
              - carte_bouton
              - state_unavailable
            styles:
              state:
                - font-size: 10px
                - white-space: normal
              card:
                - padding-top: 5px
                - line-height: 60%
                - width: 35px
          - type: custom:button-card
            entity: sensor.alex_iphone_activity_2
            template:
              - carte_bouton
            icon: |
              [[[
                if (states['sensor.alex_iphone_activity_2'].state == 'Unknown')
                  return "mdi:human-handsdown"
                if (states['sensor.alex_iphone_activity_2'].state == 'Stationary')
                  return "mdi:human-male"
                if (states['sensor.alex_iphone_activity_2'].state == 'Automotive')
                  return "mdi:car"
                if (states['sensor.alex_iphone_activity_2'].state == 'Walking')
                  return "mdi:walk"
                if (states['sensor.alex_iphone_activity_2'].state == 'Running')
                  return "mdi:run-fast"
                if (states['sensor.alex_iphone_activity_2'].state == 'Cycling')
                  return "mdi:bike"
                return ""
              ]]]
            styles:
              icon:
                - color: |
                    [[[
                      if (states['sensor.alex_iphone_activity_2'].state == 'Stationary')
                        return "grey"
                      if (states['sensor.alex_iphone_activity_2'].state == 'Automotive')
                        return "red"
                      return 'lightgrey'
                    ]]]
          - type: custom:button-card
            entity: device_tracker.macbook_alex
            icon: mdi:laptop
            template:
              - carte_bouton
            styles:
              card:
                - background-color: |
                    [[[
                        if (states['sensor.macbook_alex_internal_battery_state'].state == "Charging" && states['sensor.macbook_alex_internal_battery_level'].state != 100)
                          return "var(--custom-img-cell-color-gold)"
                        if (states['sensor.macbook_alex_internal_battery_state'].state == "Charging" && states['sensor.macbook_alex_internal_battery_level'].state == 100)
                          return "var(--custom-img-cell-color-blue)"
                        if (states['sensor.macbook_alex_internal_battery_state'].state == "Full" )
                          return "var(--custom-img-cell-color-blue)"
                        return "rgba(43,53,66,0.6)"
                    ]]]
              icon:
                - color: |
                    [[[
                      if (states['sensor.macbook_alex_internal_battery_level'].state < 50)
                        return "tomato"
                      if (states['sensor.macbook_alex_internal_battery_level'].state < 30)
                        return "rgb(180, 70, 70)"
                      if (states['device_tracker.alex_mac_ping'].state == "home")
                        return 'lightgrey'
                      if (states['device_tracker.alex_mac_ping'].state == "not_home")
                        return 'grey'
                    ]]]
          - type: custom:button-card
            entity: device_tracker.liseuse_alex
            icon: |
              [[[
                if (states['device_tracker.liseuse_alex'].state == "home")
                  return 'mdi:book-open'
                if (states['device_tracker.liseuse_alex'].state == "not_home")
                  return 'mdi:book-open'
              ]]]
            template:
              - carte_bouton
              - carte_bouton_state
carte_personne_tom:
  entity: person.tom
  label: |
    [[[return states["sensor.tom_gps"].state]]]
  template:
    - carte_personne
  custom_fields:
    bouton:
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: sensor.tom_duree
            show_state: true
            show_icon: false
            template:
              - carte_bouton
              - state_unavailable
            styles:
              state:
                - font-size: 10px
          - type: custom:button-card
            entity: device_tracker.tom_mac_ping
            icon: mdi:laptop
            template:
              - carte_bouton
              - carte_bouton_state
carte_personne_manon:
  entity: person.manon
  label: |
    [[[
      if (states['device_tracker.manon_tab_ping'].state == 'home')
        return "Présent"
      return "Absent"
    ]]]
  template:
    - carte_personne
  custom_fields:
    bouton:
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: sensor.manon_duree
            show_state: true
            show_icon: false
            template:
              - carte_bouton
              - state_unavailable
            styles:
              state:
                - font-size: 10px
carte_personne_leane:
  entity: person.leane
  label: |
    [[[
      if (states['device_tracker.leane_tab_ping'].state == 'home')
        return "Présent"
      return "Absent"
    ]]]
  template:
    - carte_personne
  custom_fields:
    bouton:
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: sensor.leane_duree
            show_state: true
            show_icon: false
            template:
              - carte_bouton
              - state_unavailable
            styles:
              state:
                - font-size: 10px
carte_personne_nina:
  entity: person.nina
  label: |
    [[[
      if (states['device_tracker.nina_tab_ping'].state == 'home')
        return "Présent"
      return "Absent"
    ]]]
  template:
    - carte_personne
  custom_fields:
    bouton:
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: sensor.nina_duree
            show_state: true
            show_icon: false
            template:
              - carte_bouton
              - state_unavailable
            styles:
              state:
                - font-size: 10px
carte_appareil:
  styles:
    custom_fields:
      barre_imprimante_noire:
        - opacity: 90%
        - position: absolute
        - top: 50%
        - left: 0%
        - width: calc(100% + 0px)
        - transform: translate(-50%, calc(-50% + 10px))
        - z-index: 1
        - '--ha-card-border-width': 0px
      barre_imprimante_couleur:
        - opacity: 90%
        - position: absolute
        - top: 75%
        - left: 0%
        - width: calc(100% + 0px)
        - transform: translate(-50%, calc(-50% + 10px))
        - z-index: 1
        - '--ha-card-border-width': 0px
carte_appareil_vaisselle:
  entity: switch.lave_vaisselle_power
  name: Vaisselle
  icon: phu:rooms-dining
  template:
    - base
    - base_large
    - carte_appareil
    - state_machine
    - state_unavailable
  label: |
    [[[
      if (states['switch.lave_vaisselle_power'].state == "on" &&states['switch.lave_vaisselle_program_machinecare'].state == "on")
        return "Entretien"+"<br>"+states['sensor.lave_vaisselle'].state
      if (states['switch.lave_vaisselle_power'].state == "on" &&states['switch.lave_vaisselle_program_machinecare'].state == "off")
        return states['sensor.lave_vaisselle'].state
      if (states['switch.lave_vaisselle_power'].state == "off")
        return "Éteint "
      return "" 
    ]]]
  tap_action:
    action: more-info
  double_tap_action:
    action: toggle
  custom_fields:
    jauge-cercle:
      card:
        type: conditional
        conditions:
          - entity: switch.lave_vaisselle_power
            state: 'on'
        card:
          type: custom:hatc-gauge-card
          entity: sensor.lave_vaisselle_program_progress
          title:
            name: false
            icon: false
            text-align: center
            text-color: red
            font-size: 28px
          gauge:
            icon: false
            font-size: 11px
            text-color: severity
            max_value: 100
            friendly_name: false
            unit_of_measurement: false
            severity:
              - color: darkgrey
              - color: rgb(70, 130, 180)
                from: 95
                to: 100
              - color: rgb(180, 70, 70)
                from: 0
                to: 1
    bouton:
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: switch.lave_vaisselle_power
            icon: mdi:power
            template:
              - carte_bouton
              - carte_bouton_state
            tap_action:
              confirmation:
                text: >-
                  [[[ return `${entity.attributes.friendly_name} : confirmer
                  la bascule ON / OFF ?` ]]]
          - type: custom:button-card
            entity: switch.lave_vaisselle_program_auto2
            icon: mdi:flag-checkered
            template:
              - carte_bouton
              - carte_bouton_state
            tap_action:
              confirmation:
                text: >-
                  [[[ return `${entity.attributes.friendly_name} : confirmer
                  la bascule du programme ?` ]]]
          - type: custom:button-card
            entity: binary_sensor.lave_vaisselle_door
            template:
              - carte_bouton
              - carte_bouton_state
            tap_action:
              action: more-info
carte_appareil_linge:
  entity: input_select.lave_linge
  name: Linge
  icon: mdi:tshirt-crew
  template:
    - base
    - base_large
    - carte_appareil
    - state_lave_linge
    - state_unavailable
  label: |
    [[[
      if (states['input_select.lave_linge'].state == "off")
        return "Éteint"
      if (states['input_select.lave_linge'].state == "veille")
        return "Veille : "+ states['sensor.lave_linge_duree'].state
      if (states['input_select.lave_linge'].state == "on")
        return "Dépuis : "+ states['sensor.lave_linge_duree'].state
    ]]]
  tap_action:
    action: more-info
  double_tap_action:
    action: toggle
  custom_fields:
    bouton:
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: sensor.lave_linge_conso
            units: W
            show_state: true
            show_icon: false
            template:
              - carte_bouton
              - state_unavailable
            styles:
              state:
                - font-size: 11px
                - color: |
                    [[[
                      if (states['sensor.lave_linge_conso'].state > 0.4)
                        return 'rlightgrey';
                      return "grey"
                    ]]]
          - type: custom:button-card
            entity: switch.lave_linge
            icon: mdi:power-plug
            template:
              - carte_bouton
              - state_unavailable
carte_appareil_imprimante:
  type: custom:button-card
  entity: sensor.canon_mg4100_series
  name: Imprimante
  icon: mdi:printer
  label: |
    [[[
      if (states['sensor.canon_mg4100_series'].state == "unavailable")
        return "Éteint"
      if (states['sensor.canon_mg4100_series'].state == "printing")
        return "Impression"
      if (states['sensor.canon_mg4100_series'].state == "stopped")
        return "Arrêt"
      if (states['sensor.canon_mg4100_series'].state == "idle")
        return "Veille"
      return states['sensor.canon_mg4100_series'].state
    ]]]
  template:
    - base
    - base_large
    - carte_appareil
    - state_imprimante
  custom_fields:
    barre_imprimante_noire:
      card:
        type: conditional
        conditions:
          - entity: sensor.canon_mg4100_series
            state_not: unavailable
        card:
          type: custom:bar-card
          name: Batterie
          entities:
            - entity: sensor.canon_mg4100_series_black
              color: rgb(30,30,30)
          entity_row: true
          direction: null
          unit_of_measurement: '%'
          max: 100
          positions:
            value: inside
            name: 'off'
            indicator: 'off'
          height: 17px
          width: 100%
          icon: 'off'
          style: |-
            bar-card-value {
              font-size: 11px;
              font-weight: bold;
              color: var(--text_on);
            }
    barre_imprimante_couleur:
      card:
        type: conditional
        conditions:
          - entity: sensor.canon_mg4100_series
            state_not: unavailable
        card:
          type: custom:bar-card
          name: Batterie
          entities:
            - entity: sensor.canon_mg4100_series_color
              color: rgb(70, 130, 180)
          entity_row: true
          direction: null
          unit_of_measurement: '%'
          max: 100
          positions:
            value: inside
            name: 'off'
            indicator: 'off'
          height: 17px
          width: 100%
          icon: 'off'
          style: |-
            bar-card-value {

              font-size: 11px;
              font-weight: bold;
              color: var(--text_on);
            }
  tap_action:
    action: more-info
  double_tap_action:
    action: toggle
carte_tv:
  styles:
    card:
      - height: 132px
    custom_fields:
      bouton2:
        - position: absolute
        - top: 54%
        - left: 50%
        - width: calc(90% + 0px)
        - transform: translate(-50%, calc(-50% + 10px))
        - '--ha-card-border-width': 0px
      bouton:
        - top: 79%
      barre_volume:
        - position: absolute
        - opacity: 100%
        - top: 40%
        - left: '-06%'
        - width: calc(100% + 020px)
        - transform: translate(-50%, calc(-50% + 10px))
        - z-index: 1
        - '--ha-card-border-width': 0px
carte_securite:
  label: |-
    [[[ 
        if( states[entity.entity_id].state == "disarmed" )
        return "Désarmée"
        if( states[entity.entity_id].state == "armed_away" )
        return "Absent"
        if( states[entity.entity_id].state == "armed_night" )
        return "Nuit"
        if( states[entity.entity_id].state == "arming" )
        return "Armement"
        if( states[entity.entity_id].state == "triggered" )
        return "Déclenchée"]]]
carte_multimedia:
  aspect_ratio: 1/1
  show_entity_picture: true
  icon: |-
    [[[
      if (entity.state == 'playing' )
        return ""
      if (entity.state != 'playing' )
        return "mdi:speaker"
    ]]]
  styles:
    entity_picture:
      - width: 100%
    custom_fields:
      notification:
        - border-radius: 50%
        - position: absolute
        - left: 21%
        - top: 03%
        - height: 10%
        - width: 10%
        - font-size: 85%
        - line-height: 137%
        - font-weight: null
      cartes:
        - position: absolute
        - border-radius: 50%
        - top: 44.5%
        - left: 50%
        - width: calc(100% + 03px)
        - transform: translate(-50%, calc(-50% + 10px))
titre_section:
  show_icon: false
  show_name: true
  show_state: false
  show_label: true
  template:
    - police
  styles:
    name:
      - font-size: 14px
      - font-weight: bold
      - color: var(--text_on)
      - justify-self: start
    label:
      - font-size: 14px
      - font-weight: bold
      - color: var(--text_on)
      - justify-self: start
    card:
      - height: 35px
      - padding: 01%
      - border-radius: 0px
      - line-height: 100%
      - '--ha-card-border-width': 0px
  tap_action:
    action: toggle
  double-tap_action:
    action: more-info
  style:
    .: |
      ha-card {
          --ha-card-background: none !important;
          box-shadow: none !important;
          font-family: Avenir
          border-width: 0px
badge:
  template:
    - police
    - style
  show_name: false
  show_label: true
  show_icon: true
  styles:
    grid:
      - grid-template-areas: '"i n l" '
    card:
      - height: 32px
      - width: auto
      - padding-right: 07px
      - padding-left: 03px
      - border-radius: 15px
    img_cell:
      - background-color: transparent
      - border-radius: 50%
      - width: 25px
      - height: 25px
    icon:
      - width: 18px
    entity_picture:
      - width: 90%
    label:
      - font-size: 11px
      - font-weight: bold
      - margin-left: 1px
      - padding-top: 03px
    name:
      - font-size: 11px
      - font-weight: bold
      - margin-left: 1px
  double_tap_action:
    action: more-info
carte_systeme:
  styles:
    custom_fields:
      reload:
        - position: absolute
        - top: 2%
        - left: 113%
        - width: calc(55% + 1px)
        - transform: translate(-50%, calc(-50% + 10px))
        - z-index: 1
        - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
        - '--ha-card-background': rgba(0, 0, 0, 0.0)"
        - '--ha-card-box-shadow': none
        - opacity: 100%
        - '--ha-card-border-width': 0px
      graph:
        - position: absolute
        - top: 60%
        - left: 50%
        - width: calc(100% + 15px)
        - transform: translate(-50%, calc(-50% + 10px))
        - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
        - '--ha-card-background': rgba(0, 0, 0, 0.0)"
        - '--ha-card-box-shadow': none
        - '--ha-card-border-width': 0px
      graph_bar:
        - position: absolute
        - top: 69%
        - left: 51%
        - width: calc(100% + 35px)
        - transform: translate(-50%, calc(-50% + 10px))
        - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
        - '--ha-card-background': rgba(0, 0, 0, 0.0)"
        - '--ha-card-box-shadow': none
        - '--ha-card-border-width': 0px
      info1:
        - color: var(--text_systeme_info)
        - position: absolute
        - top: 50px
        - left: 10px
        - font-size: 90%
        - font-weight: null
        - text-align: left
        - white-space: normal
      info2:
        - color: var(--text_systeme_info)
        - position: absolute
        - top: 70px
        - left: 10px
        - font-size: 90%
        - font-weight: null
        - text-align: left
      info3:
        - color: var(--text_systeme_info)
        - position: absolute
        - top: 90px
        - left: 10px
        - font-size: 90%
        - font-weight: null
        - text-align: left
      info4:
        - color: var(--text_systeme_info)
        - position: absolute
        - top: 110px
        - left: 10px
        - font-size: 90%
        - font-weight: null
        - text-align: left
title: Chez On
views:
- theme: Backend-selected
  icon: mdi:home
  visible:
    - user: 76afcf1927a948b19530bcbf1074ac59
    - user: 2f0040afe95a4514ade3c049a0b5d479
    - user: d8316597eafd4333b737464a5b4c62d0
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      cards:
        - cards:
            - type: vertical-stack
              cards:
                - type: custom:button-card
                  template:
                    - titre_section
                  name: >
                    [[[ return states['sensor.time'].state + "
                    "+states['sensor.bonjour'].state]]]
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: sensor.compteur_home
                      name: Personnes
                      icon: |
                        [[[
                          if (states['sensor.compteur_home'].state == 0)
                            return "mdi:home-off" 
                          return "mdi:home"
                        ]]]
                      template:
                        - badge
                      label: |
                        [[[
                          return states['sensor.compteur_home'].state
                        ]]]
                      styles:
                        card:
                          - background-color: |
                              [[[
                                if (states['sensor.compteur_home'].state == 0)
                                  return "var(--custom-card-color-red)" ;
                                return "";
                              ]]]
                        icon:
                          - color: |
                              [[[
                                if (states['sensor.compteur_home'].state == 0)
                                  return "var(--custom-icon-color-red)" ;
                                return "darkgrey";
                              ]]]
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Personnes
                    - type: custom:button-card
                      entity: binary_sensor.portes
                      name: Portes
                      template:
                        - badge
                      label: |
                        [[[return states['sensor.compteur_portes'].state]]]
                      styles:
                        card:
                          - background-color: |
                              [[[
                                if (states['binary_sensor.portes'].state == "on")
                                  return "var(--custom-card-color-red)" ;
                                return "";
                              ]]]
                        icon:
                          - color: |
                              [[[
                                if (states['binary_sensor.portes'].state == "on")
                                  return "var(--custom-icon-color-red)" ;
                                return "darkgrey";
                              ]]]
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Portes
                    - type: custom:button-card
                      entity: binary_sensor.mouvements
                      name: Mouvements
                      template:
                        - badge
                      label: |
                        [[[return states['sensor.compteur_mouvement'].state]]]
                      styles:
                        card:
                          - background-color: |
                              [[[
                                if (states['binary_sensor.mouvements'].state == "on")
                                  return "var(--custom-card-color-red)" ;
                                return "";
                              ]]]
                        icon:
                          - color: |
                              [[[
                                if (states['binary_sensor.mouvements'].state == "on")
                                  return "var(--custom-icon-color-red)" ;
                                return "darkgrey";
                              ]]]
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Mouvements
                    - type: custom:button-card
                      name: Lumière
                      entity: light.tout
                      show_name: false
                      show_label: true
                      label: |
                        [[[return states['sensor.compteur_lumiere'].state]]]
                      template:
                        - badge
                        - state_unavailable
                      styles:
                        card:
                          - background-color: |
                              [[[
                                if (entity.state == "on")
                                  return "var(--button-card-light-color-no-temperature)" ;
                                return "";
                              ]]]
                        icon:
                          - color: |
                              [[[
                                if (entity.state == "on")
                                  return "var(--button-card-light-color-no-temperature)" ;
                                return "darkgrey";
                              ]]]
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Lumières
                    - type: conditional
                      conditions:
                        - entity: input_boolean.noel
                          state: 'on'
                      card:
                        type: custom:button-card
                        entity: group.noel
                        icon: phu:christmas-tree
                        name: Noel
                        template:
                          - badge
                        label: |
                          [[[
                            return states['sensor.compteur_noel'].state
                          ]]]
                        styles:
                          card:
                            - background-color: |
                                [[[
                                  if (states['sensor.compteur_noel'].state == 0)
                                    return "" ;
                                  return "green";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (states['sensor.compteur_noel'].state == 0)
                                    return "darkgrey" ;
                                  return "green";
                                ]]]
                        tap_action:
                          action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      name: Aspi
                      entity: group.aspis
                      icon: phu:roborock
                      show_name: false
                      show_label: true
                      label: |
                        [[[return states['sensor.compteur_aspi'].state]]]
                      template:
                        - badge
                        - state_unavailable
                      styles:
                        card:
                          - background-color: |
                              [[[
                                if (states['group.aspis'].state == "on")
                                  return "var(--custom-card-color-blue)" ;
                                return "";
                              ]]]
                        icon:
                          - color: |
                              [[[
                                if (states['group.aspis'].state == "on")
                                  return "var(--custom-icon-color-blue)" ;
                                return "darkgrey";
                              ]]]
                          - animation: |
                              [[[
                                if (states['group.aspis'].state == "on")
                                  return "rotating 4s ease infinite" ;
                                return "";
                              ]]]
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Aspis
                    - type: custom:button-card
                      entity: sensor.musique3
                      icon: mdi:speaker-multiple
                      template:
                        - badge
                      label: |
                        [[[return states['sensor.compteur_musique'].state]]]
                      styles:
                        card:
                          - background-color: |
                              [[[
                                if (states['sensor.compteur_musique'].state == 0)
                                  return "" ;
                                return "var(--custom-card-color-blue)";
                              ]]]
                        icon:
                          - color: |
                              [[[
                                if (states['sensor.compteur_musique'].state == 0)
                                  return "darkgrey" ;
                                return "var(--custom-icon-color-blue)";
                              ]]]
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Musique
                    - type: custom:button-card
                      entity: group.tv
                      icon: |
                        [[[
                          if (states['sensor.compteur_tv'].state == 0)
                            return "mdi:television" 
                          if (states['sensor.compteur_tv'].state == 1)
                            return "mdi:television" 
                          if (states['sensor.compteur_tv'].state == 2)
                            return "mdi:television-play" 
                        ]]]
                      template:
                        - badge
                      label: |
                        [[[
                          return states['sensor.compteur_tv'].state
                        ]]]
                      styles:
                        card:
                          - background-color: |
                              [[[
                                if (states['sensor.compteur_tv'].state == 0)
                                  return "" ;
                                return "var(--custom-card-color-blue)";
                              ]]]
                        icon:
                          - color: |
                              [[[
                                if (states['sensor.compteur_tv'].state == 0)
                                  return "darkgrey" ;
                                return "var(--custom-icon-color-blue)";
                              ]]]
                      tap_action:
                        action: more-info
                    - type: custom:button-card
                      entity: group.machines
                      icon: mdi:washing-machine
                      template:
                        - badge
                      label: |
                        [[[return states['sensor.compteur_machines'].state]]]
                      styles:
                        card:
                          - background-color: |
                              [[[
                                if (states['sensor.compteur_machines'].state == 0)
                                  return "" ;
                                return "var(--custom-card-color-blue)";
                              ]]]
                        icon:
                          - color: |
                              [[[
                                if (states['sensor.compteur_machines'].state == 0)
                                  return "darkgrey" ;
                                return "var(--custom-icon-color-blue)";
                              ]]]
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Autres
                    - type: custom:button-card
                      entity: group.autre
                      icon: |
                        [[[
                          if (states['group.autre'].state == 'off')
                            return "mdi:power-cycle" 
                          return "mdi:power" 
                        ]]]
                      template:
                        - badge
                      label: |
                        [[[return states['sensor.compteur_autre'].state]]]
                      styles:
                        card:
                          - background-color: |
                              [[[
                                if (states['sensor.compteur_autre'].state == 0)
                                  return "" ;
                                return "var(--custom-card-color-blue)";
                              ]]]
                        icon:
                          - color: |
                              [[[
                                if (states['sensor.compteur_autre'].state == 0)
                                  return "darkgrey" ;
                                return "var(--custom-icon-color-blue)";
                              ]]]
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Autres
                    - type: custom:button-card
                      entity: group.annonces
                      icon: phu:echo-show-5-gen-2
                      template:
                        - badge
                      styles:
                        card:
                          - background-color: |
                              [[[
                                if (states['group.annonces'].state == "off")
                                  return "" ;
                                return "var(--custom-card-color-blue)";
                              ]]]
                        icon:
                          - padding-left: 7px
                          - color: |
                              [[[
                                if (states['group.annonces'].state == "off")
                                  return "darkgrey" ;
                                return "var(--custom-icon-color-blue)";
                              ]]]
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Annonces
                - square: false
                  columns: 2
                  type: grid
                  cards:
                    - type: custom:button-card
                      entity: alarm_control_panel.alarme
                      name: Alarme
                      icon: |
                        [[[
                          if (entity.state == "disarmed" )
                            return "mdi:shield-off";
                          if (entity.state == "armed_away" )
                            return "mdi:shield-lock";
                          if (entity.state == "armed_home" )
                            return "mdi:shield-home";
                          if (entity.state == "armed_night" )
                            return "mdi:shield-moon";
                          if (entity.state == "arming" )
                            return "mdi:shield-half-full";
                          if (entity.state == "triggered" )
                            return "mdi:shield-alert";
                          return "mdi:shield-off";
                        ]]]
                      template:
                        - base
                        - base_large
                        - carte_securite
                        - state_alarme
                        - state_unavailable
                      custom_fields:
                        bouton:
                          card:
                            type: horizontal-stack
                            cards:
                              - type: custom:button-card
                                entity: script.alarme_disarmed
                                template:
                                  - carte_bouton
                                tap_action:
                                  confirmation:
                                    text: >-
                                      [[[ return
                                      `${entity.attributes.friendly_name} :
                                      confirmer la désactivation ?` ]]]
                              - type: custom:button-card
                                entity: script.alarme_armed_away
                                template:
                                  - carte_bouton
                                tap_action:
                                  confirmation:
                                    text: >-
                                      [[[ return
                                      `${entity.attributes.friendly_name} :
                                      confirmer le mode Absent ?` ]]]
                              - type: custom:button-card
                                entity: script.alarme_armed_night
                                template:
                                  - carte_bouton
                                tap_action:
                                  confirmation:
                                    text: >-
                                      [[[ return
                                      `${entity.attributes.friendly_name} :
                                      confirmer le mode Nuit ?` ]]]
                      double_tap_action:
                        action: call-service
                        service: script.alarme_on_off
                        service_data: null
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Alarmes
                    - type: custom:button-card
                      entity: alarm_control_panel.aarlo_sonnette
                      template:
                        - base
                        - base_large
                        - carte_securite
                        - state_alarme
                        - state_unavailable
                      name: |
                        [[[ return "Sonnette "]]]
                      icon: phu:arlo-video-doorbell
                      custom_fields:
                        jauge-cercle:
                          card:
                            type: custom:hatc-gauge-card
                            entity: sensor.aarlo_battery_level_sonnette
                            title:
                              name: false
                              icon: false
                              text-align: center
                              text-color: red
                              font-size: 28px
                            gauge:
                              icon: false
                              font-size: 11px
                              text-color: severity
                              max_value: 100
                              friendly_name: false
                              unit_of_measurement: false
                              severity:
                                - color: darkgrey
                                - color: rgb(180, 70, 70)
                                  from: 0
                                  to: 30
                        bouton:
                          card:
                            type: horizontal-stack
                            cards:
                              - type: custom:button-card
                                entity: script.alarme_sonnette_disarmed
                                template:
                                  - carte_bouton
                                tap_action:
                                  confirmation:
                                    text: >-
                                      [[[ return
                                      `${entity.attributes.friendly_name} :
                                      confirmer la désactivation ?` ]]]
                              - type: custom:button-card
                                entity: script.alarme_sonnette_armee
                                template:
                                  - carte_bouton
                                tap_action:
                                  confirmation:
                                    text: >-
                                      [[[ return
                                      `${entity.attributes.friendly_name} :
                                      confirmer le mode Absent ?` ]]]
                              - type: custom:button-card
                                entity: switch.aarlo_snapshot_sonnette
                                template:
                                  - carte_bouton
                      double_tap_action:
                        action: call-service
                        service: script.alarme_sonnette_on_off
                        service_data: null
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Alarmes
                - type: conditional
                  conditions:
                    - entity: group.alarmes
                      state_not: 'off'
                  card:
                    square: true
                    columns: 3
                    type: grid
                    cards:
                      - entity: camera.aarlo_sonnette
                        title: Sonnette
                        hide:
                          - date
                        card_size: 3
                        global: square
                        image_click: play
                        image_view: arlo-stream
                        show:
                          - motion
                          - image_date
                          - image_date
                          - on_off
                        top_date: true
                        top_status: false
                        top_title: false
                        type: custom:aarlo-glance
                      - camera_view: live
                        type: picture-glance
                        entities:
                          - entity: binary_sensor.mouvements_sejour
                          - entity: binary_sensor.porte_salle_a_manger
                        camera_image: camera.camera_hub_g3_2725
                      - camera_view: live
                        type: picture-glance
                        entities:
                          - entity: binary_sensor.mouv_garage
                          - entity: binary_sensor.porte_garage
                        camera_image: camera.camera_g2hpro
                - type: horizontal-stack
                  cards:
                    - type: conditional
                      conditions:
                        - entity: sensor.le_bureau_next_timer
                          state_not: unavailable
                        - entity: sensor.le_bureau_next_timer
                          state_not: unknown
                      card:
                        type: custom:button-card
                        entity: sensor.minuteur_bureau
                        name: Bureau
                        icon: mdi:timer-sand
                        show_state: true
                        show_label: false
                        show_last_update: false
                        template:
                          - base
                          - base_petite
                    - type: conditional
                      conditions:
                        - entity: sensor.la_cuisine_next_timer
                          state_not: unavailable
                        - entity: sensor.la_cuisine_next_timer
                          state_not: unknown
                      card:
                        type: custom:button-card
                        entity: sensor.minuteur_cuisine
                        name: Cuisine
                        icon: mdi:timer-sand
                        show_state: true
                        show_label: false
                        show_last_update: false
                        template:
                          - base
                          - base_petite
                    - type: conditional
                      conditions:
                        - entity: sensor.le_salon_next_timer
                          state_not: unavailable
                        - entity: sensor.le_salon_next_timer
                          state_not: unknown
                      card:
                        type: custom:button-card
                        entity: sensor.minuteur_salon
                        name: Salon
                        icon: mdi:timer-sand
                        show_state: true
                        show_label: false
                        show_last_update: false
                        template:
                          - base
                          - base_petite
                    - type: conditional
                      conditions:
                        - entity: sensor.aurel_s_fire_tv_cube_next_timer
                          state_not: unavailable
                        - entity: sensor.aurel_s_fire_tv_cube_next_timer
                          state_not: unknown
                      card:
                        type: custom:button-card
                        entity: sensor.minuteur_fire_tv
                        name: Fire TV
                        icon: mdi:timer-sand
                        show_state: true
                        show_label: false
                        show_last_update: false
                        template:
                          - base
                          - base_petite
                    - type: conditional
                      conditions:
                        - entity: sensor.la_salle_de_bain_next_timer
                          state_not: unavailable
                        - entity: sensor.la_salle_de_bain_next_timer
                          state_not: unknown
                      card:
                        type: custom:button-card
                        entity: sensor.minuteur_sdb
                        name: SDB
                        icon: mdi:timer-sand
                        show_state: true
                        show_label: false
                        show_last_update: false
                        template:
                          - base
                          - base_petite
                    - type: conditional
                      conditions:
                        - entity: sensor.papa_next_timer
                          state_not: unavailable
                        - entity: sensor.papa_next_timer
                          state_not: unknown
                      card:
                        type: custom:button-card
                        entity: sensor.minuteur_aurel
                        name: Aurel
                        icon: mdi:timer-sand
                        show_state: true
                        show_label: false
                        show_last_update: false
                        template:
                          - base
                          - base_petite
                    - type: conditional
                      conditions:
                        - entity: sensor.maman_next_timer
                          state_not: unavailable
                        - entity: sensor.maman_next_timer
                          state_not: unknown
                      card:
                        type: custom:button-card
                        entity: sensor.minuteur_alex
                        name: Alex
                        icon: mdi:timer-sand
                        show_state: true
                        show_label: false
                        show_last_update: false
                        template:
                          - base
                          - base_petite
                    - type: conditional
                      conditions:
                        - entity: sensor.tom_next_timer
                          state_not: unavailable
                        - entity: sensor.tom_next_timer
                          state_not: unknown
                      card:
                        type: custom:button-card
                        entity: sensor.minuteur_tom
                        name: Tom
                        icon: mdi:timer-sand
                        show_state: true
                        show_label: false
                        show_last_update: false
                        template:
                          - base
                          - base_petite
                    - type: conditional
                      conditions:
                        - entity: sensor.nina_next_timer
                          state_not: unavailable
                        - entity: sensor.nina_next_timer
                          state_not: unknown
                      card:
                        type: custom:button-card
                        entity: sensor.minuteur_nina
                        name: Nina
                        icon: mdi:timer-sand
                        show_state: true
                        show_label: false
                        show_last_update: false
                        template:
                          - base
                          - base_petite
                    - type: conditional
                      conditions:
                        - entity: sensor.leane_next_timer
                          state_not: unavailable
                        - entity: sensor.leane_next_timer
                          state_not: unknown
                      card:
                        type: custom:button-card
                        entity: sensor.minuteur_leane
                        name: Léane
                        icon: mdi:timer-sand
                        show_state: true
                        show_label: false
                        show_last_update: false
                        template:
                          - base
                          - base_petite
                    - type: conditional
                      conditions:
                        - entity: sensor.manon_next_timer
                          state_not: unavailable
                        - entity: sensor.manon_next_timer
                          state_not: unknown
                      card:
                        type: custom:button-card
                        entity: sensor.minuteur_manon
                        name: Manon
                        icon: mdi:timer-sand
                        show_state: true
                        show_label: false
                        show_last_update: false
                        template:
                          - base
                          - base_petite
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      show_state: false
                      template:
                        - carte_badge
                        - state_appareil
                        - state_unavailable
                      entity: input_boolean.nilemato
                    - type: custom:button-card
                      show_state: false
                      template:
                        - carte_badge
                        - state_appareil
                        - state_unavailable
                      entity: automation.annonce_ecole
                      name: Ecole
                    - type: custom:button-card
                      show_state: false
                      template:
                        - carte_badge
                        - state_appareil
                        - state_unavailable
                      icon: mdi:glass-cocktail
                      name: Invités
                    - type: custom:button-card
                      name: Été
                      show_state: false
                      template:
                        - carte_badge
                        - state_appareil
                        - state_unavailable
                      entity: input_boolean.belle_saison
                    - type: custom:button-card
                      name: Absent
                      show_state: false
                      template:
                        - carte_badge
                        - state_appareil
                        - state_unavailable
                      entity: input_boolean.vacances
                    - type: conditional
                      conditions:
                        - entity: input_boolean.noel
                          state: 'on'
                      card:
                        type: custom:button-card
                        show_state: false
                        template:
                          - carte_badge
                          - state_appareil
                          - state_unavailable
                        entity: input_boolean.noel
                    - type: conditional
                      conditions:
                        - entity: input_boolean.halloween
                          state: 'on'
                      card:
                        type: custom:button-card
                        show_state: false
                        template:
                          - carte_badge
                          - state_appareil
                          - state_unavailable
                        entity: input_boolean.halloween
                - type: custom:button-card
                  template:
                    - sidebar
                  tap_action:
                    action: navigate
                    navigation_path: /lovelace/Agenda
          type: vertical-stack
      layout:
        width: 350
    - type: custom:layout-card
      layout_type: masonry
      cards:
        - type: vertical-stack
          cards:
            - cards:
                - type: custom:button-card
                  template:
                    - titre_section
                  name: |
                    [[[ return "Rez-de-chaussée" ]]]
                - type: grid
                  cards:
                    - type: custom:button-card
                      entity: light.sejour
                      template:
                        - base
                        - base_large
                        - carte_piece
                        - piece_jauge_lumiere
                        - state_lumiere
                        - state_unavailable
                      name: Séjour
                      icon: mdi:sofa
                      label: |
                        [[[
                          if( states['sensor.temp_sejour'].state == "unavailable")
                            return "HS"
                          return states['sensor.temp_sejour'].state + "°"
                        ]]]
                      styles:
                        label:
                          - color: |
                              [[[
                                  if( states['sensor.temp_sejour'].state =="unavailable")
                                  return "red"
                                  if( states['sensor.temp_sejour'].state < 18.5)
                                  return "var(--custom-icon-color-blue)"
                                  if( states['sensor.temp_sejour'].state > 25.9)
                                  return "var(--custom-icon-color-red)"
                                return "darkgrey"
                              ]]]
                      custom_fields:
                        notification: >
                          [[[ return
                          Math.floor(states['sensor.compteur_sejour'].state )
                          ]]]
                        lum:
                          card:
                            type: conditional
                            conditions:
                              - entity: light.sejour
                                state: 'on'
                            card:
                              type: custom:my-slider
                              entity: light.sejour
                        bouton:
                          card:
                            type: horizontal-stack
                            cards:
                              - type: custom:button-card
                                entity: alarm_control_panel.camera_g3
                                icon: mdi:cctv
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: media_player.tv_salon
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: media_player.sejour
                                icon: mdi:speaker
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: binary_sensor.mouvements_sejour
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: binary_sensor.porte_salle_a_manger
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Séjour
                    - type: custom:button-card
                      entity: light.entree_et_couloir
                      template:
                        - base
                        - base_large
                        - carte_piece
                        - piece_jauge_lumiere
                        - state_lumiere
                        - state_unavailable
                      name: Entrée
                      icon: |
                        [[[
                            if (states['sensor.compteur_entree'].state == 1 && states['light.aqara_hub_54e1'].state == 'on' )
                            return 'mdi:alarm-light';
                            if (states['sensor.compteur_entree'].state == 1 && states['light.veranda'].state == 'on' )
                            return 'mdi:outdoor-lamp';
                          return 'phu:rooms-hallway';
                        ]]]
                      label: |
                        [[[ 
                          if ( states['sensor.temp_couloir_rdc'].state == "unavailable")
                            return "HS"
                          return (states['sensor.temp_couloir_rdc'].state )  + "°";
                        ]]]
                      styles:
                        label:
                          - color: |
                              [[[
                                  if( states['sensor.temp_couloir_rdc'].state =="unavailable")
                                  return "red"
                                  if( states['sensor.temp_couloir_rdc'].state < 18.5)
                                  return "var(--custom-icon-color-blue)"
                                  if( states['sensor.temp_couloir_rdc'].state > 25.9)
                                  return "var(--custom-icon-color-red)"
                                return "darkgrey"
                              ]]]
                      custom_fields:
                        notification: >
                          [[[ return
                          Math.floor(states['sensor.compteur_entree'].state )
                          ]]]
                        lum:
                          card:
                            type: conditional
                            conditions:
                              - entity: light.entree_et_couloir
                                state: 'on'
                            card:
                              type: custom:my-slider
                              entity: light.entree_et_couloir
                        bouton:
                          card:
                            type: horizontal-stack
                            cards:
                              - type: custom:button-card
                                entity: alarm_control_panel.aarlo_sonnette
                                icon: mdi:cctv
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: binary_sensor.mouv_couloir
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: binary_sensor.porte_entree
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                      double_tap_action:
                        action: toggle
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Entrée
                    - type: custom:button-card
                      template:
                        - base
                        - base_large
                        - carte_piece
                        - state_lumiere
                        - state_unavailable
                      icon: phu:rooms-kitchen
                      name: Cuisine
                      label: |
                        [[[ 
                          if( states['sensor.temp_cuisine'].state == "unavailable")
                            return "HS"
                          return (states['sensor.temp_cuisine'].state )  + "°"
                        ]]]
                      styles:
                        label:
                          - color: |
                              [[[
                                  if( states['sensor.temp_cuisine'].state =="unavailable")
                                  return "red"
                                  if( states['sensor.temp_cuisine'].state < 19)
                                  return "var(--custom-icon-color-blue)"
                                  if( states['sensor.temp_cuisine'].state > 25.9)
                                  return "var(--custom-icon-color-red)"
                                return "darkgrey"
                              ]]]
                      tap_action:
                        action: more-info
                      custom_fields:
                        bouton:
                          card:
                            type: horizontal-stack
                            cards:
                              - type: custom:button-card
                                entity: media_player.la_cuisine
                                icon: mdi:speaker
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: switch.lave_vaisselle_power
                                icon: phu:rooms-dining
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: binary_sensor.porte_cuisine
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                    - type: custom:button-card
                      entity: light.lavabo
                      template:
                        - base
                        - base_large
                        - carte_piece
                        - piece_jauge_lumiere
                        - state_lumiere
                        - state_unavailable
                      name: Lavabo
                      icon: phu:rooms-toilet
                      label: |
                        [[[
                          if (entity.state == 'on' )
                            return "Allumé"
                          return "Éteint"
                        ]]]
                      custom_fields:
                        notification: >
                          [[[ return
                          Math.floor(states['sensor.compteur_wc'].state ) ]]]
                        lum:
                          card:
                            type: conditional
                            conditions:
                              - entity: light.lavabo
                                state: 'on'
                            card:
                              type: custom:my-slider
                              entity: light.lavabo
                        bouton:
                          card:
                            type: horizontal-stack
                            cards:
                              - type: custom:button-card
                                entity: binary_sensor.mouv_salle_d_eau
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Lavabo
                    - type: custom:button-card
                      entity: light.parents
                      name: Parents
                      icon: phu:rooms-bedroom
                      template:
                        - base
                        - base_large
                        - carte_piece
                        - piece_jauge_lumiere
                        - state_lumiere
                        - state_unavailable
                      label: |
                        [[[
                          if( states['sensor.temp_parents'].state == "unavailable")
                            return "HS"
                          return (states['sensor.temp_parents'].state )  + "°"
                        ]]]
                      styles:
                        label:
                          - color: |
                              [[[
                                  if( states['sensor.temp_parents'].state =="unavailable")
                                  return "red"
                                  if( states['sensor.temp_parents'].state < 18.5)
                                  return "var(--custom-icon-color-blue)"
                                  if( states['sensor.temp_parents'].state > 25.9)
                                  return "var(--custom-icon-color-red)"
                                return "darkgrey"
                              ]]]
                      custom_fields:
                        notification: >
                          [[[ return
                          Math.floor(states['sensor.compteur_parents'].state )
                          ]]]
                        lum:
                          card:
                            type: conditional
                            conditions:
                              - entity: light.parents
                                state: 'on'
                            card:
                              type: custom:my-slider
                              entity: light.parents
                        bouton:
                          card:
                            type: horizontal-stack
                            cards:
                              - type: custom:button-card
                                entity: switch.moustique_parents
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: media_player.chambre_des_parents
                                icon: mdi:speaker
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: switch.tele_des_parents
                                icon: mdi:television
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: binary_sensor.porte_chambre_parents
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                      double_tap_action:
                        action: toggle
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Parents
                    - type: custom:button-card
                      entity: light.cagibi
                      template:
                        - base
                        - base_large
                        - carte_piece
                        - piece_jauge_lumiere
                        - state_lumiere
                        - state_unavailable
                      name: Garage
                      icon: mdi:car
                      label: |
                        [[[
                          if( states['sensor.sonde_garage_temperature'].state == "unavailable")
                            return "HS"
                          return (states['sensor.sonde_garage_temperature'].state )  + "°"
                        ]]]
                      styles:
                        label:
                          - color: |
                              [[[
                                  if( states['sensor.sonde_garage_temperature'].state =="unavailable")
                                  return "red"
                                  if( states['sensor.sonde_garage_temperature'].state < 18.5)
                                  return "var(--custom-icon-color-blue)"
                                  if( states['sensor.sonde_garage_temperature'].state > 25.9)
                                  return "var(--custom-icon-color-red)"
                                return "darkgrey"
                              ]]]
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Garage
                      custom_fields:
                        lum:
                          card:
                            type: conditional
                            conditions:
                              - entity: light.cagibi
                                state: 'on'
                            card:
                              type: custom:my-slider
                              entity: light.cagibi
                        bouton:
                          card:
                            type: horizontal-stack
                            cards:
                              - type: custom:button-card
                                entity: input_select.lave_linge
                                icon: mdi:tshirt-crew
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: alarm_control_panel.camera_g2hpro
                                icon: mdi:cctv
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: media_player.le_garage
                                icon: mdi:speaker
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: binary_sensor.mouv_garage
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: binary_sensor.porte_cagibi
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: binary_sensor.porte_garage
                                icon: mdi:garage-open-variant
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                  columns: 2
                  square: false
                - type: custom:button-card
                  template:
                    - titre_section
                  name: |
                    [[[ return "Etage" ]]]
                - type: grid
                  cards:
                    - type: custom:button-card
                      entity: light.tom
                      name: Tom
                      template:
                        - base
                        - base_large
                        - carte_piece
                        - piece_jauge_lumiere
                        - state_lumiere
                        - state_unavailable
                      icon: |
                        [[[
                          if (states['sensor.compteur_tom'].state == 1 && states['light.lampe_de_bureau_tom'].state == 'on' )
                            return 'mdi:desk-lamp';
                          return 'mdi:bat';
                        ]]] 
                      label: |
                        [[[
                          if( states['sensor.temp_tom'].state == "unavailable")
                            return "HS"
                          return (states['sensor.temp_tom'].state )  + "°"
                        ]]]
                      styles:
                        label:
                          - color: |
                              [[[
                                  if( states['sensor.temp_tom'].state =="unavailable")
                                  return "red"
                                  if( states['sensor.temp_tom'].state < 18.5)
                                  return "var(--custom-icon-color-blue)"
                                  if( states['sensor.temp_tom'].state > 25.9)
                                  return "var(--custom-icon-color-red)"
                                return "darkgrey"
                              ]]]
                      custom_fields:
                        notification: >
                          [[[ return
                          Math.floor(states['sensor.compteur_tom'].state ) ]]]
                        lum:
                          card:
                            type: conditional
                            conditions:
                              - entity: light.tom
                                state: 'on'
                            card:
                              type: custom:my-slider
                              entity: light.tom
                        bouton:
                          card:
                            type: horizontal-stack
                            cards:
                              - type: custom:button-card
                                entity: switch.moustique_tom
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: media_player.tom
                                icon: mdi:speaker
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: binary_sensor.mouv_tom
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Tom
                    - type: custom:button-card
                      entity: light.manon_et_leane
                      name: Manon Lélé
                      icon: mdi:death-star-variant
                      template:
                        - base
                        - base_large
                        - carte_piece
                        - piece_jauge_lumiere
                        - state_lumiere
                        - state_unavailable
                      label: |
                        [[[
                          if( states['sensor.temp_manon'].state == "unavailable")
                            return "HS"
                          return (states['sensor.temp_manon'].state )  + "°"
                        ]]]
                      styles:
                        label:
                          - color: |
                              [[[
                                  if( states['sensor.temp_manon'].state =="unavailable")
                                  return "red"
                                  if( states['sensor.temp_manon'].state < 18.5)
                                  return "var(--custom-icon-color-blue)"
                                  if( states['sensor.temp_manon'].state > 25.9)
                                  return "var(--custom-icon-color-red)"
                                return "darkgrey"
                              ]]]
                      custom_fields:
                        notification: >
                          [[[ return
                          Math.floor(states['sensor.compteur_manon'].state )
                          ]]]
                        lum:
                          card:
                            type: conditional
                            conditions:
                              - entity: light.manon_et_leane
                                state: 'on'
                            card:
                              type: custom:my-slider
                              entity: light.manon_et_leane
                        bouton:
                          card:
                            type: horizontal-stack
                            cards:
                              - type: custom:button-card
                                entity: switch.moustique_manon
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: media_player.chambre_de_manon_et_leane
                                icon: mdi:speaker
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: binary_sensor.mouv_manon
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: binary_sensor.mouv_leane
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Manon Léane
                    - type: custom:button-card
                      entity: light.nina
                      name: Nina
                      icon: |
                        [[[
                          if (states['sensor.compteur_nina'].state == 1 && states['light.lampe_de_bureau_nina'].state == 'on' )
                            return 'mdi:desk-lamp';
                          return 'mdi:owl';
                        ]]]
                      template:
                        - base
                        - base_large
                        - carte_piece
                        - piece_jauge_lumiere
                        - state_lumiere
                        - state_unavailable
                      label: |
                        [[[
                          if( states['sensor.temp_nina'].state == "unavailable")
                            return "HS"
                          return (states['sensor.temp_nina'].state )  + "°"
                        ]]]
                      styles:
                        label:
                          - color: |
                              [[[
                                  if( states['sensor.temp_nina'].state =="unavailable")
                                  return "red"
                                  if( states['sensor.temp_nina'].state < 18.5)
                                  return "var(--custom-icon-color-blue)"
                                  if( states['sensor.temp_nina'].state > 25.9)
                                  return "var(--custom-icon-color-red)"
                                return "darkgrey"
                              ]]]
                      custom_fields:
                        notification: >
                          [[[ return
                          Math.floor(states['sensor.compteur_nina'].state )
                          ]]]
                        lum:
                          card:
                            type: conditional
                            conditions:
                              - entity: light.nina
                                state: 'on'
                            card:
                              type: custom:my-slider
                              entity: light.nina
                        bouton:
                          card:
                            type: horizontal-stack
                            cards:
                              - type: custom:button-card
                                entity: switch.moustique_nina
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: media_player.nina
                                icon: mdi:speaker
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                              - type: custom:button-card
                                entity: binary_sensor.mouv_nina
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Nina
                    - type: custom:button-card
                      entity: switch.radiateur
                      name: SDB
                      icon: phu:rooms-bathroom
                      template:
                        - base
                        - base_large
                        - carte_piece
                        - state_lumiere
                        - state_unavailable
                      label: |
                        [[[ 
                          if( states['sensor.temp_salle_de_bain'].state == "unavailable")
                            return "HS"
                          return (states['sensor.temp_salle_de_bain'].state )  + "° / "+(states['sensor.hum_salle_de_bain'].state ) + "%" ;

                        ]]]
                      styles:
                        label:
                          - color: |
                              [[[
                                  if( states['sensor.temp_salle_de_bain'].state =="unavailable")
                                  return "red"
                                  if( states['sensor.temp_salle_de_bain'].state < 18.5)
                                  return "var(--custom-icon-color-blue)"
                                  if( states['sensor.temp_salle_de_bain'].state > 25.9)
                                  return "var(--custom-icon-color-red)"
                                return "darkgrey"
                              ]]]
                      custom_fields:
                        bouton:
                          card:
                            type: horizontal-stack
                            cards:
                              - type: custom:button-card
                                entity: sensor.radiateur_active_power
                                units: W
                                show_state: true
                                show_icon: false
                                template:
                                  - carte_bouton
                                  - state_unavailable
                                styles:
                                  state:
                                    - font-size: 11px
                                    - color: |
                                        [[[
                                          if (states['sensor.radiateur_active_power'].state != 0)
                                            return 'lightgrey';
                                          return "grey"
                                        ]]]
                              - type: custom:button-card
                                entity: media_player.la_salle_de_bain
                                icon: mdi:speaker
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/SDB
                    - type: custom:button-card
                      entity: light.escalier
                      name: Escalier
                      icon: mdi:stairs
                      template:
                        - base
                        - base_large
                        - carte_piece
                        - piece_jauge_lumiere
                        - state_lumiere
                        - state_unavailable
                      label: |
                        [[[
                          if (entity.state == 'on' )
                            return "Allumé"
                          return "Éteint"
                        ]]]
                      custom_fields:
                        lum:
                          card:
                            type: conditional
                            conditions:
                              - entity: light.escalier
                                state: 'on'
                            card:
                              type: custom:my-slider
                              entity: light.escalier
                        bouton:
                          card:
                            type: horizontal-stack
                            cards:
                              - type: custom:button-card
                                entity: binary_sensor.mouv_escalier
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                      double_tap_action:
                        action: toggle
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Escalier
                    - type: custom:button-card
                      entity: light.palier
                      name: Palier
                      icon: phu:rooms-attic
                      template:
                        - base
                        - base_large
                        - carte_piece
                        - piece_jauge_lumiere
                        - state_lumiere
                        - state_unavailable
                      color: auto
                      label: |
                        [[[
                          if( states['sensor.mouv_palier_lum'].state == "unavailable")
                            return "HS"
                          return (states['sensor.mouv_palier_lum'].state ) + " lx"
                        ]]]
                      custom_fields:
                        lum:
                          card:
                            type: conditional
                            conditions:
                              - entity: light.palier
                                state: 'on'
                            card:
                              type: custom:my-slider
                              entity: light.palier
                        bouton:
                          card:
                            type: horizontal-stack
                            cards:
                              - type: custom:button-card
                                entity: binary_sensor.mouv_palier
                                template:
                                  - carte_bouton
                                  - carte_bouton_state
                      double_tap_action:
                        action: toggle
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Escalier
                  columns: 2
                  square: false
              type: vertical-stack
      layout:
        width: 280
    - type: custom:layout-card
      layout_type: masonry
      cards:
        - cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Multimédia" ]]]
            - type: grid
              cards:
                - type: custom:button-card
                  entity: media_player.tv_salon
                  name: TV Salon
                  icon: |
                    [[[
                      if (states['sensor.tv_salon_source'].state == "Netflix")
                        return "phu:netflix";
                      if (states['sensor.tv_salon_source'].state == "Plex")
                        return "mdi:plex";
                      if (states['sensor.tv_salon_source'].state == "Prime Video")
                        return "phu:amazon-logo";
                      if (states['sensor.tv_salon_source'].state == "Disque Dur")
                        return "mdi:movie-open";
                      if (states['sensor.tv_salon_source'].state == "YouTube")
                        return "mdi:youtube";
                      if (states['sensor.tv_salon_source'].state == "Wii")
                        return "phu:rooms-mancave";
                      if (states['sensor.tv_salon_source'].state == "Switch")
                        return "mdi:nintendo-switch";
                      return "mdi:television";
                    ]]]
                  template:
                    - base
                    - carte_tv
                    - state_tv
                    - state_unavailable
                  label: |
                    [[[
                      if (states['media_player.tv_salon'].state == "on")
                        return states['sensor.tv_salon_source'].state
                      return "Éteint"
                    ]]]
                  custom_fields:
                    jauge-cercle:
                      card:
                        type: conditional
                        conditions:
                          - entity: media_player.tv_salon
                            state: 'on'
                        card:
                          type: custom:hatc-gauge-card
                          entity: sensor.tv_salon_vol
                          title:
                            name: false
                            icon: false
                            text-align: center
                            text-color: red
                            font-size: 28px
                          gauge:
                            icon: false
                            font-size: 11px
                            text-color: severity
                            max_value: 100
                            friendly_name: false
                            unit_of_measurement: false
                            severity:
                              - color: darkgrey
                              - color: rgb(180, 70, 70)
                                from: 30
                                to: 100
                    bouton2:
                      card:
                        type: horizontal-stack
                        cards:
                          - type: custom:button-card
                            template:
                              - carte_bouton
                              - carte_bouton_state_tv_salon
                            icon: |
                              [[[
                                if (states['media_player.tv_salon'].state == 'on' && states['sensor.tv_salon_sortie_audio'].state == 'Casque')
                                return "mdi-headphones"
                                if (states['media_player.tv_salon'].state == 'on' && states['sensor.tv_salon_sortie_audio'].state == 'TV')
                                return "mdi:television"
                                if (states['media_player.tv_salon'].state == 'on' && states['sensor.tv_salon_sortie_audio'].state == 'Barre de son')
                                  return "mdi:speaker-bluetooth"
                                return "mdi:television"
                              ]]]
                          - type: custom:button-card
                            entity: script.tv_salon_chaine_bas
                            template:
                              - carte_bouton
                              - carte_bouton_state_tv_salon
                          - type: custom:button-card
                            entity: script.tv_salon_chaine_haut
                            template:
                              - carte_bouton
                              - carte_bouton_state_tv_salon
                    bouton:
                      card:
                        type: horizontal-stack
                        cards:
                          - type: custom:button-card
                            entity: script.tv_salon_volume_mute
                            template: carte_bouton
                            styles:
                              card:
                                - background-color: |
                                    [[[
                                      if (states['media_player.tv_salon'].attributes.is_volume_muted == true)
                                        return 'var(--custom-img-cell-color-red)';
                                      return "rgba(43,53,66,0.6)"
                                    ]]]
                              icon:
                                - color: |
                                    [[[
                                      if (states['media_player.tv_salon'].attributes.is_volume_muted == true)
                                        return 'red';
                                      return "grey"
                                    ]]]
                          - type: custom:button-card
                            entity: script.tv_salon_volume_bas
                            template:
                              - carte_bouton
                              - carte_bouton_state_tv_salon
                          - type: custom:button-card
                            entity: script.tv_salon_volume_haut
                            template:
                              - carte_bouton
                              - carte_bouton_state_tv_salon
                  double_tap_action:
                    action: call-service
                    service: script.tv_salon_on_off
                    service_data: null
                - type: custom:button-card
                  entity: switch.tele_des_parents
                  name: TV Parents
                  icon: |
                    [[[
                      if (states['sensor.tv_parents_source'].state == "Netflix")
                        return "phu:netflix";
                      if (states['sensor.tv_parents_source'].state == "Plex")
                        return "mdi:plex";
                      if (states['sensor.tv_parents_source'].state == "YouTube (FireTV)")
                        return "mdi:youtube";
                      if (states['sensor.tv_parents_source'].state == "DD Externe")
                        return "mdi:movie-open";
                      return "mdi:television";
                    ]]]
                  template:
                    - base
                    - carte_tv
                    - state_tv
                    - state_unavailable
                  label: |
                    [[[
                      if ( entity.state  == 'on')
                        return states['sensor.tv_parents_source'].state;
                      if ( entity.state  == 'off')
                        return 'Éteint'
                      return ''
                    ]]]
                  custom_fields:
                    jauge-cercle:
                      card:
                        type: conditional
                        conditions:
                          - entity: switch.tele_des_parents
                            state: 'on'
                        card:
                          type: custom:hatc-gauge-card
                          entity: sensor.tv_parents_vol
                          title:
                            name: false
                            icon: false
                            text-align: center
                            text-color: red
                            font-size: 28px
                          gauge:
                            icon: false
                            font-size: 11px
                            text-color: darkgrey
                            max_value: 100
                            friendly_name: false
                            unit_of_measurement: false
                            severity:
                              - color: darkgrey
                              - color: rgb(180, 70, 70)
                                from: 100
                                to: 100
                    bouton2:
                      card:
                        type: horizontal-stack
                        cards:
                          - type: custom:button-card
                            template:
                              - carte_bouton
                              - carte_bouton_state_tv_parents
                            icon: |
                              [[[
                                if (states['switch.tele_des_parents'].state == 'on')
                                  return "mdi:television"
                                return "mdi:speaker-bluetooth"
                              ]]]
                          - type: custom:button-card
                            entity: script.tv_parents_menu
                            template:
                              - carte_bouton
                              - carte_bouton_state_tv_parents
                          - type: custom:button-card
                            entity: script.tv_parents_gauche
                            template:
                              - carte_bouton
                              - carte_bouton_state_tv_parents
                    bouton:
                      card:
                        type: horizontal-stack
                        cards:
                          - type: custom:button-card
                            entity: script.tv_parents_droite
                            template:
                              - carte_bouton
                              - carte_bouton_state_tv_parents
                          - type: custom:button-card
                            entity: script.tv_parents_bas
                            template:
                              - carte_bouton
                              - carte_bouton_state_tv_parents
                          - type: custom:button-card
                            entity: script.tv_parents_haut
                            template:
                              - carte_bouton
                              - carte_bouton_state_tv_parents
                  double_tap_action:
                    action: toggle
                  tap_action:
                    action: more-info
              columns: 2
              square: false
            - type: grid
              cards:
                - type: custom:button-card
                  entity: sensor.musique_rdc_on
                  name: RDC
                  icon: mdi:speaker
                  template:
                    - base
                    - carte_multimedia
                    - state_musique
                  custom_fields:
                    cartes:
                      card:
                        type: custom:swipe-card
                        parameters:
                          fadeEffect:
                            crossFade: true
                          autoplay:
                            delay: 3000
                          speed: 2000
                        cards:
                          - type: conditional
                            conditions:
                              - entity: media_player.partout
                                state: playing
                            card:
                              info: scroll
                              artwork: full-cover-fit
                              hide:
                                volume: true
                                source: true
                                power: true
                                name: false
                                icon: true
                                controls: true
                              type: custom:mini-media-player
                              entity: media_player.partout
                          - type: conditional
                            conditions:
                              - entity: media_player.sejour
                                state: playing
                            card:
                              info: scroll
                              artwork: full-cover-fit
                              hide:
                                volume: true
                                source: true
                                power: true
                                name: false
                                icon: true
                                controls: true
                              type: custom:mini-media-player
                              entity: media_player.sejour
                          - type: conditional
                            conditions:
                              - entity: media_player.la_cuisine
                                state: playing
                            card:
                              info: scroll
                              artwork: full-cover-fit
                              hide:
                                volume: true
                                source: true
                                power: true
                                name: false
                                icon: true
                                controls: true
                              type: custom:mini-media-player
                              entity: media_player.la_cuisine
                          - type: conditional
                            conditions:
                              - entity: media_player.le_garage
                                state: playing
                            card:
                              info: scroll
                              artwork: full-cover-fit
                              hide:
                                volume: true
                                source: true
                                power: true
                                name: false
                                icon: true
                                controls: true
                              type: custom:mini-media-player
                              entity: media_player.le_garage
                          - type: conditional
                            conditions:
                              - entity: media_player.chambre_des_parents
                                state: playing
                            card:
                              info: scroll
                              artwork: full-cover-fit
                              hide:
                                volume: true
                                source: true
                                power: true
                                name: false
                                icon: true
                                controls: true
                              type: custom:mini-media-player
                              entity: media_player.chambre_des_parents
                          - type: conditional
                            conditions:
                              - entity: media_player.en_bas
                                state: playing
                            card:
                              info: scroll
                              artwork: full-cover-fit
                              hide:
                                volume: true
                                source: true
                                power: true
                                name: false
                                icon: true
                                controls: true
                              type: custom:mini-media-player
                              entity: media_player.en_bas
                        columns: 2
                - type: custom:button-card
                  entity: sensor.musique_etage_on
                  name: Etage
                  icon: mdi:speaker
                  template:
                    - base
                    - carte_multimedia
                    - state_musique
                  styles:
                    custom_fields:
                      notification:
                        - background-color: |
                            [[[
                              if (states['sensor.compteur_musique_etage'].state == 0)
                                return 'rgba(0,191,205,0)';
                              return 'rgba(0,0,0,0.4)';
                            ]]]
                        - color: |
                            [[[
                              if (states['sensor.compteur_musique_etage'].state == 0)
                                return 'transparent';
                              return 'var(--text_on)';
                            ]]]
                    notification: >
                      [[[ return
                      Math.floor(states['sensor.compteur_musique_etage'].state
                      ) ]]]
                  custom_fields:
                    cartes:
                      card:
                        type: custom:swipe-card
                        parameters:
                          fadeEffect:
                            crossFade: true
                          autoplay:
                            delay: 3000
                          speed: 2000
                        cards:
                          - type: conditional
                            conditions:
                              - entity: media_player.la_salle_de_bain
                                state: playing
                              - entity: media_player.partout
                                state_not: playing
                              - entity: media_player.etage
                                state_not: playing
                            card:
                              info: scroll
                              artwork: full-cover-fit
                              hide:
                                volume: true
                                source: true
                                power: true
                                name: false
                                icon: true
                                controls: true
                              type: custom:mini-media-player
                              entity: media_player.la_salle_de_bain
                          - type: conditional
                            conditions:
                              - entity: media_player.leane
                                state: playing
                              - entity: media_player.partout
                                state_not: playing
                              - entity: media_player.etage
                                state_not: playing
                              - entity: media_player.chambre_de_manon_et_leane
                                state_not: playing
                            card:
                              info: scroll
                              artwork: full-cover-fit
                              hide:
                                volume: true
                                source: true
                                power: true
                                name: false
                                icon: true
                                controls: true
                              type: custom:mini-media-player
                              entity: media_player.leane
                          - type: conditional
                            conditions:
                              - entity: media_player.tom
                                state: playing
                              - entity: media_player.partout
                                state_not: playing
                              - entity: media_player.etage
                                state_not: playing
                            card:
                              info: scroll
                              artwork: full-cover-fit
                              hide:
                                volume: true
                                source: true
                                power: true
                                name: false
                                icon: true
                                controls: true
                              type: custom:mini-media-player
                              entity: media_player.tom
                          - type: conditional
                            conditions:
                              - entity: media_player.nina
                                state: playing
                              - entity: media_player.partout
                                state_not: playing
                              - entity: media_player.etage
                                state_not: playing
                            card:
                              info: scroll
                              artwork: full-cover-fit
                              hide:
                                volume: true
                                source: true
                                power: true
                                name: false
                                icon: true
                                controls: true
                              type: custom:mini-media-player
                              entity: media_player.nina
                          - type: conditional
                            conditions:
                              - entity: media_player.manon
                                state: playing
                              - entity: media_player.partout
                                state_not: playing
                              - entity: media_player.etage
                                state_not: playing
                              - entity: media_player.chambre_de_manon_et_leane
                                state_not: playing
                            card:
                              info: scroll
                              artwork: full-cover-fit
                              hide:
                                volume: true
                                source: true
                                power: true
                                name: false
                                icon: true
                                controls: true
                              type: custom:mini-media-player
                              entity: media_player.manon
                          - type: conditional
                            conditions:
                              - entity: media_player.etage
                                state: playing
                              - entity: media_player.partout
                                state_not: playing
                            card:
                              info: scroll
                              artwork: full-cover-fit
                              hide:
                                volume: true
                                source: true
                                power: true
                                name: false
                                icon: true
                                controls: true
                              type: custom:mini-media-player
                              entity: media_player.etage
                          - type: conditional
                            conditions:
                              - entity: media_player.chambre_de_manon_et_leane
                                state: playing
                              - entity: media_player.partout
                                state_not: playing
                            card:
                              info: scroll
                              artwork: full-cover-fit
                              hide:
                                volume: true
                                source: true
                                power: true
                                name: false
                                icon: true
                                controls: true
                              type: custom:mini-media-player
                              entity: media_player.chambre_de_manon_et_leane
                        columns: 2
              columns: 2
              square: false
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Appareils" ]]]
            - type: grid
              cards:
                - type: custom:button-card
                  entity: vacuum.wall_e
                  icon: phu:roborock
                  show_state: true
                  show_label: false
                  template:
                    - base
                    - base_large
                    - carte_appareil
                    - state_aspi
                    - state_unavailable
                  name: Wall-E
                  label: |
                    [[[ return states['sensor.walle_state'].state   ]]]
                  custom_fields:
                    jauge-cercle:
                      card:
                        type: custom:hatc-gauge-card
                        entity: sensor.walle_batterie
                        title:
                          name: false
                          icon: false
                          text-align: center
                          text-color: red
                          font-size: 28px
                        gauge:
                          icon: false
                          font-size: 11px
                          text-color: severity
                          max_value: 100
                          friendly_name: false
                          unit_of_measurement: false
                          severity:
                            - color: darkgrey
                            - color: rgb(180, 70, 70)
                              from: 0
                              to: 40
                    bouton:
                      card:
                        type: horizontal-stack
                        cards:
                          - type: custom:button-card
                            entity: script.aspi_walle_demarrage
                            template:
                              - carte_bouton
                            styles:
                              icon:
                                - color: |
                                    [[[
                                      if (states['sensor.walle_state'].state == "Nettoyage")
                                        return 'lightgrey';
                                      return "grey"
                                    ]]]
                          - type: custom:button-card
                            entity: script.aspi_pause
                            template:
                              - carte_bouton
                            styles:
                              icon:
                                - color: |
                                    [[[
                                      if (states['sensor.walle_state'].state == "En pause")
                                        return 'lightgrey';
                                      return "grey"
                                    ]]]
                          - type: custom:button-card
                            entity: script.sortir_l_aspi
                            template:
                              - carte_bouton
                          - type: custom:button-card
                            entity: vacuum.wall_e
                            icon: mdi:map-marker
                            template:
                              - carte_bouton
                            tap_action:
                              action: call-service
                              service: vacuum.locate
                              service_data:
                                entity_id: vacuum.wall_e
                          - type: custom:button-card
                            entity: script.aspi_retour_base
                            template:
                              - carte_bouton
                            styles:
                              icon:
                                - color: |
                                    [[[
                                      if (states['sensor.walle_state'].state == "Base")
                                        return 'lightgrey';
                                      return "grey"
                                    ]]]
                - type: custom:button-card
                  entity: vacuum.r2d2
                  icon: phu:roborock
                  show_state: true
                  show_label: false
                  template:
                    - base
                    - base_large
                    - carte_appareil
                    - state_aspi
                    - state_unavailable
                  name: R2D2
                  label: |
                    [[[ return states['sensor.r2d2_state'].state  ]]]
                  custom_fields:
                    jauge-cercle:
                      card:
                        type: custom:hatc-gauge-card
                        entity: sensor.r2d2_batterie
                        title:
                          name: false
                          icon: false
                          text-align: center
                          text-color: red
                          font-size: 28px
                        gauge:
                          icon: false
                          font-size: 11px
                          text-color: severity
                          max_value: 100
                          friendly_name: false
                          unit_of_measurement: false
                          severity:
                            - color: darkgrey
                            - color: rgb(180, 70, 70)
                              from: 0
                              to: 40
                    bouton:
                      card:
                        type: horizontal-stack
                        cards:
                          - type: custom:button-card
                            entity: script.aspi_r2d2_demarrage
                            template:
                              - carte_bouton
                            styles:
                              icon:
                                - color: |
                                    [[[
                                      if (states['sensor.r2d2_state'].state == "Nettoyage")
                                        return 'lightgrey';
                                      if (states['sensor.r2d2_state'].state == "Retour")
                                        return "lightgrey"
                                      return "grey"
                                    ]]]
                          - type: custom:button-card
                            entity: script.aspi_pause
                            template:
                              - carte_bouton
                            styles:
                              icon:
                                - color: |
                                    [[[
                                      if (states['sensor.r2d2_state'].state == "En pause")
                                        return 'lightgrey';
                                      return "grey"
                                    ]]]
                          - type: custom:button-card
                            entity: vacuum.r2d2
                            icon: mdi:map-marker
                            template:
                              - carte_bouton
                            tap_action:
                              action: call-service
                              service: vacuum.locate
                              service_data:
                                entity_id: vacuum.r2d2
                          - type: custom:button-card
                            entity: script.aspi_retour_base
                            template:
                              - carte_bouton
                            styles:
                              icon:
                                - color: |
                                    [[[
                                      if (states['sensor.r2d2_state'].state == "Base")
                                        return 'lightgrey';
                                      return "grey"
                                    ]]]
                - type: custom:button-card
                  template:
                    - carte_appareil_vaisselle
                - type: custom:button-card
                  template:
                    - carte_appareil_linge
                - type: custom:button-card
                  entity: input_boolean.courrier_releve
                  name: Courrier
                  icon: mdi:email
                  label: |
                    [[[
                      if( states['input_boolean.courrier_releve'].state == "on")
                        return "Relevé à "+states['sensor.courrier_releve'].state
                      return "Non relevé"
                    ]]]
                  template:
                    - base
                    - base_large
                    - carte_appareil
                    - state_appareil
                    - state_unavailable
                  custom_fields:
                    bouton:
                      card:
                        type: horizontal-stack
                        cards:
                          - type: custom:button-card
                            entity: input_boolean.courrier_releve
                            template:
                              - carte_bouton
                              - carte_bouton_state
                            icon: |
                              [[[
                                if( states['input_boolean.courrier_releve'].state == "on")
                                  return "mdi:toggle-switch"
                                return "mdi:toggle-switch-off"
                              ]]]
                            styles:
                              icon:
                                - width: 20px
                            tap_action:
                              action: toggle
                          - type: custom:button-card
                            template:
                              - carte_bouton
                              - carte_bouton_state
                            icon: mdi:door-closed
                            tap_action:
                              action: more-info
                - type: custom:button-card
                  template:
                    - carte_appareil_imprimante
              columns: 2
              square: false
          type: vertical-stack
      layout:
        width: 280
    - type: custom:layout-card
      layout_type: masonry
      cards:
        - cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Personnes" ]]]
            - square: false
              columns: 2
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - carte_personne_aurel
                - type: custom:button-card
                  template:
                    - carte_personne_alex
                - type: custom:button-card
                  template:
                    - carte_personne_tom
                - type: custom:button-card
                  template:
                    - carte_personne_manon
                - type: custom:button-card
                  template:
                    - carte_personne_leane
                - type: custom:button-card
                  template:
                    - carte_personne_nina
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Relevés" ]]]
            - type: grid
              cards:
                - type: custom:button-card
                  entity: sensor.myenedis_09397539765420
                  name: Électricité
                  icon: mdi:flash
                  template:
                    - base
                    - base_tres_large
                    - carte_systeme
                  show_state: false
                  label: |
                    [[[
                      if (states["sensor.electricite_conso_veille"].state == "-1.0" ) 
                        return 'En attente'
                      if (states["sensor.electricite_conso_veille"].state == "unavailable" ) 
                        return 'En attente'
                      return states["sensor.electricite_conso_kwh_arrondie"].state +" kWh<br>" +states["sensor.electricite_cout_jour_avec_abo"].state +" €"
                    ]]]
                  styles:
                    img_cell:
                      - background-color: |
                          [[[
                            if (states["sensor.electricite_conso_veille"].state == "-1.0") return 'var(--pastille_off)'
                            if (states["sensor.electricite_cout_jour_avec_abo"].state < 3) return 'var(--custom-img-cell-color-blue)';
                            if (states["sensor.electricite_cout_jour_avec_abo"].state >= 3 && states["sensor.electricite_cout_jour_avec_abo"].state < 4) return 'var(--custom-img-cell-color-red)';
                            else return 'var(--custom-img-cell-color-red)';
                          ]]]
                    icon:
                      - color: |
                          [[[
                            if (states["sensor.electricite_conso_veille"].state == "-1.0") return 'var(--icon_off)'
                            if (states["sensor.electricite_cout_jour_avec_abo"].state < 3) return 'var(--custom-icon-color-blue)';
                            if (states["sensor.electricite_cout_jour_avec_abo"].state >= 3 && states["sensor.electricite_cout_jour_avec_abo"].state < 4) return 'var(--custom-icon-color-red)';
                            else return 'var(--custom-icon-color-red)';
                          ]]]
                    label:
                      - color: |
                          [[[
                            if (states["sensor.electricite_conso_veille"].state == "-1.0") return 'var(--custom-icon-color-red)'
                            else return ''
                          ]]]
                    custom_fields:
                      info2:
                        - padding-bottom: 5%
                        - '--text-color-sensor': |
                            [[[
                              if (states['sensor.electricite_cout_semaine_avec_abo'].state == "unavailable")
                                return 'transparent'
                              return 'lightgrey';
                            ]]]
                      info3:
                        - padding-bottom: 5%
                        - '--text-color-sensor': |
                            [[[
                              if (states['sensor.electricite_cout_mois_avec_abo'].state == "unavailable")
                                return 'transparent'
                              return 'lightgrey';
                            ]]]
                      info4:
                        - padding-bottom: 5%
                        - '--text-color-sensor': |
                            [[[
                              if (states['sensor.electricite_cout_annee_avec_abo'].state == "unavailable")
                                return 'transparent'
                              return 'lightgrey';
                            ]]]
                  state:
                    - value: unavailable
                      styles:
                        label:
                          - color: red
                        state:
                          - color: red
                  custom_fields:
                    reload:
                      card:
                        type: grid
                        cards:
                          - type: custom:button-card
                            entity: script.rechargement_integration_myenedis
                            icon: mdi:reload-alert
                            show_name: false
                            styles:
                              icon:
                                - color: var(--icon_off)
                                - width: 70%
                              card:
                                - background: transparent
                                - 'border-color:': transparent
                    graph_bar:
                      card:
                        type: custom:mini-graph-card
                        entities:
                          - entity: sensor.myenedis_09397539765420
                            color: rgba(0,191,255,0.2)
                        group_by: date
                        height: 250
                        hours_to_show: 240
                        points_per_hour: 1
                        min_bound_range: 10
                        font_size: 40
                        align_state: center
                        show:
                          graph: bar
                          fill: false
                          icon: false
                          name: false
                          state: false
                          legend: false
                          points: true
                          labels: false
                        style:
                          .: |
                            ha-card {
                                font-family: Avenir
                    info2: |
                      [[[
                        return `
                          </ha-icon><span>Semaine : <span style="color: var(--text-color-sensor);">${states['sensor.electricite_cout_semaine_avec_abo'].state}€</span></span>`
                      ]]]
                    info3: |
                      [[[
                        return `
                          </ha-icon><span>Mois : <span style="color: var(--text-color-sensor);">${states['sensor.electricite_cout_mois_avec_abo'].state}€</span></span>`
                      ]]]
                    info4: |
                      [[[
                        return `
                          </ha-icon><span>Année : <span style="color: var(--text-color-sensor);">${states['sensor.electricite_cout_annee_avec_abo'].state}€</span></span>`
                      ]]]
                  tap_action:
                    action: navigate
                    navigation_path: /lovelace/Conso
                - type: custom:button-card
                  entity: sensor.grdf_consommation_gaz
                  name: Gaz
                  icon: mdi:gas-burner
                  template:
                    - base
                    - base_tres_large
                    - carte_systeme
                  show_state: false
                  label: |
                    [[[
                      if (states["sensor.grdf_consommation_gaz"].state == "unavailable" ) 
                        return 'En attente'
                      return states["sensor.grdf_consommation_gaz"].state +" kWh<br>" +states["sensor.gaz_cout_jour_avec_abo"].state +" €"
                    ]]]
                  styles:
                    img_cell:
                      - background-color: |
                          [[[
                            if (entity.state == "unavailable") return 'var(--pastille_off)'
                            if (entity.state < 50) return 'var(--custom-img-cell-color-blue)';
                            if (entity.state >= 50 ) return 'var(--custom-img-cell-color-red)';
                            else return 'var(--custom-img-cell-color-red)'; 
                          ]]]
                    icon:
                      - color: |
                          [[[
                            if (entity.state == "unavailable") return 'var(--icon_off)'
                            if (entity.state < 50) return 'var(--custom-icon-color-blue)';
                            if (entity.state >= 50) return 'var(--custom-icon-color-red)';
                            else return 'var(--custom-icon-color-red)';
                          ]]]
                  state:
                    - value: unavailable
                      styles:
                        label:
                          - color: var(--custom-icon-color-red)
                        state:
                          - color: var(--custom-icon-color-red)
                  custom_fields:
                    reload:
                      card:
                        type: grid
                        cards:
                          - type: custom:button-card
                            entity: automation.grdf_get_data
                            icon: mdi:reload-alert
                            show_name: false
                            styles:
                              icon:
                                - color: var(--icon_off)
                                - width: 70%
                              card:
                                - background: transparent
                                - 'border-color:': transparent
                            tap_action:
                              action: more-info
                    graph_bar:
                      card:
                        type: custom:mini-graph-card
                        entities:
                          - entity: sensor.grdf_consommation_gaz
                            color: rgba(128,128,128,0.4)
                        group_by: date
                        height: 250
                        hours_to_show: 240
                        points_per_hour: 1
                        min_bound_range: 10
                        font_size: 40
                        align_state: center
                        show:
                          graph: bar
                          fill: false
                          icon: false
                          name: false
                          state: false
                          legend: false
                          points: true
                          labels: false
                        style:
                          .: |
                            ha-card {
                                font-family: Avenir
                  tap_action:
                    action: navigate
                    navigation_path: /lovelace/Conso
                - type: custom:button-card
                  entity: sensor.cpu_temperature
                  name: RPI 4
                  icon: mdi:raspberry-pi
                  template:
                    - base
                    - base_tres_large
                    - carte_systeme
                  label: |
                    [[[return states["sensor.cpu_temperature"].state +"°"]]]
                  styles:
                    img_cell:
                      - background-color: |
                          [[[
                            if (entity.state < 50) return 'var(--pastille_off)';
                            if (entity.state >= 50 && entity.state < 60) return 'tomato';
                            else return 'red';
                          ]]]
                    icon:
                      - animation: |
                          [[[
                            if (entity.state > "50" )
                              return "blink 1s ease infinite";
                            return "";
                          ]]]
                      - color: |
                          [[[
                            if (entity.state < 50) return 'var(--icon_off)';
                            if (entity.state >= 50 && entity.state < 60) return 'var(--icon_on)';
                            else return 'var(--icon_on)';
                          ]]]
                    custom_fields:
                      info2:
                        - padding-bottom: 1%
                        - '--text-color-sensor': >-
                            [[[ if
                            (states["sensor.processor_use_percent"].state >
                            50) return "tomato";  else return
                            "var(--text_on)"; ]]]
                      info3:
                        - padding-bottom: 1%
                        - '--text-color-sensor': >-
                            [[[ if (states["sensor.memory_use_percent"].state
                            > 60) return  "tomato";  else return
                            "var(--text_on)"; ]]]
                      info4:
                        - padding-bottom: 1%
                        - '--text-color-sensor': >-
                            [[[ if
                            (states["sensor.disk_use_percent_home"].state >
                            70) return "tomato";  else return
                            "var(--text_on)"; ]]]
                  custom_fields:
                    graph:
                      card:
                        type: custom:mini-graph-card
                        entities:
                          - color: rgba(100,100,100,0.5)
                            entity: sensor.cpu_temperature
                        height: 300
                        line_width: 4
                        lower_bound: 18
                        points_per_hour: 1
                        hours_to_show: 24
                        show:
                          fill: fade
                          icon: false
                          name: false
                          state: false
                          legend: false
                          points: false
                          labels: false
                    info2: |
                      [[[
                        return `<ha-icon
                          icon="mdi:server"
                          style="width: 12px; height: 12px; color: grey;">
                          </ha-icon><span> CPU : <span style="color: var(--text-color-sensor);">${states['sensor.processor_use_percent'].state}%</span></span>`
                      ]]]
                    info3: |
                      [[[
                        return `<ha-icon
                          icon="mdi:memory"
                          style="width: 12px; height: 12px; color: grey;">
                          </ha-icon><span> RAM : <span style="color: var(--text-color-sensor);">${states['sensor.memory_use_percent'].state}%</span></span>`
                      ]]]
                    info4: |
                      [[[
                        return `<ha-icon
                          icon="mdi:harddisk"
                          style="width: 12px; height: 12px; color: grey;">
                          </ha-icon><span> SSD : <span style="color: var(--text-color-sensor);">${states['sensor.disk_use_percent_home'].state}%</span></span>`
                      ]]]
                  tap_action:
                    action: navigate
                    navigation_path: /lovelace/RPI
                - type: custom:button-card
                  entity: sensor.plante_citro_temp
                  name: Plantes
                  icon: mdi:flower-tulip
                  template:
                    - base
                    - base_tres_large
                    - carte_systeme
                  label: |
                    [[[
                      if (states['sensor.plante_citro_humidite'].state < 1 || states['sensor.plante_hum_pied_elephant'].state < 1 || states['sensor.plante_hum_dracaena'].state < 1)  
                        return "Besoin d'eau !"
                      return ""
                    ]]]
                  styles:
                    img_cell:
                      - background-color: |
                          [[[
                            if (states['sensor.plante_citro_humidite'].state < 1 || states['sensor.plante_hum_pied_elephant'].state < 1 || states['sensor.plante_hum_dracaena'].state < 1) return 'var(--custom-img-cell-color-red)'
                            else return 'var(--pastille_off)';
                          ]]]
                    icon:
                      - color: |
                          [[[
                            if (states['sensor.plante_citro_humidite'].state < 1 || states['sensor.plante_hum_pied_elephant'].state < 1 || states['sensor.plante_hum_dracaena'].state < 1) return 'var(--custom-icon-color-red)'
                            else return 'var(--icon_off)';
                          ]]]
                      - animation: |
                          [[[
                            if (states['sensor.plante_citro_humidite'].state < 1 || states['sensor.plante_hum_pied_elephant'].state < 1 || states['sensor.plante_hum_dracaena'].state < 1) return 'blink 1s ease infinite'
                            else return 'var(--icon_off)';
                          ]]]
                    custom_fields:
                      info2:
                        - '--text-color-sensor': |
                            [[[
                              if (states['sensor.plante_hum_dracaena'].state == "unavailable")
                                return 'transparent'
                              if (states['sensor.plante_hum_dracaena'].state < 5)
                                return 'dodgerblue'
                              return 'lightgrey';
                            ]]]
                      info3:
                        - '--text-color-sensor': |
                            [[[
                              if (states['sensor.plante_hum_pied_elephant'].state == "unavailable")
                                return 'transparent'
                              if (states['sensor.plante_hum_pied_elephant'].state < 5)
                                return 'dodgerblue'
                              return 'lightgrey'
                            ]]]
                      info4:
                        - '--text-color-sensor': |
                            [[[
                              if (states['sensor.plante_citro_humidite'].state == "unavailable" )
                                return 'transparent'
                              if (states['sensor.plante_citro_humidite'].state < 5)
                                return 'dodgerblue'
                              return 'lightgrey';
                            ]]]
                  custom_fields:
                    info2: |
                      [[[
                        return `<span> Dracena
                          <ha-icon
                          icon="mdi:water"
                          style="width: 13px; height: 15px; color: dodgerblue;">
                          </ha-icon><span style="color: var(--text-color-sensor);">${states['sensor.plante_hum_dracaena'].state}%</span></span>`
                      ]]]
                    info3: |
                      [[[
                        return `<span> Pied Eleph
                          <ha-icon
                          icon="mdi:water"
                          style="width: 13px; height: 15px; color: dodgerblue;">
                          </ha-icon><span style="color: var(--text-color-sensor);">${states['sensor.plante_hum_pied_elephant'].state}%</span></span>`
                      ]]]
                    info4: |
                      [[[
                        return `<span> Citronnier
                          <ha-icon
                          icon="mdi:water"
                          style="width: 13px; height: 15px; color: dodgerblue;">
                          </ha-icon><span style="color: var(--text-color-sensor);">${states['sensor.plante_citro_humidite'].state}%</span></span>`
                      ]]]
                    graph:
                      card:
                        type: custom:mini-graph-card
                        entities:
                          - color: rgba(30,144,255,0.5)
                            entity: sensor.plante_hum_dracaena
                        height: 250
                        line_width: 4
                        lower_bound: 10
                        points_per_hour: 1
                        hours_to_show: 24
                        show:
                          fill: fade
                          icon: false
                          name: false
                          state: false
                          legend: false
                          points: false
                          labels: false
                  tap_action:
                    action: navigate
                    navigation_path: /lovelace/Plantes
              columns: 2
              square: false
          type: vertical-stack
      layout:
        width: 280
- theme: Backend-selected
  title: Temperature
  path: Temp
  icon: mdi:thermometer
  subview: false
  layout:
    width: 350
    max_cols: 3
  type: custom:horizontal-layout
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 320
      cards:
        - type: custom:button-card
          template:
            - titre_section
          entity: light.escaliers
          name: |
            [[[ return "Rez-de-chaussée " ]]]
        - square: false
          columns: 3
          type: grid
          cards:
            - type: custom:button-card
              entity: sensor.temp_sejour
              template:
                - carte_thermo
              label: |
                [[[
                  if( states['sensor.hum_sejour'].state == "unavailable")
                    return "HS"
                  return states['sensor.hum_sejour'].state + "%"
                ]]]
              styles:
                label:
                  - color: |
                      [[[
                        if (states['sensor.hum_sejour'].state > 70 || states['sensor.hum_sejour'].state < 40 )
                          return 'red'
                        return ''
                      ]]]
              custom_fields:
                gauge:
                  card:
                    entity: sensor.temp_sejour
            - type: custom:button-card
              entity: sensor.temp_couloir_rdc
              template:
                - carte_thermo
              label: |
                [[[
                  if( states['sensor.hum_couloir_rdc'].state == "unavailable")
                    return "HS"
                  return states['sensor.hum_couloir_rdc'].state + "%"
                ]]]
              styles:
                label:
                  - color: |
                      [[[
                        if (states['sensor.hum_couloir_rdc'].state > 70 || states['sensor.hum_couloir_rdc'].state < 40 )
                          return 'red'
                        return ''
                      ]]]
              custom_fields:
                gauge:
                  card:
                    entity: sensor.temp_couloir_rdc
            - type: custom:button-card
              entity: sensor.temp_cuisine
              template:
                - carte_thermo
              label: |
                [[[
                  if( states['sensor.hum_cuisine'].state == "unavailable")
                    return "HS"
                  return states['sensor.hum_cuisine'].state + "%"
                ]]]
              styles:
                label:
                  - color: |
                      [[[
                        if (states['sensor.hum_cuisine'].state > 70 || states['sensor.hum_cuisine'].state < 40 )
                          return 'red'
                        return ''
                      ]]]
              custom_fields:
                gauge:
                  card:
                    entity: sensor.temp_cuisine
            - type: custom:button-card
              entity: sensor.moniteur_qualite_air_temperature
              name: Air
              template:
                - carte_thermo
              label: |
                [[[
                  if( states['sensor.moniteur_qualite_air_humidite'].state == "unavailable")
                    return "HS"
                  return states['sensor.moniteur_qualite_air_humidite'].state + "%"
                ]]]
              styles:
                label:
                  - color: |
                      [[[
                        if (states['sensor.moniteur_qualite_air_humidite'].state > 70 || states['sensor.hum_parents'].state < 40 )
                          return 'red'
                        return ''
                      ]]]
              custom_fields:
                gauge:
                  card:
                    entity: sensor.moniteur_qualite_air_temperature
            - type: custom:button-card
              entity: sensor.temp_parents
              name: Parents
              template:
                - carte_thermo
              label: |
                [[[
                  if( states['sensor.hum_parents'].state == "unavailable")
                    return "HS"
                  return states['sensor.hum_parents'].state + "%"
                ]]]
              styles:
                label:
                  - color: |
                      [[[
                        if (states['sensor.hum_parents'].state > 70 || states['sensor.hum_parents'].state < 40 )
                          return 'red'
                        return ''
                      ]]]
              custom_fields:
                gauge:
                  card:
                    entity: sensor.temp_parents
            - type: custom:button-card
              entity: sensor.sonde_garage_temperature
              name: Garage
              template:
                - carte_thermo
              label: |
                [[[
                  if( states['sensor.sonde_garage_humidite'].state == "unavailable")
                    return "HS"
                  return states['sensor.sonde_garage_humidite'].state + "%"
                ]]]
              styles:
                label:
                  - color: |
                      [[[
                        if (states['sensor.sonde_garage_humidite'].state > 70 || states['sensor.sonde_garage_humidite'].state < 40 )
                          return 'red'
                        return ''
                      ]]]
              custom_fields:
                gauge:
                  card:
                    entity: sensor.sonde_garage_temperature
        - type: custom:button-card
          template:
            - titre_section
          entity: light.escaliers
          name: |
            [[[ return "Etage" ]]]
        - square: false
          columns: 3
          type: grid
          cards:
            - type: custom:button-card
              entity: sensor.temp_tom
              name: Tom
              template:
                - carte_thermo
              label: |
                [[[
                  if( states['sensor.hum_tom'].state == "unavailable")
                    return "HS"
                  return states['sensor.hum_tom'].state + "%"
                ]]]
              styles:
                label:
                  - color: |
                      [[[
                        if (states['sensor.hum_tom'].state > 70 || states['sensor.hum_tom'].state < 40 )
                          return 'red'
                        return ''
                      ]]]
              custom_fields:
                gauge:
                  card:
                    entity: sensor.temp_tom
            - type: custom:button-card
              entity: sensor.temp_manon
              name: Filles
              template:
                - carte_thermo
              label: |
                [[[
                  if( states['sensor.hum_manon'].state == "unavailable")
                    return "HS"
                  return states['sensor.hum_manon'].state + "%"
                ]]]
              styles:
                label:
                  - color: |
                      [[[
                        if (states['sensor.hum_manon'].state > 70 || states['sensor.hum_manon'].state < 40 )
                          return 'red'
                        return ''
                      ]]]
              custom_fields:
                gauge:
                  card:
                    entity: sensor.temp_manon
            - type: custom:button-card
              entity: sensor.temp_nina
              name: Nina
              template:
                - carte_thermo
              label: |
                [[[
                  if( states['sensor.hum_nina'].state == "unavailable")
                    return "HS"
                  return states['sensor.hum_nina'].state + "%"
                ]]]
              styles:
                label:
                  - color: |
                      [[[
                        if (states['sensor.hum_nina'].state > 70 || states['sensor.hum_nina'].state < 40 )
                          return 'red'
                        return ''
                      ]]]
              custom_fields:
                gauge:
                  card:
                    entity: sensor.temp_nina
            - type: custom:button-card
              entity: sensor.temp_salle_de_bain
              name: S. de bain
              template:
                - carte_thermo
              label: |
                [[[
                  if( states['sensor.hum_salle_de_bain'].state == "unavailable")
                    return "HS"
                  return states['sensor.hum_salle_de_bain'].state + "%"
                ]]]
              styles:
                label:
                  - color: |
                      [[[
                        if (states['sensor.hum_salle_de_bain'].state > 70 || states['sensor.sonde_garage_humidite'].state < 40 )
                          return 'red'
                        return ''
                      ]]]
              custom_fields:
                gauge:
                  card:
                    entity: sensor.temp_salle_de_bain
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 320
      cards:
        - square: false
          columns: 2
          type: grid
          cards:
            - type: custom:mini-graph-card
              align_header: center
              entities:
                - color: rgb(180, 70, 70,1)
                  entity: sensor.temp_sejour
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
                - color: rgba(0,191,255,1)
                  entity: sensor.hum_sejour
                  y_axis: secondary
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
              line_width: 3
              lower_bound: 10
              font_size: 65
              hours_to_show: 72
              points_per_hour: 2
              show:
                icon: false
                graphe: line
                legend: false
                fill: fade
                icon_adaptive_color: true
              name: Séjour
            - type: custom:mini-graph-card
              align_header: center
              entities:
                - color: rgb(180, 70, 70,1)
                  entity: sensor.temp_couloir_rdc
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
                - color: rgba(0,191,255,1)
                  entity: sensor.hum_couloir_rdc
                  y_axis: secondary
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
              line_width: 3
              lower_bound: 10
              font_size: 65
              hours_to_show: 72
              points_per_hour: 2
              show:
                icon: false
                graphe: line
                legend: false
                fill: fade
                icon_adaptive_color: true
              name: Couloir
            - type: custom:mini-graph-card
              align_header: center
              entities:
                - color: rgb(180, 70, 70,1)
                  entity: sensor.temp_cuisine
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
                - color: rgba(0,191,255,1)
                  entity: sensor.hum_cuisine
                  y_axis: secondary
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
              line_width: 3
              lower_bound: 10
              font_size: 65
              hours_to_show: 72
              points_per_hour: 2
              show:
                icon: false
                graphe: line
                legend: false
                fill: fade
                icon_adaptive_color: true
              name: Cuisine
            - type: custom:mini-graph-card
              align_header: center
              entities:
                - color: rgb(180, 70, 70,1)
                  entity: sensor.temp_parents
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
                - color: rgba(0,191,255,1)
                  entity: sensor.hum_parents
                  y_axis: secondary
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
              line_width: 3
              lower_bound: 10
              font_size: 65
              hours_to_show: 72
              points_per_hour: 2
              show:
                icon: false
                graphe: line
                legend: false
                fill: fade
                icon_adaptive_color: true
              name: Parents
            - type: custom:mini-graph-card
              align_header: center
              entities:
                - color: rgb(180, 70, 70,1)
                  entity: sensor.temp_tom
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
                - color: rgba(0,191,255,1)
                  entity: sensor.hum_tom
                  y_axis: secondary
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
              line_width: 3
              lower_bound: 10
              font_size: 65
              hours_to_show: 72
              points_per_hour: 2
              show:
                icon: false
                graphe: line
                legend: false
                fill: fade
                icon_adaptive_color: true
              name: Tom
            - type: custom:mini-graph-card
              align_header: center
              entities:
                - color: rgb(180, 70, 70,1)
                  entity: sensor.temp_manon
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
                - color: rgba(0,191,255,1)
                  entity: sensor.hum_manon
                  y_axis: secondary
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
              line_width: 3
              lower_bound: 10
              font_size: 65
              hours_to_show: 72
              points_per_hour: 2
              show:
                icon: false
                graphe: line
                legend: false
                fill: fade
                icon_adaptive_color: true
              name: Manon Léane
            - type: custom:mini-graph-card
              align_header: center
              entities:
                - color: rgb(180, 70, 70,1)
                  entity: sensor.temp_nina
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
                - color: rgba(0,191,255,1)
                  entity: sensor.hum_nina
                  y_axis: secondary
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
              line_width: 3
              lower_bound: 10
              font_size: 65
              hours_to_show: 72
              points_per_hour: 2
              show:
                icon: false
                graphe: line
                legend: false
                fill: fade
                icon_adaptive_color: true
              name: Nina
            - type: custom:mini-graph-card
              align_header: center
              entities:
                - color: rgb(180, 70, 70,1)
                  entity: sensor.temp_salle_de_bain
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
                - color: rgba(0,191,255,1)
                  entity: sensor.hum_salle_de_bain
                  y_axis: secondary
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
              line_width: 3
              lower_bound: 10
              font_size: 65
              hours_to_show: 72
              points_per_hour: 2
              show:
                icon: false
                graphe: line
                legend: false
                fill: fade
                icon_adaptive_color: true
              name: S. de bain
            - type: custom:mini-graph-card
              align_header: center
              entities:
                - color: rgb(180, 70, 70,1)
                  entity: sensor.sonde_garage_temperature
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
                - color: rgba(0,191,255,1)
                  entity: sensor.sonde_garage_humidite
                  y_axis: secondary
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
              line_width: 3
              lower_bound: 10
              font_size: 65
              hours_to_show: 72
              points_per_hour: 2
              show:
                icon: false
                graphe: line
                legend: false
                fill: fade
                icon_adaptive_color: true
              name: Garage
            - type: custom:mini-graph-card
              align_header: center
              entities:
                - color: rgb(180, 70, 70,1)
                  entity: sensor.moniteur_qualite_air_temperature
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
                - color: rgba(0,191,255,1)
                  entity: sensor.moniteur_qualite_air_humidite
                  y_axis: secondary
                  show_state: true
                  show_graph: true
                  state_adaptive_color: true
              line_width: 3
              lower_bound: 10
              font_size: 65
              hours_to_show: 72
              points_per_hour: 2
              show:
                icon: false
                graphe: line
                legend: false
                fill: fade
                icon_adaptive_color: true
              name: Moniteur air
- theme: Backend-selected
  icon: mdi:broom
  path: Aspis
  title: Aspis
  visible:
    - user: 2f0040afe95a4514ade3c049a0b5d479
    - user: 76afcf1927a948b19530bcbf1074ac59
    - user: d8316597eafd4333b737464a5b4c62d0
  type: custom:horizontal-layout
  layout:
    width: 350
    max_cols: 4
  subview: false
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 380
      cards:
        - type: vertical-stack
          cards:
            - type: vertical-stack
              cards:
                - type: custom:xiaomi-vacuum-card
                  entity: vacuum.wall_e
                  image: /local/aspis/walle.jpeg
                  name: Wall-E
                  attributes:
                    main_brush:
                      label: 'Brosse '
                      unit: ' h'
                    side_brush:
                      label: 'Brosette '
                      unit: ' h'
                    filter:
                      label: 'Filtre '
                    sensor:
                      label: 'Capteurs '
                  shortcuts:
                    spot:
                      show: true
                      label: Nettoyage localisé
                  buttons:
                    new_button:
                      icon: mdi:flag-variant
                      label: Custom button!
                      service: script.turn_on
                      service_data:
                        entity_id: script.sortir_l_aspi
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: script.aspi_walle_sejour
                      name: Séjour
                      show_name: true
                      template:
                        - carte_badge
                      tap_action:
                        action: toggle
                    - type: custom:button-card
                      entity: script.aspi_salle_a_manger
                      name: SàM
                      show_name: true
                      template:
                        - carte_badge
                      tap_action:
                        action: toggle
                    - type: custom:button-card
                      entity: script.aspi_walle_salon
                      name: Salon
                      show_name: true
                      template:
                        - carte_badge
                      tap_action:
                        action: toggle
                    - type: custom:button-card
                      entity: script.aspi_walle_chambre_parents
                      name: Parents
                      show_name: true
                      template:
                        - carte_badge
                      tap_action:
                        action: toggle
                    - type: custom:button-card
                      entity: script.aspi_walle_cuisine
                      name: Cuisine
                      show_name: true
                      template:
                        - carte_badge
                      tap_action:
                        action: toggle
                    - type: custom:button-card
                      entity: script.aspi_walle_entree
                      name: Entrée
                      show_name: true
                      template:
                        - carte_badge
                      tap_action:
                        action: toggle
                    - type: custom:button-card
                      entity: script.aspi_walle_tapis
                      name: Tapis
                      show_name: true
                      template:
                        - carte_badge
                      tap_action:
                        action: toggle
                    - type: custom:button-card
                      entity: script.aspi_walle_couloir
                      name: Couloir
                      show_name: true
                      template:
                        - carte_badge
                      tap_action:
                        action: toggle
                - type: custom:xiaomi-vacuum-map-card
                  entity: vacuum.wall_e
                  map_source:
                    camera: camera.roborock_s6
                  calibration_source:
                    camera: true
                  language: fr
                  debug: false
                  map_modes:
                    - template: vacuum_clean_zone
                    - template: vacuum_goto
                    - template: vacuum_clean_zone_predefined
                      predefined_selections:
                        - zones:
                            - - 25027
                              - 24933
                              - 28549
                              - 28632
                        - zones:
                            - - 28625
                              - 25085
                              - 31969
                              - 28683
                        - zones:
                            - - 31944
                              - 24883
                              - 33895
                              - 28683
                        - zones:
                            - - 23761
                              - 28734
                              - 27308
                              - 31571
                        - zones:
                            - - 28777
                              - 28759
                              - 32603
                              - 30507
                        - zones:
                            - - 32628
                              - 28835
                              - 33768
                              - 30532
                        - zones:
                            - - 27308
                              - 28759
                              - 28802
                              - 33522
                        - zones:
                            - - 28828
                              - 30608
                              - 29740
                              - 33547
                        - zones:
                            - - 23659
                              - 31672
                              - 27282
                              - 35118
                        - zones:
                            - - 30150
                              - 30550
                              - 33050
                              - 34300
                  map_locked: true
                  two_finger_pan: false
                - square: false
                  columns: 2
                  type: grid
                  cards:
                    - type: custom:button-card
                      entity: script.aspi_walle_reset_brosse_principale
                      name: Brosse principale
                      icon: mdi:robot-vacuum-variant
                      template:
                        - base
                      show_last_changed: true
                      confirmation:
                        text: >-
                          [[[ return `Wall-E Reset de la brosse principale ?`
                          ]]]
                      tap_action:
                        action: call-service
                        service: script.turn_on
                        service_data:
                          entity_id: script.aspi_walle_reset_brosse_principale
                    - type: custom:button-card
                      entity: script.aspi_walle_reset_brosse_laterale
                      name: Brosse latérale
                      icon: mdi:broom
                      template:
                        - base
                      show_last_changed: true
                      confirmation:
                        text: >-
                          [[[ return `Wall-E Reset de la brosse latérale ?`
                          ]]]
                      tap_action:
                        action: call-service
                        service: script.turn_on
                        service_data:
                          entity_id: script.aspi_walle_reset_brosse_laterale
                    - type: custom:button-card
                      entity: script.aspi_walle_reset_capteurs
                      icon: mdi:state-machine
                      template:
                        - base
                      show_last_changed: true
                      name: Capteurs
                      confirmation:
                        text: '[[[ return `Wall-E Reset des capteurs ?` ]]]'
                      tap_action:
                        action: call-service
                        service: script.turn_on
                        service_data:
                          entity_id: script.aspi_walle_reset_capteurs
                    - type: custom:button-card
                      entity: script.aspi_walle_reset_filtre
                      name: Filtre
                      icon: mdi:air-filter
                      template:
                        - base
                      show_last_changed: true
                      confirmation:
                        text: '[[[ return `Wall-E Reset du filtre ?` ]]]'
                      tap_action:
                        action: call-service
                        service: script.turn_on
                        service_data:
                          entity_id: script.aspi_walle_reset_filtre
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 380
      cards:
        - type: vertical-stack
          cards:
            - type: custom:xiaomi-vacuum-card
              entity: vacuum.r2d2
              image: /local/aspis/r2d22.jpg
              name: R2D2
              vendor: xiaomi
              attributes:
                main_brush:
                  label: 'Brosse '
                  unit: ' h'
                side_brush:
                  label: 'Brossette '
                  unit: ' h'
                filter:
                  label: 'Filtre: '
                sensor:
                  label: 'Capteurs: '
              buttons:
                spot:
                  show: true
                  label: Nettoyage localisé
            - type: horizontal-stack
              cards:
                - type: custom:button-card
                  entity: script.aspi_r2d2_chambre_tom
                  name: Tom
                  show_name: true
                  template:
                    - carte_badge
                  tap_action:
                    action: toggle
                - type: custom:button-card
                  entity: script.aspi_r2d2_chambre_manon_leane
                  name: Manon
                  show_name: true
                  template:
                    - carte_badge
                  tap_action:
                    action: toggle
                - type: custom:button-card
                  entity: script.aspi_r2d2_chambre_nina
                  name: Nina
                  show_name: true
                  template:
                    - carte_badge
                  tap_action:
                    action: toggle
                - type: custom:button-card
                  entity: script.aspi_r2d2_salle_de_bain
                  name: SdB
                  show_name: true
                  template:
                    - carte_badge
                  tap_action:
                    action: toggle
                - type: custom:button-card
                  entity: script.aspi_r2d2_palier
                  name: Palier
                  show_name: true
                  template:
                    - carte_badge
                  tap_action:
                    action: toggle
            - type: custom:xiaomi-vacuum-map-card
              entity: vacuum.r2d2
              map_source:
                camera: camera.roborock_s50
              calibration_source:
                camera: true
              language: fr
              debug: false
              map_modes:
                - template: vacuum_clean_zone
                - template: vacuum_goto
                - template: vacuum_clean_zone_predefined
                  predefined_selections:
                    - zones:
                        - - 27589
                          - 24459
                          - 30627
                          - 27454
                    - zones:
                        - - 22780
                          - 21316
                          - 26598
                          - 24332
                    - zones:
                        - - 27589
                          - 21505
                          - 31217
                          - 24374
                    - zones:
                        - - 22864
                          - 17730
                          - 31112
                          - 21231
                    - zones:
                        - - 25227
                          - 24501
                          - 27526
                          - 25809
                    - zones:
                        - - 26661
                          - 21442
                          - 27547
                          - 24501
              map_locked: true
              two_finger_pan: false
            - square: false
              columns: 2
              type: grid
              cards:
                - type: custom:button-card
                  entity: script.aspi_r2d2_reset_brosse_principale
                  name: Brosse principale
                  icon: mdi:robot-vacuum-variant
                  template:
                    - base
                  show_last_changed: true
                  confirmation:
                    text: '[[[ return `R2D2 Reset de la brosse principale ?` ]]]'
                  tap_action:
                    action: call-service
                    service: script.turn_on
                    service_data:
                      entity_id: script.aspi_r2d2_reset_brosse_principale
                - type: custom:button-card
                  entity: script.aspi_r2d2_reset_brosse_laterale
                  name: Brosse latérale
                  icon: mdi:broom
                  template:
                    - base
                  show_last_changed: true
                  confirmation:
                    text: '[[[ return `R2D2 Reset de la brosse latérale ?` ]]]'
                  tap_action:
                    action: call-service
                    service: script.turn_on
                    service_data:
                      entity_id: script.aspi_r2d2_reset_brosse_laterale
                - type: custom:button-card
                  entity: script.aspi_r2d2_reset_capteurs
                  icon: mdi:state-machine
                  name: Capteurs
                  template:
                    - base
                  show_last_changed: true
                  confirmation:
                    text: '[[[ return `R2D2 Reset des capteurs ?` ]]]'
                  tap_action:
                    action: call-service
                    service: script.turn_on
                    service_data:
                      entity_id: script.aspi_r2d2_reset_capteurs
                - type: custom:button-card
                  entity: script.aspi_r2d2_reset_filtre
                  name: Filtre
                  icon: mdi:air-filter
                  template:
                    - base
                  show_last_changed: true
                  confirmation:
                    text: '[[[ return `R2D2 Reset du filtre ?` ]]]'
                  tap_action:
                    action: call-service
                    service: script.turn_on
                    service_data:
                      entity_id: script.aspi_r2d2_reset_filtre
- theme: Backend-selected
  subview: false
  title: Conso Enedis et GRDF
  path: Conso
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  icon: mdi:flash
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 330
      cards:
        - type: custom:vertical-stack-in-card
          style: |
            ha-card {
              background-color: steelblue;
          cards:
            - type: custom:button-card
              entity: sensor.myenedis_09397539765420
              name: Électricité
              icon: mdi:flash
              template:
                - base
                - base_petite
                - carte_systeme
              show_state: false
              label: |
                [[[
                  if (states["sensor.electricite_conso_veille"].state == "-1.0" ) 
                    return 'En attente'
                  return states["sensor.electricite_cout_jour_avec_abo"].state +" € abo inclus"
                ]]]
              styles:
                img_cell:
                  - background-color: |
                      [[[
                        if (states["sensor.electricite_conso_veille"].state == "-1.0") return 'var(--pastille_off)'
                        if (states["sensor.electricite_cout_jour_avec_abo"].state < 3) return 'var(--custom-img-cell-color-blue)';
                        if (states["sensor.electricite_cout_jour_avec_abo"].state >= 3 && states["sensor.electricite_cout_jour_avec_abo"].state < 4) return 'var(--custom-img-cell-color-red)';
                        else return 'var(--custom-img-cell-color-red)';
                      ]]]
                icon:
                  - color: |
                      [[[
                        if (states["sensor.electricite_conso_veille"].state == "-1.0") return 'var(--icon_off)'
                        if (states["sensor.electricite_cout_jour_avec_abo"].state < 3) return 'var(--custom-icon-color-blue)';
                        if (states["sensor.electricite_cout_jour_avec_abo"].state >= 3 && states["sensor.electricite_cout_jour_avec_abo"].state < 4) return 'var(--custom-icon-color-red)';
                        else return 'var(--custom-icon-color-red)';
                      ]]]
                label:
                  - color: |
                      [[[
                        if (states["sensor.electricite_conso_veille"].state == "-1.0") return 'red'
                        else return 'darkgrey'
                      ]]]
              state:
                - value: unavailable
                  styles:
                    label:
                      - color: red
                    state:
                      - color: red
            - type: custom:content-card-linky
              entity: sensor.myenedis_09397539765420
              titleName: Électricité (hors abo)
              nbJoursAffichage: '7'
              showDayName: short
              showInTableUnit: false
              showPeakOffPeak: false
              showHistory: true
              showDayPrice: true
              showDayPriceHCHP: false
              showDayHCHP: false
              showIcon: false
              kWhPrice: false
              showtitle: true
              showEcoWatt: true
              showTitle: false
              showPrice: true
              showTitreLigne: true
              showError: true
              showYesterdayRatio: true
              showWeekRatio: false
              showCurrentMonthRatio: false
              style: |
                ha-card {
                  color: lightgrey ;
                  font-size: 12px;
                  font-family: Avenir;
            - type: custom:apexcharts-card
              graph_span: 7d
              span:
                offset: '-1day'
              experimental:
                color_threshold: true
              apex_config:
                legend:
                  show: false
                stroke:
                  width: 1
                xaxis:
                  labels:
                    hideOverlappingLabels: true
                    showDuplicatges: true
                    show: true
                dataLabels:
                  offsetY: -5
                  background:
                    enabled: true
                  style:
                    colors:
                      - rgba(0,0,0,0.4)
                plotOptions:
                  bar:
                    borderRadius: 5
                    dataLabels:
                      position: top
              header:
                show: true
                title: Électricité
                show_states: true
                standard_format: false
                colorize_states: true
              yaxis:
                - id: first
                  decimals: 0
                  apex_config:
                    tickAmount: 4
                  min: ~0
                - id: second
                  opposite: true
                  decimals: 0
                  apex_config:
                    tickAmount: 4
                  min: ~0
              series:
                - entity: sensor.electricite_conso_veille
                  yaxis_id: first
                  type: column
                  offset: +1day
                  show:
                    name_in_header: false
                    datalabels: true
                    legend_value: false
                    header_color_threshold: true
                  group_by:
                    func: max
                    duration: 1d
                  opacity: 0.8
                  float_precision: 2
                  color_threshold:
                    - value: 0
                      color: rgb(176, 196, 222)
                    - value: 5
                      color: rgb(70, 130, 180)
                    - value: 10
                      color: orange
                    - value: 15
                      color: rgb(180, 70, 70)
                    - value: 20
                      color: firebrick
                - entity: sensor.electricite_cout_jour_avec_abo
                  yaxis_id: second
                  offset: +1day
                  show:
                    name_in_header: false
                    datalabels: false
                    legend_value: false
                    header_color_threshold: true
                  unit: €
                  type: area
                  curve: smooth
                  fill_raw: last
                  color: rgb(0,191,255)
                  opacity: 0.2
                  float_precision: 2
                  name: Cout
                  group_by:
                    func: max
                    duration: 1d
              style: |
                ha-card {
                  font-family: Avenir;
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 330
      cards:
        - type: custom:vertical-stack-in-card
          style: |
            ha-card {
              font-family: Avenir;
              background-color: rgba(106, 161, 12,0.3);
          cards:
            - type: custom:button-card
              entity: sensor.grdf_consommation_gaz
              name: Gaz
              icon: mdi:gas-burner
              template:
                - base
                - base_petite
                - carte_systeme
              show_state: false
              label: |
                [[[
                  if (states["sensor.grdf_consommation_gaz"].state == "unavailable" ) 
                    return 'En attente'
                  return states["sensor.gaz_cout_jour_avec_abo"].state +" € abo inclus"
                ]]]
              styles:
                img_cell:
                  - background-color: |
                      [[[
                        if (entity.state == "unavailable") return 'var(--pastille_off)'
                        if (entity.state < 50) return 'var(--custom-img-cell-color-blue)';
                        if (entity.state >= 50 ) return 'var(--custom-img-cell-color-red)';
                        else return 'var(--custom-img-cell-color-red)'; 
                      ]]]
                icon:
                  - color: |
                      [[[
                        if (entity.state == "unavailable") return 'var(--icon_off)'
                        if (entity.state < 50) return 'var(--custom-icon-color-blue)';
                        if (entity.state >= 50) return 'var(--custom-icon-color-red)';
                        else return 'var(--custom-icon-color-red)';
                      ]]]
              state:
                - value: unavailable
                  styles:
                    label:
                      - color: red
                    state:
                      - color: red
            - type: custom:gazpar-card
              entity: sensor.gazpar
              title: GAZ (hors abo)
              showTitle: false
              showIcon: false
              showCost: true
              showDailyHistory: true
              showMonthlyHistory: false
              showHistoryHeader: false
              showEnergyHistory: true
              showVolumeHistory: false
              showCostHistory: true
              showTrendRatioHistory: true
              showMonthlyCostHistoryChart: false
              showMonthlyEnergyHistoryChart: false
              showYearlyEnergyHistoryChart: false
              showYearlyCostHistoryChart: false
              showError: true
              pricePerKWh: '0.0580'
              showMainBar: true
              showVersion: true
              showWeeklyCostHistoryChart: false
              showDailyCostHistoryChart: false
              showWeeklyEnergyHistoryChart: false
              showDailyEnergyHistoryChart: false
              style: |
                ha-card {
                  color: lightgrey ;
                  font-family: Avenir;
                  font-size: 12px;
                }
            - type: custom:apexcharts-card
              graph_span: 7d
              span:
                offset: '-2day'
              experimental:
                color_threshold: true
              apex_config:
                legend:
                  show: false
                stroke:
                  width: 1
                xaxis:
                  labels:
                    hideOverlappingLabels: true
                    showDuplicatges: true
                    show: true
                dataLabels:
                  offsetY: -5
                  background:
                    enabled: true
                  style:
                    colors:
                      - rgba(0,0,0,0.4)
                plotOptions:
                  bar:
                    borderRadius: 5
                    dataLabels:
                      position: top
              header:
                show: true
                title: Gaz
                show_states: true
                standard_format: false
                colorize_states: true
              yaxis:
                - id: first
                  decimals: 0
                  apex_config:
                    tickAmount: 4
                  min: ~0
                - id: second
                  opposite: true
                  decimals: 0
                  apex_config:
                    tickAmount: 4
                  min: ~0
              series:
                - entity: sensor.grdf_consommation_gaz
                  yaxis_id: first
                  type: column
                  offset: +2day
                  float_precision: 2
                  show:
                    name_in_header: false
                    datalabels: true
                    legend_value: false
                    header_color_threshold: true
                  group_by:
                    func: max
                    duration: 1d
                  opacity: 0.8
                  color_threshold:
                    - value: 0
                      color: rgb(176, 196, 222)
                    - value: 20
                      color: rgb(70, 130, 180)
                    - value: 50
                      color: orange
                    - value: 80
                      color: rgb(180, 70, 70)
                    - value: 100
                      color: firebrick
                - entity: sensor.gaz_cout_jour_avec_abo
                  yaxis_id: second
                  offset: +2day
                  show:
                    name_in_header: false
                    datalabels: false
                    legend_value: false
                    header_color_threshold: true
                  unit: €
                  type: area
                  curve: smooth
                  fill_raw: last
                  color: rgb(0,191,255)
                  opacity: 0.2
                  float_precision: 2
                  name: Cout
                  group_by:
                    func: max
                    duration: 1d
              style: |
                ha-card {
                  font-size: 95%;
                  font-family: Avenir;
                }
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - type: custom:gazpar-card
              entity: sensor.gazpar
              title: GAZ (hors abo)
              showTitle: false
              showIcon: false
              showCost: false
              showDailyHistory: false
              showMonthlyHistory: false
              showHistoryHeader: false
              showEnergyHistory: false
              showVolumeHistory: false
              showCostHistory: false
              showTrendRatioHistory: false
              showMonthlyCostHistoryChart: false
              showMonthlyEnergyHistoryChart: true
              showYearlyEnergyHistoryChart: true
              showYearlyCostHistoryChart: false
              showError: false
              pricePerKWh: '0.0580'
              showMainBar: false
              showVersion: false
              showWeeklyCostHistoryChart: false
              showDailyCostHistoryChart: false
              showWeeklyEnergyHistoryChart: true
              showDailyEnergyHistoryChart: true
              style: |
                ha-card {
                  color: lightgrey ;
                  font-family: Avenir;
                }
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - type: custom:gazpar-card
              entity: sensor.gazpar
              title: GAZ (hors abo)
              showTitle: false
              showIcon: false
              showCost: false
              showDailyHistory: false
              showMonthlyHistory: false
              showHistoryHeader: false
              showEnergyHistory: false
              showVolumeHistory: false
              showCostHistory: false
              showTrendRatioHistory: false
              showMonthlyCostHistoryChart: true
              showMonthlyEnergyHistoryChart: false
              showYearlyEnergyHistoryChart: false
              showYearlyCostHistoryChart: true
              showError: false
              pricePerKWh: '0.0580'
              showMainBar: false
              showVersion: false
              showWeeklyCostHistoryChart: true
              showDailyCostHistoryChart: true
              showWeeklyEnergyHistoryChart: false
              showDailyEnergyHistoryChart: false
              style: |
                ha-card {
                  color: lightgrey ;
                  font-family: Avenir;
                }
- theme: Backend-selected
  title: Lumières
  path: Lumières
  icon: mdi:lightbulb-group
  visible:
    - user: d8316597eafd4333b737464a5b4c62d0
    - user: 76afcf1927a948b19530bcbf1074ac59
    - user: 2f0040afe95a4514ade3c049a0b5d479
  type: custom:horizontal-layout
  layout:
    width: 350
    max_cols: 4
  subview: false
  badges:
    - entity: sensor.plante_lum_dracaena
      name: Dracaena
      style: |
        :host {
          --label-badge-red: 
            {% if states('sensor.plante_lum_dracaena') | float < 90 %}
              rgba(0,191,205,0.5)
            {% else %} 
              rgba(240,52,52,0.5)
            {% endif %}      
    - entity: sensor.plante_lum_pied_elephant
      name: Pied d'Elephant
      style: |
        :host {
          --label-badge-red: 
            {% if states('sensor.plante_lum_pied_elephant') | float < 90 %}
              rgba(0,191,205,0.5)
            {% else %} 
              rgba(240,52,52,0.5)
            {% endif %}    
    - entity: sensor.salle_a_manger_luminosite
      name: SaM
      style: |
        :host {
          --label-badge-red: 
            {% if states('sensor.salle_a_manger_luminosite') | float < 90 %}
              rgba(0,191,205,0.5)
            {% else %} 
              rgba(240,52,52,0.5)
            {% endif %}         
    - entity: sensor.mouv_tom_luminosite
      name: Tom
      style: |
        :host {
          --label-badge-red: 
            {% if states('sensor.mouv_tom_luminosite') | float < 50 %}
              rgba(0,191,205,0.5)
            {% else %} 
              rgba(240,52,52,0.5)
            {% endif %} 
    - entity: sensor.mouv_manon_luminosite
      name: Manon
      style: |
        :host {
          --label-badge-red: 
            {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
              rgba(0,191,205,0.5)
            {% else %} 
              rgba(240,52,52,0.5)
            {% endif %}   
    - entity: sensor.mouv_leane_luminosite
      name: Léane
      style: |
        :host {
          --label-badge-red: 
            {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
              rgba(0,191,205,0.5)
            {% else %} 
              rgba(240,52,52,0.5)
            {% endif %}               
    - entity: sensor.mouv_nina_luminosite
      name: Nina
      style: |
        :host {
          --label-badge-red: 
            {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
              rgba(0,191,205,0.5)
            {% else %} 
              rgba(240,52,52,0.5)
            {% endif %} 
    - entity: sensor.mouv_palier_lum
      name: Palier
      style: |
        :host {
          --label-badge-red: 
            {% if states('sensor.mouv_palier_lum') | float < 50 %}
              rgba(0,191,205,0.5)
            {% else %} 
              rgba(240,52,52,0.5)
            {% endif %} 
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - cards:
                - type: custom:button-card
                  template:
                    - titre_section
                  entity: light.sejour
                  name: |
                    [[[ return "Séjour" ]]]
                - square: false
                  columns: 4
                  type: grid
                  cards:
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.lampe_de_bureau
                      entity: light.lampe_de_bureau
                      name: Bureau
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                      entity: light.lampe_tv_salon
                      name: Lampe TV
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.bandeau_led
                      entity: light.bandeau_led
                      name: Bandeau TV
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.lampe_canape
                      entity: light.lampe_canape
                      name: Canapé
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.lustre_salon
                      entity: light.lustre_salon
                      name: Lustre salon
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.lustre_salle_a_manger
                      entity: light.lustre_salle_a_manger
                      name: Lustre SaM
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.buffet
                      entity: light.buffet
                      name: Buffet
                    - type: custom:button-card
                      show_state: false
                      template:
                        - carte_badge
                        - jauge_lumiere
                        - state_lumiere
                        - state_unavailable
                      styles:
                        card:
                          - height: 90px
                        name:
                          - padding-bottom: 30px
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.lampadaire
                            radius: 5px
                            height: 20px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                      entity: light.lampadaire
                      name: Lampadaire
                - type: custom:button-card
                  template:
                    - titre_section
                  entity: light.entree_et_couloir
                  name: |
                    [[[ return "Entrée" ]]]
                - square: false
                  columns: 4
                  type: grid
                  cards:
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.couloir
                      entity: light.couloir
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.entree
                      entity: light.entree
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.aqara_hub_54e1
                      entity: light.aqara_hub_54e1
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.veranda
                      entity: light.veranda
              type: vertical-stack
            - type: custom:button-card
              template:
                - titre_section
              entity: light.parents
              name: |
                [[[ return "Chambre parents" ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lustre_parents
                  entity: light.lustre_parents
                  name: Lustre
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.chevet
                  entity: light.chevet
                  name: Chevet
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - cards:
            - type: custom:button-card
              template:
                - titre_section
              entity: light.tom
              name: |
                [[[ return "Chambre Tom" ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lustre_tom
                  entity: light.lustre_tom
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.chevet_tom
                  entity: light.chevet_tom
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lampe_de_bureau_tom
                  entity: light.lampe_de_bureau_tom
                  name: Bureau
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.sonoff_10013f6d7e
                  entity: light.sonoff_10013f6d7e
                  name: Bureau
            - type: custom:button-card
              template:
                - titre_section
              entity: light.manon_et_leane
              name: |
                [[[ return "Chambre Manon et Léane" ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lustre_manon_et_leane
                  entity: light.lustre_manon_et_leane
                  name: Lustre
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.chevet_manon
                  entity: light.chevet_manon
                  name: Manon
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lampe_de_bureau_manon
                  entity: light.lampe_de_bureau_manon
                  name: Bureau
                - type: custom:button-card
                  template:
                    - carte_lumiere
                  entity: switch.arbre_lumineux
                  name: Arbre
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lampe_manon_et_leane
                  entity: light.lampe_manon_et_leane
                  name: Lampadaire
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.chevet_leane
                  entity: light.chevet_leane
                  name: Léane
            - type: custom:button-card
              template:
                - titre_section
              entity: light.nina
              name: |
                [[[ return "Chambre Nina" ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lampe_de_bureau_nina
                  entity: light.lampe_de_bureau_nina
                  name: Bureau
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lustre_nina
                  entity: light.lustre_nina
                  name: Lustre
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.chevet_nina
                  entity: light.chevet_nina
                  name: Chevet
                - type: custom:button-card
                  template:
                    - carte_lumiere
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lampadaire_nina
                  entity: light.lampadaire_nina
                  name: Lampadaire
          type: vertical-stack
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - cards:
            - cards:
                - type: custom:button-card
                  template:
                    - titre_section
                  entity: light.escaliers
                  name: |
                    [[[ return "Escalier, palier et WC" ]]]
                - square: false
                  columns: 4
                  type: grid
                  cards:
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.escalier
                      entity: light.escalier
                      icon: mdi:stairs
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.palier
                      entity: light.palier
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.wc_gauche
                      entity: light.wc_gauche
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.wc_droit
                      entity: light.wc_droit
                - type: custom:button-card
                  template:
                    - titre_section
                  name: |
                    [[[ return "Garage" ]]]
                - square: false
                  columns: 4
                  type: grid
                  cards:
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                        - jauge_lumiere
                      custom_fields:
                        lum:
                          card:
                            type: custom:my-slider
                            entity: light.cagibi
                      entity: light.cagibi
                - type: custom:button-card
                  template:
                    - titre_section
                  entity: group.noel
                  name: |
                    [[[ return "Lumières de Noël " ]]]
                - square: false
                  columns: 4
                  type: grid
                  cards:
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                      entity: switch.sapin
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                      entity: switch.guirlande_veranda
                      name: Véranda
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                      entity: switch.guirlande_etoiles
                      name: Etoiles
                    - type: custom:button-card
                      template:
                        - carte_lumiere
                      entity: switch.guirlande_couloir
                      name: Couloir
              type: vertical-stack
          type: vertical-stack
- theme: Backend-selected
  title: Batteries
  path: batteries
  icon: mdi:battery-60
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              style:
                .: |
                  ha-card {
                      --ha-card-background: none !important;
                      box-shadow: none !important;
                      font-family: Avenir
              name: |
                [[[ return "💻 Tel, tablette et ordi" ]]]
            - square: false
              columns: 5
              type: grid
              cards:
                - type: custom:button-card
                  entity: sensor.iphone_aurel_battery_level
                  name: Aurel
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  styles:
                    card:
                      - border-color: |
                          [[[
                              if( states['sensor.iphone_aurel_battery_state'].state == "Charging")
                                return "rgba(255, 215, 0, 0.9)"
                              return "rgba(12, 12, 14, 0.2)"
                          ]]]
                - type: custom:button-card
                  entity: sensor.ipad_aurel_battery_level
                  name: iPad
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  styles:
                    card:
                      - border-color: |
                          [[[
                              if( states['sensor.ipad_aurel_battery_state'].state == "Charging")
                                return "rgba(255, 215, 0, 0.9)"
                              return "rgba(12, 12, 14, 0.2)"
                          ]]]
                - type: custom:button-card
                  entity: sensor.macbook_aurel_internal_battery_level
                  name: Mac Aurel
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  styles:
                    card:
                      - border-color: |
                          [[[
                              if( states['sensor.macbook_aurel_internal_battery_state'].state == "Charging")
                                return "rgba(255, 215, 0, 0.9)"
                              return "rgba(12, 12, 14, 0.2)"
                          ]]]
                - type: custom:button-card
                  entity: sensor.alex_iphone_battery_level_ha
                  name: Alex
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  styles:
                    card:
                      - border-color: |
                          [[[
                              if( states['sensor.alex_iphone_battery_state_ha'].state == "Charging")
                                return "rgba(255, 215, 0, 0.9)"
                              return "rgba(12, 12, 14, 0.2)"
                          ]]]
                - type: custom:button-card
                  entity: sensor.macbook_alex_internal_battery_level
                  name: Mac Alex
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  styles:
                    card:
                      - border-color: |
                          [[[
                              if( states['sensor.macbook_alex_internal_battery_state'].state == "Charging")
                                return "rgba(255, 215, 0, 0.9)"
                              return "rgba(12, 12, 14, 0.2)"
                          ]]]
            - type: custom:button-card
              template:
                - titre_section
              style:
                .: |
                  ha-card {
                      --ha-card-background: none !important;
                      box-shadow: none !important;
                      font-family: Avenir
              name: |
                [[[ return "🏠 Appareils " ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  entity: sensor.aarlo_battery_level_sonnette
                  name: Sonnette
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                - type: custom:button-card
                  entity: sensor.moniteur_qualite_air_batterie
                  name: Air
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                - type: custom:button-card
                  entity: sensor.cube_aqara_batterie
                  name: Cube
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                - type: custom:button-card
                  entity: sensor.vibrations_batterie
                  name: Vibrations
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
            - type: custom:button-card
              template:
                - titre_section
              style:
                .: |
                  ha-card {
                      --ha-card-background: none !important;
                      box-shadow: none !important;
                      font-family: Avenir
              name: |
                [[[ return "🌡️ Thermomètres " ]]]
            - square: false
              columns: 5
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.sejour_thermo_batterie
                  name: Séjour
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.couloir_thermo_batterie
                  name: Couloir
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.parents_thermo_batterie
                  name: Parents
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.cuisine_thermo_batterie
                  name: Cuisine
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.temp_sdb_battery_level
                  name: SDB
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.tom_thermo_batterie
                  name: Tom
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.manon_thermo_batterie
                  name: Manon
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.nina_thermo_batterie
                  name: Nina
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.sonde_garage_batterie
                  name: Garage
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - cards:
            - type: custom:button-card
              template:
                - titre_section
              style:
                .: |
                  ha-card {
                      --ha-card-background: none !important;
                      box-shadow: none !important;
                      font-family: Avenir
              name: |
                [[[ return "🏃🏼‍♂️ Mouvements " ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.mouv_salon_batterie
                  name: Salon
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.mouv_salle_a_manger_batterie
                  name: S. à M
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.mouv_couloir_batterie
                  name: Couloir
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.mouv_garage_batterie
                  name: Garage
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.mouv_salle_d_eau_batterie
                  name: Lavabo
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.mouv_escalier_batterie
                  name: Escalier
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.mouv_palier_batterie
                  name: Palier
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.mouv_tom_batterie
                  name: Tom
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.mouv_manon_batterie
                  name: Manon
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.mouv_leane_batterie
                  name: Léane
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.mouv_nina_batterie
                  name: Nina
            - type: custom:button-card
              template:
                - titre_section
              style:
                .: |
                  ha-card {
                      --ha-card-background: none !important;
                      box-shadow: none !important;
                      font-family: Avenir
              name: |
                [[[ return "🚪 Portes " ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  entity: sensor.porte_entree_batterie
                  name: Entrée
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                - type: custom:button-card
                  entity: sensor.porte_salle_a_manger_batterie
                  name: S. à M
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                - type: custom:button-card
                  entity: sensor.porte_cagibi_batterie
                  name: Cagibi
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                - type: custom:button-card
                  entity: sensor.porte_garage_batterie
                  name: Garage
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                - type: custom:button-card
                  entity: sensor.porte_cuisine_batterie
                  name: Cuisine
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                - type: custom:button-card
                  entity: sensor.porte_chambre_parents_batterie
                  name: Parents
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
          type: vertical-stack
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - cards:
            - type: custom:button-card
              template:
                - titre_section
              style:
                .: |
                  ha-card {
                      --ha-card-background: none !important;
                      box-shadow: none !important;
                      font-family: Avenir
              name: |
                [[[ return "🔘 Interrupteurs " ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_ambiances_sejour_batterie
                  name: Ambiances
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_salon_batterie
                  name: Salon
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_salle_a_manger_batterie
                  name: S. à M
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_entree_batterie
                  name: Entrée
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_couloir_batterie
                  name: Couloir
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_salle_d_eau_batterie
                  name: Lavabo
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_chambre_parents_batterie
                  name: Parents
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_palier_batterie
                  name: Palier
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_chambre_tom_batterie
                  name: Tom
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_chevet_tom_batterie
                  name: Tom chevet
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_chambre_nina_batterie
                  name: Nina
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_chevet_nina_batterie
                  name: Nina chevet
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_grande_chambre_batterie
                  name: Filles
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_chevet_manon_batterie
                  name: Manon chevet
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.inter_chevet_leane_batterie
                  name: Léane chevet
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_batterie
                    - state_unavailable
                  entity: sensor.shellybutton1_98cdac2d5312_battery
                  name: Shelly
          type: vertical-stack
- theme: Backend-selected
  title: Alarmes
  path: Alarmes
  icon: mdi:shield-lock-open-outline
  type: custom:horizontal-layout
  layout:
    width: 350
    max_cols: 4
  subview: true
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 350
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              label: |
                [[[ return "Alarme" ]]]
            - type: alarm-panel
              states:
                - arm_away
                - arm_home
                - arm_night
              entity: alarm_control_panel.alarme
            - square: false
              columns: 2
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - base
                    - state_appareil
                    - state_unavailable
                  show_state: true
                  show_last_changed: true
                  entity: siren.frient
                  name: Sirène Garage
                - type: custom:button-card
                  template:
                    - base
                    - state_appareil
                    - state_unavailable
                  show_state: true
                  show_last_changed: true
                  entity: siren.sirene_heiman
                  name: Sirène Salon
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 350
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              label: |
                [[[ return "Caméras" ]]]
            - square: false
              columns: 1
              type: grid
              cards:
                - entity: camera.aarlo_sonnette
                  title: Sonnette
                  hide:
                    - date
                  global: small
                  image_click: play
                  image_view: arlo-stream
                  show:
                    - motion
                    - sound
                    - image_date
                    - signal_strength
                    - captured_today
                    - image_date
                    - on_off
                    - snapshot
                    - battery_level
                  top_date: true
                  top_status: false
                  top_title: false
                  type: custom:aarlo-glance
                - camera_view: live
                  type: picture-glance
                  title: Salon
                  entities:
                    - entity: alarm_control_panel.camera_g3
                    - entity: binary_sensor.mouv_camera_g3
                    - entity: device_tracker.camera_hub_g3_2725
                  camera_image: camera.camera_hub_g3_2725
                - camera_view: live
                  type: picture-glance
                  title: Garage
                  entities:
                    - entity: alarm_control_panel.camera_g2hpro
                    - entity: binary_sensor.mouv_camera_g2hpro
                  camera_image: camera.camera_g2hpro
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          label: |
            [[[ return "Sonnette" ]]]
        - type: alarm-panel
          states:
            - arm_home
            - arm_away
          entity: alarm_control_panel.aarlo_sonnette
        - square: false
          columns: 2
          type: grid
          cards:
            - type: custom:button-card
              template:
                - base
                - base_moyenne
                - state_batterie
                - jauge_horizontal
                - state_unavailable
              show_last_changed: false
              show_state: true
              entity: sensor.aarlo_battery_level_sonnette
              name: Batterie
              custom_fields:
                jauge-horizontal:
                  card:
                    type: custom:bar-card
                    entities:
                      - entity: sensor.aarlo_battery_level_sonnette
                    max: 100
                    severity:
                      - color: rgb(176, 196, 222)
                        from: 0
                        to: 29.9
                      - color: rgb(70, 130, 180)
                        from: 30
                        to: 100
            - type: custom:button-card
              template:
                - base
                - base_moyenne
                - jauge_horizontal
                - state_unavailable
              show_last_changed: false
              show_state: true
              entity: sensor.aarlo_signal_strength_sonnette
              name: Signal
              custom_fields:
                jauge-horizontal:
                  card:
                    type: custom:bar-card
                    entities:
                      - entity: sensor.aarlo_signal_strength_sonnette
                    max: 4
                    severity:
                      - color: rgb(176, 196, 222)
                        from: 0
                        to: 2
                      - color: rgb(70, 130, 180)
                        from: 3
                        to: 4
            - type: custom:button-card
              template:
                - base
                - state_mouv
                - state_unavailable
              show_last_changed: true
              entity: binary_sensor.aarlo_motion_sonnette
              name: Mouvement
            - type: custom:button-card
              template:
                - base
                - state_appareil
                - state_unavailable
              show_last_changed: false
              show_state: true
              entity: sensor.aarlo_last_sonnette
              name: Dernier
            - type: custom:button-card
              template:
                - base
                - state_appareil
                - state_unavailable
              show_last_changed: true
              entity: binary_sensor.aarlo_ding_sonnette
              name: Ding !
            - type: custom:button-card
              template:
                - base
                - state_appareil
                - state_unavailable
              show_last_changed: true
              entity: switch.aarlo_snapshot_sonnette
              name: Capture
            - type: custom:button-card
              template:
                - base
                - state_appareil
                - state_unavailable
              show_last_changed: false
              show_state: true
              entity: sensor.aarlo_captured_today_sonnette
              name: Aujourd'hui
            - type: custom:button-card
              template:
                - base
                - state_appareil
                - state_unavailable
              show_last_changed: false
              show_state: true
              entity: binary_sensor.aarlo_connected_sonnette
              name: Statut
            - type: custom:button-card
              template:
                - base
                - state_appareil
                - state_unavailable
              show_last_changed: true
              entity: camera.aarlo_sonnette
              name: Caméra
            - type: custom:button-card
              template:
                - base
                - state_appareil
                - state_unavailable
              show_last_changed: true
              entity: switch.aarlo_siren_sonnette
              name: Sirène
- theme: Backend-selected
  subview: true
  icon: mdi:sofa
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  title: Sejour
  path: Séjour
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Capteurs" ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  entity: sensor.temp_sejour
                  name: temp
                  template:
                    - carte_thermo
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.temp_sejour
                - type: custom:button-card
                  entity: sensor.hum_sejour
                  name: hum
                  template:
                    - carte_humidite
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.hum_sejour
                - type: custom:button-card
                  entity: sensor.plante_lum_dracaena
                  name: salon
                  template:
                    - carte_lum
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.plante_lum_dracaena
                - type: custom:button-card
                  entity: sensor.plante_lum_pied_elephant
                  name: sàm
                  template:
                    - carte_lum
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.plante_lum_pied_elephant
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_porte
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.porte_salle_a_manger
                  name: Porte SàM
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_salle_a_manger
                  name: Mouv SàM
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_salon
                  name: Mouv Salon
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_camera_g3
                  name: Caméra G3
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Ambiances lumineuses " ]]]
            - type: grid
              square: false
              columns: 5
              cards:
                - type: custom:button-card
                  entity: scene.ambiance_normale
                  name: Normale
                  show_name: true
                  template:
                    - carte_badge
                  styles:
                    card:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Normale")
                                return "var(--custom-card-color-gold)"
                              return ""
                          ]]]
                    img_cell:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Normale")
                                return "var(--custom-img-cell-color-gold)"
                              return "var(--pastille_off)"
                          ]]]
                    icon:
                      - color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Normale")
                                return "var(--custom-icon-color-gold)"
                              return ""
                          ]]]
                  tap_action:
                    action: call-service
                    service: scene.turn_on
                    service_data:
                      entity_id: scene.ambiance_normale
                - type: custom:button-card
                  entity: scene.zen
                  name: Doux
                  show_name: true
                  template:
                    - carte_badge
                  styles:
                    card:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Doux")
                                return "var(--custom-card-color-blue)"
                              return ""
                          ]]]
                    img_cell:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Doux")
                                return "var(--custom-img-cell-color-blue)"
                              return "var(--pastille_off)"
                          ]]]
                    icon:
                      - color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Doux")
                                return "var(--custom-icon-color-blue)"
                              return ""
                          ]]]
                  tap_action:
                    action: call-service
                    service: scene.turn_on
                    service_data:
                      entity_id: scene.zen
                - type: custom:button-card
                  entity: scene.repas_devant_tv
                  name: Repas
                  show_name: true
                  template:
                    - carte_badge
                  styles:
                    card:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Repas TV")
                                return "var(--custom-card-color-orange)"
                              return ""
                          ]]]
                    img_cell:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Repas TV")
                                return "var(--custom-img-cell-color-orange)"
                              return "var(--pastille_off)"
                          ]]]
                    icon:
                      - color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Repas TV")
                                return "var(--custom-icon-color-orange)"
                              return ""
                          ]]]
                  tap_action:
                    action: call-service
                    service: scene.turn_on
                    service_data:
                      entity_id: scene.repas_devant_tv
                - type: custom:button-card
                  entity: scene.tv
                  name: TV
                  icon: mdi:television-play
                  show_name: true
                  template:
                    - carte_badge
                  styles:
                    card:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "TV")
                                return "var(--custom-card-color-red)"
                              return ""
                          ]]]
                    img_cell:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "TV")
                                return "var(--custom-img-cell-color-red)"
                              return "var(--pastille_off)"
                          ]]]
                    icon:
                      - color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "TV")
                                return "var(--custom-icon-color-red)"
                              return ""
                          ]]]
                  tap_action:
                    action: call-service
                    service: scene.turn_on
                    service_data:
                      entity_id: scene.tv
                - type: custom:button-card
                  entity: scene.travail_dessin_2
                  name: Travail
                  show_name: true
                  template:
                    - carte_badge
                  styles:
                    card:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Travail")
                                return "rgba(215,215,215,1)"
                              return ""
                          ]]]
                    img_cell:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Travail")
                                return "rgba(215,215,215,0.3)"
                              return "var(--pastille_off)"
                          ]]]
                    icon:
                      - color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Travail")
                                return "rgba(215,215,215,1)"
                              return ""
                          ]]]
                  tap_action:
                    action: call-service
                    service: scene.turn_on
                    service_data:
                      entity_id: scene.travail_dessin_2
                - type: custom:button-card
                  entity: scene.lecture
                  name: Lecture
                  show_name: true
                  template:
                    - carte_badge
                  styles:
                    card:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Lecture")
                                return "rgba(215,215,215,1)"
                              return ""
                          ]]]
                    img_cell:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Lecture")
                                return "rgba(215,215,215,0.3)"
                              return "var(--pastille_off)"
                          ]]]
                    icon:
                      - color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Lecture")
                                return "rgba(215,215,215,1)"
                              return ""
                          ]]]
                  tap_action:
                    action: call-service
                    service: scene.turn_on
                    service_data:
                      entity_id: scene.lecture
                - type: custom:button-card
                  entity: script.apero_lum
                  name: Apéro
                  show_name: true
                  template:
                    - carte_badge
                  styles:
                    card:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Apero")
                                return "var(--custom-card-color-gold)"
                              return ""
                          ]]]
                    img_cell:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Apero")
                                return "var(--custom-img-cell-color-gold)"
                              return "var(--pastille_off)"
                          ]]]
                    icon:
                      - color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Apero")
                                return "var(--custom-icon-color-gold)"
                              return ""
                          ]]]
                  tap_action:
                    action: call-service
                    service: script.turn_on
                    service_data:
                      entity_id: script.apero_lum
                - type: custom:button-card
                  entity: scene.anniversaire
                  name: Anniv
                  show_name: true
                  template:
                    - carte_badge
                  styles:
                    card:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Anniversaire")
                                return "var(--custom-card-color-blue)"
                              return ""
                          ]]]
                    img_cell:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Anniversaire")
                                return "var(--custom-img-cell-color-blue)"
                              return "var(--pastille_off)"
                          ]]]
                    icon:
                      - color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Anniversaire")
                                return "var(--custom-icon-color-blue)"
                              return ""
                          ]]]
                  tap_action:
                    action: call-service
                    service: scene.turn_on
                    service_data:
                      entity_id: scene.anniversaire
                - type: custom:button-card
                  entity: script.ambiance_repas_invites
                  name: Invités
                  show_name: true
                  template:
                    - carte_badge
                  styles:
                    card:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Repas invités")
                                return "var(--custom-card-color-gold)"
                              return ""
                          ]]]
                    img_cell:
                      - background-color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Repas invités")
                                return "var(--custom-img-cell-color-gold)"
                              return "var(--pastille_off)"
                          ]]]
                    icon:
                      - color: |
                          [[[
                              if( states['sensor.ambiances_sejour'].state == "Repas invités")
                                return "var(--custom-icon-color-gold)"
                              return ""
                          ]]]
                  tap_action:
                    action: call-service
                    service: script.turn_on
                    service_data:
                      entity_id: script.ambiance_repas_invites
                - type: custom:button-card
                  entity: automation.inter_ambiances_sejour
                  name: Foot
                  icon: mdi:flag
                  show_name: true
                  template:
                    - carte_badge
                  tap_action:
                    action: call-service
                    service: automation.inter_ambiances_sejour
      layout:
        width: 280
    - type: custom:layout-card
      layout_type: masonry
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Lumières" ]]]
            - square: false
              columns: 2
              type: grid
              cards:
                - type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                    - jauge_lumiere
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lampe_de_bureau
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                  entity: light.lampe_de_bureau
                  name: Bureau
                - type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - state_lumiere
                    - state_unavailable
                  entity: light.lampe_tv_salon
                  name: Lampe TV
                - type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.bandeau_led
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                  entity: light.bandeau_led
                  name: Bandeau TV
                - type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lampe_canape
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                  entity: light.lampe_canape
                - type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lustre_salon
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                  entity: light.lustre_salon
                  name: Lustre salon
                - type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lustre_salle_a_manger
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                  entity: light.lustre_salle_a_manger
                  name: Lustre SàM
                - type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.buffet
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                  entity: light.buffet
                - type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lampadaire
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                  entity: light.lampadaire
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Multimédias " ]]]
        - square: false
          columns: 1
          type: grid
          cards:
            - type: custom:button-card
              template:
                - base
                - base_moyenne
                - state_tv
                - state_unavailable
              show_last_changed: true
              entity: media_player.tv_salon
              name: TV
              icon: mdi:youtube-tv
              tap_action:
                action: call-service
                service: script.tv_salon_on_off
                data: {}
                target: {}
            - type: custom:mini-media-player
              entity: media_player.sejour
              artwork: material
              icon: mdi:speaker
      layout:
        width: 280
    - type: custom:layout-card
      layout_type: masonry
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Caméra" ]]]
        - camera_view: live
          type: picture-glance
          title: Salon
          entities:
            - entity: alarm_control_panel.camera_g3
            - entity: binary_sensor.mouv_camera_g3
          camera_image: camera.camera_hub_g3_2725
        - square: false
          columns: 1
          type: grid
          cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Relevés" ]]]
            - type: custom:apexcharts-card
              header:
                show: true
                title: Séjour
                show_states: true
                colorize_states: true
              experimental:
                brush: true
              graph_span: 3d
              brush:
                selection_span: 24h
              apex_config:
                grid:
                  show: true
                legend:
                  fontSize: 12px
                  height: 40
                dataLabels:
                  enabled: false
                stroke:
                  width: 3
                  curve: smooth
                fill:
                  type: gradient
                  gradient:
                    type: vertical
                    shadeIntensity: 0.8
                    inverseColors: false
                    opacityFrom: 0.5
                    opacityTo: 0
                    stops:
                      - - 0
                        - 50
                        - 100
              yaxis:
                - id: first
                  decimals: 1
                  apex_config:
                    tickAmount: 4
                - id: second
                  opposite: true
                  decimals: 0
                  apex_config:
                    tickAmount: 4
              all_series_config:
                stroke_width: 2
              series:
                - entity: sensor.temp_sejour
                  yaxis_id: first
                  name: température
                  unit: °C
                  color: orange
                  type: area
                  show:
                    extremas: true
                    in_brush: true
                  float_precision: 1
                  group_by:
                    duration: 10min
                    func: max
                - entity: sensor.hum_sejour
                  yaxis_id: second
                  name: humidité
                  unit: '%'
                  color: dodgerblue
                  type: area
                  show:
                    extremas: true
                  float_precision: 1
                  group_by:
                    duration: 10min
                    func: max
      layout:
        width: 280
- theme: Backend-selected
  subview: true
  icon: mdi:account
  title: Personnes
  path: Personnes
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - square: false
          columns: 2
          type: grid
          cards:
            - type: custom:button-card
              template:
                - carte_personne_aurel
            - type: custom:button-card
              template:
                - carte_personne_alex
            - type: custom:button-card
              template:
                - carte_personne_tom
            - type: custom:button-card
              template:
                - carte_personne_manon
            - type: custom:button-card
              template:
                - carte_personne_leane
            - type: custom:button-card
              template:
                - carte_personne_nina
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: map
          entities:
            - person.herve
            - person.alex
          dark_mode: true
- theme: Backend-selected
  subview: true
  icon: mdi:door-open
  path: Portes
  title: Portes
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  badges: []
  cards:
    - square: false
      columns: 3
      type: grid
      cards:
        - type: custom:button-card
          template:
            - carte_badge
            - state_porte
            - state_unavailable
          show_last_changed: true
          entity: binary_sensor.porte_entree
          name: Entrée
        - type: custom:button-card
          template:
            - carte_badge
            - state_porte
            - state_unavailable
          show_last_changed: true
          entity: binary_sensor.porte_salle_a_manger
          name: SaM
        - type: custom:button-card
          template:
            - carte_badge
            - state_porte
            - state_unavailable
          show_last_changed: true
          entity: binary_sensor.porte_cuisine
          name: Cuisine
        - type: custom:button-card
          template:
            - carte_badge
            - state_porte
            - state_unavailable
          show_last_changed: true
          entity: binary_sensor.porte_chambre_parents
          name: Parents
        - type: custom:button-card
          template:
            - carte_badge
            - state_porte
            - state_unavailable
          show_last_changed: true
          entity: binary_sensor.porte_cagibi
          name: Cagibi
        - type: custom:button-card
          template:
            - carte_badge
            - state_porte
            - state_unavailable
          show_last_changed: true
          entity: binary_sensor.porte_garage
          name: Garage
- theme: Backend-selected
  subview: true
  path: Mouvements
  icon: mdi:run-fast
  title: Mouvements
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Rez-de-chaussée" ]]]
            - square: false
              columns: 3
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_salon
                  name: Salon
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_salle_a_manger
                  name: Salle à manger
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_couloir
                  name: Couloir
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_salle_d_eau
                  name: Salle d'eau
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_garage
                  name: Garage
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_escalier
                  name: Escalier
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_camera_g3
                  name: Caméra Salon
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_camera_g2hpro
                  name: Caméra Garage
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Etage"]]]
            - square: false
              columns: 3
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_tom
                  name: Tom
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_manon
                  name: Manon
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_leane
                  name: Léane
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_nina
                  name: Nina
                - type: custom:button-card
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_palier
                  name: Palier
- theme: Backend-selected
  icon: mdi:speaker-multiple
  title: Musique
  subview: true
  path: Musique
  type: custom:horizontal-layout
  layout:
    width: 350
    max_cols: 4
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Rez-de-chaussée " ]]]
        - square: false
          columns: 2
          type: grid
          cards:
            - type: custom:button-card
              entity: media_player.sejour
              name: Séjour
              icon: mdi:speaker
              template:
                - base
                - carte_multimedia
                - state_musique
              custom_fields:
                cartes:
                  card:
                    type: conditional
                    conditions:
                      - entity: media_player.sejour
                        state: playing
                    card:
                      info: scroll
                      artwork: full-cover-fit
                      hide:
                        volume: true
                        source: true
                        power: true
                        name: false
                        icon: true
                        controls: true
                      type: custom:mini-media-player
                      entity: media_player.sejour
            - type: custom:button-card
              entity: media_player.la_cuisine
              name: Cuisine
              icon: mdi:speaker
              template:
                - base
                - carte_multimedia
                - state_musique
              custom_fields:
                cartes:
                  card:
                    type: conditional
                    conditions:
                      - entity: media_player.la_cuisine
                        state: playing
                    card:
                      info: scroll
                      artwork: full-cover-fit
                      hide:
                        volume: true
                        source: true
                        power: true
                        name: false
                        icon: true
                        controls: true
                      type: custom:mini-media-player
                      entity: media_player.la_cuisine
            - type: custom:button-card
              entity: media_player.chambre_des_parents
              name: Parents
              icon: mdi:speaker
              template:
                - base
                - carte_multimedia
                - state_musique
              custom_fields:
                cartes:
                  card:
                    type: conditional
                    conditions:
                      - entity: media_player.chambre_des_parents
                        state: playing
                    card:
                      info: scroll
                      artwork: full-cover-fit
                      hide:
                        volume: true
                        source: true
                        power: true
                        name: false
                        icon: true
                        controls: true
                      type: custom:mini-media-player
                      entity: media_player.chambre_parents
            - type: custom:button-card
              entity: media_player.le_garage
              name: Garage
              icon: mdi:speaker
              template:
                - base
                - carte_multimedia
                - state_musique
              custom_fields:
                cartes:
                  card:
                    type: conditional
                    conditions:
                      - entity: media_player.le_garage
                        state: playing
                    card:
                      info: scroll
                      artwork: full-cover-fit
                      hide:
                        volume: true
                        source: true
                        power: true
                        name: false
                        icon: true
                        controls: true
                      type: custom:mini-media-player
                      entity: media_player.le_garage
    - type: custom:layout-card
      layout_type: masonry
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Etage " ]]]
        - square: false
          columns: 2
          type: grid
          cards:
            - type: custom:button-card
              entity: media_player.tom
              name: Tom
              icon: mdi:speaker
              template:
                - base
                - carte_multimedia
                - state_musique
              custom_fields:
                cartes:
                  card:
                    type: conditional
                    conditions:
                      - entity: media_player.tom
                        state: playing
                      - entity: media_player.partout
                        state_not: playing
                      - entity: media_player.etage
                        state_not: playing
                    card:
                      info: scroll
                      artwork: full-cover-fit
                      hide:
                        volume: true
                        source: true
                        power: true
                        name: false
                        icon: true
                        controls: true
                      type: custom:mini-media-player
                      entity: media_player.tom
            - type: custom:button-card
              entity: media_player.chambre_de_manon_et_leane
              name: Manon Léane
              icon: mdi:speaker
              template:
                - base
                - carte_multimedia
                - state_musique
              custom_fields:
                cartes:
                  card:
                    type: conditional
                    conditions:
                      - entity: media_player.chambre_de_manon_et_leane
                        state: playing
                      - entity: media_player.partout
                        state_not: playing
                    card:
                      info: scroll
                      artwork: full-cover-fit
                      hide:
                        volume: true
                        source: true
                        power: true
                        name: false
                        icon: true
                        controls: true
                      type: custom:mini-media-player
                      entity: media_player.chambre_de_manon_et_leane
            - type: custom:button-card
              entity: media_player.nina
              name: Nina
              icon: mdi:speaker
              template:
                - base
                - carte_multimedia
                - state_musique
              custom_fields:
                cartes:
                  card:
                    type: conditional
                    conditions:
                      - entity: media_player.nina
                        state: playing
                      - entity: media_player.partout
                        state_not: playing
                      - entity: media_player.etage
                        state_not: playing
                    card:
                      info: scroll
                      artwork: full-cover-fit
                      hide:
                        volume: true
                        source: true
                        power: true
                        name: false
                        icon: true
                        controls: true
                      type: custom:mini-media-player
                      entity: media_player.nina
            - type: custom:button-card
              entity: media_player.la_salle_de_bain
              name: S. de bain
              icon: mdi:speaker
              template:
                - base
                - carte_multimedia
                - state_musique
              custom_fields:
                cartes:
                  card:
                    type: conditional
                    conditions:
                      - entity: media_player.la_salle_de_bain
                        state: playing
                      - entity: media_player.partout
                        state_not: playing
                      - entity: media_player.etage
                        state_not: playing
                    card:
                      info: scroll
                      artwork: full-cover-fit
                      hide:
                        volume: true
                        source: true
                        power: true
                        name: false
                        icon: true
                        controls: true
                      type: custom:mini-media-player
                      entity: media_player.la_salle_de_bain
            - type: custom:button-card
              entity: media_player.leane
              name: Léane
              icon: mdi:speaker
              template:
                - base
                - carte_multimedia
                - state_musique
              custom_fields:
                cartes:
                  card:
                    type: conditional
                    conditions:
                      - entity: media_player.leane
                        state: playing
                      - entity: media_player.partout
                        state_not: playing
                      - entity: media_player.etage
                        state_not: playing
                      - entity: media_player.chambre_de_manon_et_leane
                        state_not: playing
                    card:
                      info: scroll
                      artwork: full-cover-fit
                      hide:
                        volume: true
                        source: true
                        power: true
                        name: false
                        icon: true
                        controls: true
                      type: custom:mini-media-player
                      entity: media_player.leane
            - type: custom:button-card
              entity: media_player.manon
              name: Manon
              icon: mdi:speaker
              template:
                - base
                - carte_multimedia
                - state_musique
              custom_fields:
                cartes:
                  card:
                    type: conditional
                    conditions:
                      - entity: media_player.manon
                        state: playing
                      - entity: media_player.partout
                        state_not: playing
                      - entity: media_player.etage
                        state_not: playing
                      - entity: media_player.chambre_de_manon_et_leane
                        state_not: playing
                    card:
                      info: scroll
                      artwork: full-cover-fit
                      hide:
                        volume: true
                        source: true
                        power: true
                        name: false
                        icon: true
                        controls: true
                      type: custom:mini-media-player
                      entity: media_player.manon
    - type: custom:layout-card
      layout_type: masonry
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Groupes " ]]]
        - square: false
          columns: 2
          type: grid
          cards:
            - type: custom:button-card
              entity: media_player.partout
              name: Partout
              icon: mdi:speaker
              template:
                - base
                - carte_multimedia
                - state_musique
              custom_fields:
                cartes:
                  card:
                    type: conditional
                    conditions:
                      - entity: media_player.partout
                        state: playing
                    card:
                      info: scroll
                      artwork: full-cover-fit
                      hide:
                        volume: true
                        source: true
                        power: true
                        name: false
                        icon: true
                        controls: true
                      type: custom:mini-media-player
                      entity: media_player.partout
            - type: custom:button-card
              entity: media_player.en_bas
              name: En bas
              icon: mdi:speaker
              template:
                - base
                - carte_multimedia
                - state_musique
              custom_fields:
                cartes:
                  card:
                    type: conditional
                    conditions:
                      - entity: media_player.en_bas
                        state: playing
                    card:
                      info: scroll
                      artwork: full-cover-fit
                      hide:
                        volume: true
                        source: true
                        power: true
                        name: false
                        icon: true
                        controls: true
                      type: custom:mini-media-player
                      entity: media_player.en_bas
            - type: custom:button-card
              entity: media_player.etage
              name: Etage
              icon: mdi:speaker
              template:
                - base
                - carte_multimedia
                - state_musique
              custom_fields:
                cartes:
                  card:
                    type: conditional
                    conditions:
                      - entity: media_player.etage
                        state: playing
                      - entity: media_player.partout
                        state_not: playing
                    card:
                      info: scroll
                      artwork: full-cover-fit
                      hide:
                        volume: true
                        source: true
                        power: true
                        name: false
                        icon: true
                        controls: true
                      type: custom:mini-media-player
                      entity: media_player.etage
- theme: Backend-selected
  title: Autres
  path: Autres
  subview: true
  icon: mdi:home-search-outline
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  badges: []
  cards:
    - type: grid
      cards:
        - type: custom:button-card
          template:
            - carte_appareil_vaisselle
        - type: custom:button-card
          template:
            - carte_appareil_linge
        - type: custom:button-card
          entity: switch.radiateur
          name: Chauffage SDB
          icon: phu:rooms-bathroom
          template:
            - base
            - base_large
            - carte_piece
            - state_lumiere
            - state_unavailable
          label: |
            [[[ 
              if( states['sensor.temp_salle_de_bain'].state == "unavailable")
                return "HS"
              return (states['sensor.temp_salle_de_bain'].state )  + "° / "+(states['sensor.hum_salle_de_bain'].state ) + "%" ;

            ]]]
          styles:
            label:
              - color: |
                  [[[
                      if( states['sensor.temp_salle_de_bain'].state =="unavailable")
                      return "red"
                      if( states['sensor.temp_salle_de_bain'].state < 18.5)
                      return "var(--custom-icon-color-blue)"
                      if( states['sensor.temp_salle_de_bain'].state > 25.9)
                      return "var(--custom-icon-color-red)"
                    return "darkgrey"
                  ]]]
          custom_fields:
            bouton:
              card:
                type: horizontal-stack
                cards:
                  - type: custom:button-card
                    entity: sensor.radiateur_active_power
                    units: W
                    show_state: true
                    show_icon: false
                    template:
                      - carte_bouton
                      - state_unavailable
                    styles:
                      state:
                        - font-size: 11px
                        - color: |
                            [[[
                              if (states['sensor.radiateur_active_power'].state != 0)
                                return 'rgb(176, 196, 222)';
                              return "var(--icon_off)"
                            ]]]
                      card:
                        - background: |
                            [[[
                              if (states['sensor.radiateur_active_power'].state != 0)
                                return 'rgba(74,82,96,0.7)'
                              return 'rgba(43,53,66,0.7)'
                            ]]]
          tap_action:
            action: navigate
            navigation_path: /lovelace/SDB
        - type: custom:button-card
          template:
            - carte_appareil_imprimante
        - type: custom:button-card
          show_last_changed: true
          show_state: false
          template:
            - base
            - base_moyenne
            - state_appareil
            - state_unavailable
          entity: switch.moustique_parents
        - type: custom:button-card
          show_last_changed: true
          show_state: false
          template:
            - base
            - base_moyenne
            - state_appareil
            - state_unavailable
          entity: switch.moustique_tom
        - type: custom:button-card
          show_last_changed: true
          show_state: false
          template:
            - base
            - base_moyenne
            - state_appareil
            - state_unavailable
          entity: switch.moustique_manon
        - type: custom:button-card
          show_last_changed: true
          show_state: false
          template:
            - base
            - base_moyenne
            - state_appareil
            - state_unavailable
          entity: switch.moustique_nina
      columns: 2
      square: false
- theme: Backend-selected
  subview: true
  path: Annonces
  title: Annonces
  icon: mdi:speaker-message
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  badges: []
  cards:
    - type: vertical-stack
      cards:
        - square: false
          columns: 2
          type: grid
          cards:
            - type: custom:button-card
              entity: script.cest_lheure_daller_a_lecole
              name: Ecole
              show_last_changed: true
              show_state: false
              template:
                - base
                - base_moyenne
                - state_unavailable
                - state_appareil
                - state_unavailable
              tap_action:
                action: toggle
            - type: custom:button-card
              entity: script.a_table
              name: A table
              show_last_changed: true
              show_state: false
              template:
                - base
                - base_moyenne
                - state_unavailable
                - state_appareil
                - state_unavailable
              tap_action:
                action: toggle
            - type: custom:button-card
              entity: script.gouter
              name: Goûter
              show_last_changed: true
              show_state: false
              template:
                - base
                - base_moyenne
                - state_unavailable
                - state_appareil
                - state_unavailable
              tap_action:
                action: toggle
            - type: custom:button-card
              entity: script.1590760144160
              name: Fin écran
              show_last_changed: true
              show_state: false
              template:
                - base
                - base_moyenne
                - state_unavailable
                - state_appareil
                - state_unavailable
              tap_action:
                action: toggle
            - type: custom:button-card
              entity: script.annonce_au_lit
              name: Coucher filles
              show_last_changed: true
              show_state: false
              template:
                - base
                - base_moyenne
                - state_unavailable
                - state_appareil
                - state_unavailable
              tap_action:
                action: toggle
            - type: custom:button-card
              entity: script.tom_va_se_coucher
              name: Coucher Tom
              show_last_changed: true
              show_state: false
              template:
                - base
                - base_moyenne
                - state_unavailable
                - state_appareil
                - state_unavailable
              tap_action:
                action: toggle
            - type: custom:button-card
              entity: script.reveille_tom_annonce_alexa
              name: Réveiller Tom
              show_last_changed: true
              show_state: false
              template:
                - base
                - base_moyenne
                - state_unavailable
                - state_appareil
                - state_unavailable
              tap_action:
                action: toggle
- theme: Backend-selected
  title: Tom
  path: Tom
  subview: true
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  icon: mdi:whistle
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Capteurs" ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  entity: sensor.temp_tom
                  name: temp
                  template:
                    - carte_thermo
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.temp_tom
                - type: custom:button-card
                  entity: sensor.hum_tom
                  name: hum
                  template:
                    - carte_humidite
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.hum_tom
                - type: custom:button-card
                  entity: sensor.mouv_tom_luminosite
                  name: lum
                  template:
                    - carte_lum
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.mouv_tom_luminosite
            - square: false
              columns: 1
              type: grid
              cards:
                - type: custom:button-card
                  entity: binary_sensor.mouv_tom
                  name: Mouv
                  show_last_changed: true
                  template:
                    - base
                    - state_mouv
                    - state_unavailable
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "lumières et appareils" ]]]
            - type: horizontal-stack
              cards:
                - type: custom:button-card
                  entity: scene.tom_ambiance_normale
                  name: Jour
                  template:
                    - carte_badge
                  show_name: true
                  tap_action:
                    action: call-service
                    service: scene.turn_on
                    service_data:
                      entity_id: scene.tom_ambiance_normale
                - type: custom:button-card
                  entity: scene.tom_ambiance_nuit
                  name: Nuit
                  template:
                    - carte_badge
                  show_name: true
                  tap_action:
                    action: call-service
                    service: scene.turn_on
                    service_data:
                      entity_id: scene.tom_ambiance_nuit
                - type: custom:button-card
                  name: 'Tout éteindre '
                  icon: mdi:lightbulb-group-off
                  template:
                    - carte_badge
                  show_name: true
                  tap_action:
                    action: call-service
                    service: light.turn_off
                    service_data:
                      entity_id: light.tom
            - square: false
              columns: 2
              type: grid
              cards:
                - type: custom:button-card
                  entity: light.lustre_tom
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  name: null
                  icon: null
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lustre_tom
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                - type: custom:button-card
                  entity: light.chevet_tom
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  name: null
                  icon: null
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.chevet_tom
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                - type: custom:button-card
                  entity: light.sonoff_10013f6d7e
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  name: null
                  icon: null
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.sonoff_10013f6d7e
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                - type: custom:button-card
                  entity: light.lampe_de_bureau_tom
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  name: null
                  icon: null
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lampe_de_bureau_tom
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                - type: custom:button-card
                  entity: switch.moustique_tom
                  name: Prise moustique
                  show_last_changed: true
                  template:
                    - base
                    - base_moyenne
                    - state_appareil
                    - state_unavailable
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Musique " ]]]
        - type: custom:mini-media-player
          entity: media_player.tom
          artwork: material
          icon: mdi:speaker
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Réglages" ]]]
        - square: false
          columns: 2
          type: grid
          cards:
            - type: custom:button-card
              entity: sensor.tom_reveil
              show_last_changed: false
              show_name: true
              show_state: true
              template:
                - base
                - base_petite
                - state_unavailable
              state:
                - value: Grasse mat !
                  operator: '!='
                  styles:
                    card:
                      - background-color: var(--custom-card-color-blue)
                    img_cell:
                      - background-color: var(--custom-img-cell-color-blue)
                    icon:
                      - color: var(--custom-icon-color-blue)
                    name:
                      - color: var(--text_on)'
              name: Réveil
              icon: mdi:alarm
            - type: custom:button-card
              entity: automation.reveil_tom
              show_last_changed: true
              show_name: true
              template:
                - base
                - base_petite
                - state_appareil
                - state_unavailable
              name: Auto réveil
              icon: mdi:progress-clock
            - type: custom:button-card
              entity: automation.tom_allumage_auto
              show_last_changed: true
              show_name: true
              template:
                - base
                - base_petite
                - state_appareil
                - state_unavailable
              name: ON auto chambre
              icon: mdi:lightbulb-on-outline
            - type: custom:button-card
              entity: automation.tom_chambre_off_auto
              show_last_changed: true
              show_name: true
              template:
                - base
                - base_petite
                - state_appareil
                - state_unavailable
              name: OFF auto chambre
              icon: mdi:lightbulb-multiple-off
            - type: custom:button-card
              entity: switch.tom_do_not_disturb_switch
              show_last_changed: true
              show_name: true
              template:
                - base
                - base_petite
                - state_appareil
                - state_unavailable
              name: Alexa silence
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Relevés " ]]]
        - type: custom:apexcharts-card
          header:
            show: true
            title: Chambre Tom
            show_states: true
            colorize_states: true
          experimental:
            brush: true
          graph_span: 3d
          brush:
            selection_span: 24h
          apex_config:
            grid:
              show: true
            legend:
              fontSize: 12px
              height: 40
            dataLabels:
              enabled: false
            stroke:
              width: 3
              curve: smooth
            fill:
              type: gradient
              gradient:
                type: vertical
                shadeIntensity: 0.8
                inverseColors: false
                opacityFrom: 0.5
                opacityTo: 0
                stops:
                  - - 0
                    - 50
                    - 100
          yaxis:
            - id: first
              decimals: 1
              apex_config:
                tickAmount: 4
            - id: second
              opposite: true
              decimals: 0
              apex_config:
                tickAmount: 4
          all_series_config:
            stroke_width: 2
          series:
            - entity: sensor.temp_tom
              yaxis_id: first
              name: température
              unit: °C
              color: orange
              type: area
              show:
                extremas: true
                in_brush: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
            - entity: sensor.hum_tom
              yaxis_id: second
              name: humidité
              unit: '%'
              color: dodgerblue
              type: area
              show:
                extremas: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
- theme: Backend-selected
  subview: true
  path: Manon Léane
  title: Manon Léane
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  icon: mdi:cat
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Capteurs" ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  entity: sensor.temp_manon
                  name: temp
                  template:
                    - carte_thermo
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.temp_manon
                - type: custom:button-card
                  entity: sensor.hum_manon
                  name: hum
                  template:
                    - carte_humidite
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.hum_manon
                - type: custom:button-card
                  entity: sensor.mouv_manon_luminosite
                  name: Manon
                  template:
                    - carte_lum
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.mouv_manon_luminosite
                - type: custom:button-card
                  entity: sensor.mouv_leane_batterie
                  name: Léane
                  template:
                    - carte_lum
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.mouv_leane_luminosite
            - square: false
              columns: 2
              type: grid
              cards:
                - type: custom:button-card
                  entity: binary_sensor.mouv_manon
                  name: Mouv
                  show_last_changed: true
                  template:
                    - base
                    - state_mouv
                    - state_unavailable
                - type: custom:button-card
                  entity: binary_sensor.mouv_leane
                  name: Mouv
                  show_last_changed: true
                  template:
                    - base
                    - state_mouv
                    - state_unavailable
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Lumières et appareils" ]]]
            - type: horizontal-stack
              cards:
                - type: custom:button-card
                  entity: scene.grande_chambre_ambiance_normale
                  name: Jour
                  template:
                    - carte_badge
                  tap_action:
                    action: call-service
                    service: scene.turn_on
                    service_data:
                      entity_id: scene.grande_chambre_ambiance_normale
                - type: custom:button-card
                  entity: scene.grande_chambre_ambiance_nuit
                  name: Nuit
                  template:
                    - carte_badge
                  tap_action:
                    action: call-service
                    service: scene.turn_on
                    service_data:
                      entity_id: scene.grande_chambre_ambiance_nuit
                - type: custom:button-card
                  name: Tout éteindre
                  icon: mdi:lightbulb-multiple-off
                  template:
                    - carte_badge
                  tap_action:
                    action: call-service
                    service: light.turn_off
                    service_data:
                      entity_id: light.manon_et_leane
            - square: false
              columns: 2
              type: grid
              cards:
                - type: custom:button-card
                  entity: light.lustre_manon_et_leane
                  name: Lustre
                  show_state: false
                  show_last_changed: true
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  icon: null
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lustre_manon_et_leane
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                - type: custom:button-card
                  entity: light.chevet_manon
                  name: Chevet Manon
                  show_state: false
                  show_last_changed: true
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.chevet_manon
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                - type: custom:button-card
                  entity: light.lampe_de_bureau_manon
                  name: Bureau Manon
                  show_state: false
                  show_last_changed: true
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lampe_de_bureau_manon
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                - type: custom:button-card
                  entity: switch.arbre_lumineux
                  name: Arbre
                  show_state: false
                  show_last_changed: true
                  template:
                    - base
                    - base_moyenne
                    - state_lumiere
                    - state_unavailable
                - type: custom:button-card
                  entity: light.lampe_manon_et_leane
                  name: Lampe
                  show_state: false
                  show_last_changed: true
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lampe_manon_et_leane
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                - type: custom:button-card
                  entity: light.chevet_leane
                  name: Chevet Lélé
                  show_state: false
                  show_last_changed: true
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.chevet_leane
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                - type: custom:button-card
                  entity: switch.moustique_manon
                  name: Prise moustique
                  show_last_changed: true
                  template:
                    - base
                    - base_moyenne
                    - state_appareil
                    - state_unavailable
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Musique " ]]]
        - type: vertical-stack
          cards:
            - type: custom:mini-media-player
              entity: media_player.chambre_de_manon_et_leane
              artwork: material
              icon: mdi:speaker
            - square: false
              columns: 2
              type: grid
              cards:
                - type: custom:mini-media-player
                  entity: media_player.manon
                  icon: mdi:speaker
                  info: scroll
                  artwork: full-cover-fit
                  hide:
                    volume: false
                    source: true
                    power: false
                    name: false
                    icon: true
                    controls: false
                - type: custom:mini-media-player
                  entity: media_player.leane
                  icon: mdi:speaker
                  info: scroll
                  artwork: full-cover-fit
                  hide:
                    volume: false
                    source: true
                    power: false
                    name: false
                    icon: true
                    controls: false
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Réglages " ]]]
        - type: custom:button-card
          entity: automation.manon_leane_chambre_off_auto
          show_last_changed: true
          show_name: true
          template:
            - base
            - base_petite
            - state_appareil
            - state_unavailable
          name: OFF auto chambre
          icon: mdi:lightbulb-off-outline
        - type: custom:button-card
          entity: automation.manon_leane_chambre_allumage_auto
          show_last_changed: true
          show_name: true
          template:
            - base
            - base_petite
            - state_appareil
            - state_unavailable
          name: ON auto chambre
          icon: mdi:lightbulb-on-outline
        - square: false
          columns: 2
          type: grid
          cards:
            - square: false
              columns: 1
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - titre_section
                  name: |
                    [[[ return "Réglages Manon" ]]]
                - type: custom:button-card
                  entity: sensor.manon_reveil
                  show_last_changed: false
                  show_name: true
                  show_state: true
                  template:
                    - base
                    - base_petite
                    - state_unavailable
                  state:
                    - value: Grasse mat !
                      operator: '!='
                      styles:
                        card:
                          - background-color: var(--custom-card-color-blue)
                        img_cell:
                          - background-color: var(--custom-img-cell-color-blue)
                        icon:
                          - color: var(--custom-icon-color-blue)
                        name:
                          - color: var(--text_on)'
                  name: Réveil Manon
                  icon: mdi:alarm
                - type: custom:button-card
                  entity: automation.reveil_manon
                  show_last_changed: true
                  show_name: true
                  template:
                    - base
                    - base_petite
                    - state_appareil
                    - state_unavailable
                  name: Auto réveil Manon
                  icon: mdi:progress-clock
                - type: custom:button-card
                  entity: switch.manon_do_not_disturb_switch
                  show_last_changed: true
                  show_name: true
                  template:
                    - base
                    - base_petite
                    - state_appareil
                    - state_unavailable
                  name: Alexa Manon silence
            - square: false
              columns: 1
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - titre_section
                  name: |
                    [[[ return "Réglages Léane" ]]]
                - type: custom:button-card
                  entity: sensor.leane_reveil
                  show_last_changed: false
                  show_name: true
                  show_state: true
                  template:
                    - base
                    - base_petite
                    - state_appareil
                    - state_unavailable
                  state:
                    - value: Grasse mat !
                      operator: '!='
                      styles:
                        card:
                          - background-color: var(--custom-card-color-blue)
                        img_cell:
                          - background-color: var(--custom-img-cell-color-blue)
                        icon:
                          - color: var(--custom-icon-color-blue)
                        name:
                          - color: var(--text_on)'
                  name: Réveil Léane
                  icon: mdi:alarm
                - type: custom:button-card
                  entity: automation.reveil_leane
                  show_last_changed: true
                  show_name: true
                  template:
                    - base
                    - base_petite
                    - state_appareil
                    - state_unavailable
                  name: Auto réveil Léane
                  icon: mdi:progress-clock
                - type: custom:button-card
                  entity: switch.leane_do_not_disturb_switch
                  show_last_changed: true
                  show_name: true
                  template:
                    - base
                    - base_petite
                    - state_appareil
                    - state_unavailable
                  name: Alexa Léane silence
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Relevés " ]]]
        - type: custom:apexcharts-card
          header:
            show: true
            title: Chambre Manon et Léane
            show_states: true
            colorize_states: true
          experimental:
            brush: true
          graph_span: 3d
          brush:
            selection_span: 24h
          apex_config:
            grid:
              show: true
            legend:
              fontSize: 12px
              height: 40
            dataLabels:
              enabled: false
            stroke:
              width: 3
              curve: smooth
            fill:
              type: gradient
              gradient:
                type: vertical
                shadeIntensity: 0.8
                inverseColors: false
                opacityFrom: 0.5
                opacityTo: 0
                stops:
                  - - 0
                    - 50
                    - 100
          yaxis:
            - id: first
              decimals: 1
              apex_config:
                tickAmount: 4
            - id: second
              opposite: true
              decimals: 0
              apex_config:
                tickAmount: 4
          all_series_config:
            stroke_width: 2
          series:
            - entity: sensor.temp_manon
              yaxis_id: first
              name: température
              unit: °C
              color: orange
              type: area
              show:
                extremas: true
                in_brush: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
            - entity: sensor.hum_manon
              yaxis_id: second
              name: humidité
              unit: '%'
              color: dodgerblue
              type: area
              show:
                extremas: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
- theme: Backend-selected
  path: Nina
  subview: true
  title: Nina
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  icon: mdi:owl
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Capteurs" ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  entity: sensor.temp_nina
                  name: temp
                  template:
                    - carte_thermo
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.temp_nina
                - type: custom:button-card
                  entity: sensor.hum_nina
                  name: hum
                  template:
                    - carte_humidite
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.hum_nina
                - type: custom:button-card
                  entity: sensor.mouv_nina_batterie
                  name: lum
                  template:
                    - carte_lum
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.mouv_nina_batterie
            - square: false
              columns: 1
              type: grid
              cards:
                - type: custom:button-card
                  entity: binary_sensor.mouv_tom
                  name: Mouv
                  show_last_changed: true
                  template:
                    - base
                    - state_mouv
                    - state_unavailable
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Lumières et appreils" ]]]
            - type: horizontal-stack
              cards:
                - type: custom:button-card
                  entity: scene.nina_ambiance_normale
                  name: Jour
                  template:
                    - carte_badge
                  tap_action:
                    action: call-service
                    service: scene.turn_on
                    service_data:
                      entity_id: scene.nina_ambiance_normale
                - type: custom:button-card
                  entity: scene.nina_ambiance_nuit
                  name: Nuit
                  template:
                    - carte_badge
                  tap_action:
                    action: call-service
                    service: scene.turn_on
                    service_data:
                      entity_id: scene.nina_ambiance_nuit
                - type: custom:button-card
                  name: 'Tout éteindre '
                  icon: mdi:lightbulb-multiple-off
                  template:
                    - carte_badge
                  tap_action:
                    action: call-service
                    service: light.turn_on
                    service_data:
                      entity_id: light.nina
            - square: false
              columns: 2
              type: grid
              cards:
                - type: custom:button-card
                  entity: light.lampe_de_bureau_nina
                  name: Bureau
                  show_state: false
                  show_last_changed: true
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lampe_de_bureau_nina
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                - type: custom:button-card
                  entity: light.lustre_nina
                  name: Lustre
                  show_state: false
                  show_last_changed: true
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lustre_nina
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                - type: custom:button-card
                  entity: light.chevet_nina
                  name: Chevet
                  show_state: false
                  show_last_changed: true
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.chevet_nina
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                - type: custom:button-card
                  entity: light.lampadaire_nina
                  name: Lampadaire
                  show_state: false
                  show_last_changed: true
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lampadaire_nina
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                - type: custom:button-card
                  entity: switch.moustique_nina
                  name: Moustique
                  show_state: false
                  show_last_changed: true
                  template:
                    - base
                    - base_moyenne
                    - state_appareil
                    - state_unavailable
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Musique" ]]]
        - type: custom:mini-media-player
          entity: media_player.nina
          artwork: material
          icon: mdi:speaker
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Réglages" ]]]
        - square: false
          columns: 2
          type: grid
          cards:
            - type: custom:button-card
              entity: sensor.nina_reveil
              show_state: true
              show_last_changed: false
              template:
                - base
                - base_petite
                - state_appareil
                - state_unavailable
              state:
                - value: Grasse mat !
                  operator: '!='
                  styles:
                    card:
                      - background-color: var(--custom-card-color-blue)
                    img_cell:
                      - background-color: var(--custom-img-cell-color-blue)
                    icon:
                      - color: var(--custom-icon-color-blue)
                    name:
                      - color: var(--text_on)'
              name: Réveil
              icon: mdi:alarm
            - type: custom:button-card
              entity: automation.reveil_nina
              show_state: false
              show_last_changed: true
              template:
                - base
                - base_petite
                - state_appareil
                - state_unavailable
              name: Auto réveil
              icon: mdi:progress-clock
            - type: custom:button-card
              entity: automation.nina_chambre_allumage_auto
              show_state: false
              show_last_changed: true
              template:
                - base
                - base_petite
                - state_appareil
                - state_unavailable
              name: ON auto
              icon: mdi:lightbulb-on-outline
            - type: custom:button-card
              entity: automation.nina_chambre_off_auto
              show_state: false
              show_last_changed: true
              template:
                - base
                - base_petite
                - state_appareil
                - state_unavailable
              name: OFF auto
              icon: mdi:lightbulb-group-off
            - type: custom:button-card
              entity: switch.nina_do_not_disturb_switch
              show_last_changed: true
              show_name: true
              template:
                - base
                - base_petite
                - state_appareil
                - state_unavailable
              name: Alexa silence
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Relevés" ]]]
        - type: custom:apexcharts-card
          header:
            show: true
            title: Chambre Nina
            show_states: true
            colorize_states: true
          experimental:
            brush: true
          graph_span: 3d
          brush:
            selection_span: 24h
          apex_config:
            grid:
              show: true
            legend:
              fontSize: 12px
              height: 40
            dataLabels:
              enabled: false
            stroke:
              width: 3
              curve: smooth
            fill:
              type: gradient
              gradient:
                type: vertical
                shadeIntensity: 0.8
                inverseColors: false
                opacityFrom: 0.5
                opacityTo: 0
                stops:
                  - - 0
                    - 50
                    - 100
          yaxis:
            - id: first
              decimals: 1
              apex_config:
                tickAmount: 4
            - id: second
              opposite: true
              decimals: 0
              apex_config:
                tickAmount: 4
          all_series_config:
            stroke_width: 2
          series:
            - entity: sensor.temp_nina
              yaxis_id: first
              name: température
              unit: °C
              color: orange
              type: area
              show:
                extremas: true
                in_brush: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
            - entity: sensor.hum_nina
              yaxis_id: second
              name: humidité
              unit: '%'
              color: dodgerblue
              type: area
              show:
                extremas: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
- theme: Backend-selected
  title: Escalier
  path: Escalier
  subview: true
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  icon: mdi:stairs
  badges: []
  cards:
    - type: vertical-stack
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Capteurs" ]]]
        - type: horizontal-stack
          cards:
            - square: false
              columns: 2
              type: grid
              cards:
                - type: custom:button-card
                  entity: sensor.mouv_palier_lum
                  name: lum
                  template:
                    - carte_lum
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.mouv_palier_lum
            - square: false
              columns: 1
              type: grid
              cards:
                - type: custom:button-card
                  entity: binary_sensor.mouv_escalier
                  name: Escalier
                  show_state: false
                  show_last_changed: true
                  template:
                    - base
                    - state_mouv
                    - state_unavailable
                - type: custom:button-card
                  entity: binary_sensor.mouv_palier
                  name: Palier
                  show_state: false
                  show_last_changed: true
                  template:
                    - base
                    - state_mouv
                    - state_unavailable
        - type: custom:button-card
          entity: light.escaliers
          template:
            - titre_section
          name: |
            [[[ return "Lumières" ]]]
        - square: false
          columns: 2
          type: grid
          cards:
            - type: custom:button-card
              entity: light.escalier
              show_last_changed: true
              template:
                - base
                - base_moyenne
                - jauge_lumiere
                - state_lumiere
                - state_unavailable
              custom_fields:
                lum:
                  card:
                    type: custom:my-slider
                    entity: light.escalier
                    radius: 5px
                    height: 20px
                    mainSliderColor: var(--button-card-light-color-no-temperature)
                    thumbHorizontalPadding: 0px
                    thumbVerticalPadding: 0px
                    thumbWidth: 2px
                    minSet: 1
            - type: custom:button-card
              entity: light.palier
              show_last_changed: true
              template:
                - base
                - base_moyenne
                - jauge_lumiere
                - state_lumiere
                - state_unavailable
              custom_fields:
                lum:
                  card:
                    type: custom:my-slider
                    entity: light.palier
                    radius: 5px
                    height: 20px
                    mainSliderColor: var(--button-card-light-color-no-temperature)
                    thumbHorizontalPadding: 0px
                    thumbVerticalPadding: 0px
                    thumbWidth: 2px
                    minSet: 1
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Réglages" ]]]
        - type: custom:button-card
          entity: automation.palier_allume_sur_mouvement
          name: ON auto
          icon: mdi:lightbulb-on-outline
          show_state: false
          show_last_changed: true
          template:
            - base
            - state_appareil
            - state_unavailable
- theme: Backend-selected
  subview: true
  title: SDB
  path: SDB
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  icon: mdi:shower-head
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Appareils" ]]]
        - square: false
          columns: 4
          type: grid
          cards:
            - type: custom:button-card
              entity: sensor.temp_salle_de_bain
              name: temp
              template:
                - carte_thermo
              styles:
                name:
                  - font-size: 11px
                state:
                  - font-size: 13px
              custom_fields:
                gauge:
                  card:
                    entity: sensor.temp_salle_de_bain
            - type: custom:button-card
              entity: sensor.hum_salle_de_bain
              name: hum
              template:
                - carte_humidite
              styles:
                name:
                  - font-size: 11px
                state:
                  - font-size: 13px
              custom_fields:
                gauge:
                  card:
                    entity: sensor.hum_salle_de_bain
        - square: false
          columns: 1
          type: grid
          cards:
            - entity: switch.radiateur
              name: Chauffage
              type: custom:button-card
              show_state: false
              show_last_changed: true
              template:
                - base
                - base_moyenne
                - state_appareil
                - state_unavailable
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Musique" ]]]
        - type: custom:mini-media-player
          entity: media_player.la_salle_de_bain
          artwork: material
          icon: mdi:speaker
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Relevés" ]]]
        - type: custom:apexcharts-card
          header:
            show: true
            title: Salle de bain
            show_states: true
            colorize_states: true
          experimental:
            brush: true
          graph_span: 3d
          brush:
            selection_span: 24h
          apex_config:
            grid:
              show: true
            legend:
              fontSize: 12px
              height: 40
            dataLabels:
              enabled: false
            stroke:
              width: 3
              curve: smooth
            fill:
              type: gradient
              gradient:
                type: vertical
                shadeIntensity: 0.8
                inverseColors: false
                opacityFrom: 0.5
                opacityTo: 0
                stops:
                  - - 0
                    - 50
                    - 100
          yaxis:
            - id: first
              decimals: 1
              apex_config:
                tickAmount: 4
            - id: second
              opposite: true
              decimals: 0
              apex_config:
                tickAmount: 4
            - id: third
              opposite: true
              decimals: 0
              apex_config:
                tickAmount: 4
          all_series_config:
            stroke_width: 2
          series:
            - entity: sensor.temp_salle_de_bain
              yaxis_id: first
              name: température
              unit: °C
              color: orange
              type: area
              show:
                extremas: true
                in_brush: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
            - entity: sensor.hum_salle_de_bain
              yaxis_id: second
              name: humidité
              unit: '%'
              color: dodgerblue
              type: area
              show:
                extremas: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
            - entity: sensor.radiateur_active_power
              yaxis_id: third
              name: conso
              unit: W
              color: red
              type: column
              show:
                extremas: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
- theme: Backend-selected
  title: Entrée
  subview: true
  path: Entrée
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  icon: mdi:spotlight-beam
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Capteurs" ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  entity: sensor.temp_couloir_rdc
                  name: temp
                  template:
                    - carte_thermo
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.temp_couloir_rdc
                - type: custom:button-card
                  entity: sensor.hum_couloir_rdc
                  name: hum
                  template:
                    - carte_humidite
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.hum_couloir_rdc
            - square: false
              columns: 2
              type: grid
              cards:
                - type: custom:button-card
                  template:
                    - base
                    - state_porte
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.porte_entree
                - type: custom:button-card
                  template:
                    - base
                    - state_porte
                    - state_unavailable
                  show_last_changed: true
                  entity: binary_sensor.mouv_couloir
                  name: Couloir
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Lumières" ]]]
            - square: false
              columns: 2
              type: grid
              cards:
                - type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.entree
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                  entity: light.entree
                - type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.couloir
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                  entity: light.couloir
                - type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.aqara_hub_54e1
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                  entity: light.aqara_hub_54e1
                  show_entity_picture: false
                - type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.veranda
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                  entity: light.veranda
                  show_entity_picture: true
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Relevés" ]]]
        - type: custom:apexcharts-card
          header:
            show: true
            title: Couloir
            show_states: true
            colorize_states: true
          experimental:
            brush: true
          graph_span: 3d
          brush:
            selection_span: 24h
          apex_config:
            grid:
              show: true
            legend:
              fontSize: 12px
              height: 40
            dataLabels:
              enabled: false
            stroke:
              width: 3
              curve: smooth
            fill:
              type: gradient
              gradient:
                type: vertical
                shadeIntensity: 0.8
                inverseColors: false
                opacityFrom: 0.5
                opacityTo: 0
                stops:
                  - - 0
                    - 50
                    - 100
          yaxis:
            - id: first
              decimals: 1
              apex_config:
                tickAmount: 4
            - id: second
              opposite: true
              decimals: 0
              apex_config:
                tickAmount: 4
          all_series_config:
            stroke_width: 2
          series:
            - entity: sensor.temp_couloir_rdc
              yaxis_id: first
              name: température
              unit: °C
              color: orange
              type: area
              show:
                extremas: true
                in_brush: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
            - entity: sensor.hum_couloir_rdc
              yaxis_id: second
              name: humidité
              unit: '%'
              color: dodgerblue
              type: area
              show:
                extremas: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
- theme: Backend-selected
  title: Lavabo
  subview: true
  path: Lavabo
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  icon: mdi:faucet
  badges: []
  cards:
    - type: vertical-stack
      cards:
        - square: false
          columns: 1
          type: grid
          cards:
            - type: custom:button-card
              template:
                - base
                - state_mouv
                - state_unavailable
              show_last_changed: true
              entity: binary_sensor.mouv_salle_d_eau
              name: Lavabo
        - type: custom:button-card
          show_last_changed: true
          show_state: false
          template:
            - base
            - base_moyenne
            - jauge_lumiere
            - state_lumiere
            - state_unavailable
          custom_fields:
            lum:
              card:
                type: custom:my-slider
                entity: light.lavabo
                radius: 5px
                height: 20px
                mainSliderColor: var(--button-card-light-color-no-temperature)
                thumbHorizontalPadding: 0px
                thumbVerticalPadding: 0px
                thumbWidth: 2px
                minSet: 1
          entity: light.lavabo
        - type: grid
          square: false
          columns: 2
          cards:
            - type: custom:button-card
              show_last_changed: true
              show_state: false
              template:
                - base
                - base_moyenne
                - jauge_lumiere
                - state_lumiere
                - state_unavailable
              custom_fields:
                lum:
                  card:
                    type: custom:my-slider
                    entity: light.wc_gauche
                    radius: 5px
                    height: 20px
                    mainSliderColor: var(--button-card-light-color-no-temperature)
                    thumbHorizontalPadding: 0px
                    thumbVerticalPadding: 0px
                    thumbWidth: 2px
                    minSet: 1
              entity: light.wc_gauche
            - type: custom:button-card
              show_last_changed: true
              show_state: false
              template:
                - base
                - base_moyenne
                - jauge_lumiere
                - state_lumiere
                - state_unavailable
              custom_fields:
                lum:
                  card:
                    type: custom:my-slider
                    entity: light.wc_droit
                    radius: 5px
                    height: 20px
                    mainSliderColor: var(--button-card-light-color-no-temperature)
                    thumbHorizontalPadding: 0px
                    thumbVerticalPadding: 0px
                    thumbWidth: 2px
                    minSet: 1
              entity: light.wc_droit
              color: null
- theme: Backend-selected
  title: Parents
  path: Parents
  subview: true
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  icon: mdi:bed-king
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Capteurs" ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  entity: sensor.temp_parents
                  name: temp
                  template:
                    - carte_thermo
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.temp_parents
                - type: custom:button-card
                  entity: sensor.hum_parents
                  name: hum
                  template:
                    - carte_humidite
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.hum_parents
            - type: custom:button-card
              template:
                - base
                - state_porte
                - state_unavailable
              show_last_changed: true
              entity: binary_sensor.porte_chambre_parents
              name: Porte-fenêtre
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Ambiances lumineuses " ]]]
            - type: horizontal-stack
              cards:
                - type: custom:button-card
                  entity: scene.chambre_parents_ambiance_normale
                  name: Jour
                  template:
                    - carte_badge
                  show_name: true
                  tap_action:
                    action: call-service
                    service: scene.turn_on
                    service_data:
                      entity_id: scene.chambre_parents_ambiance_normale
                - type: custom:button-card
                  entity: script.ambiance_cine_chevet_parents
                  name: TV
                  template:
                    - carte_badge
                  show_name: true
                  tap_action:
                    action: call-service
                    service: script.turn_on
                    service_data:
                      entity_id: script.ambiance_cine_chevet_parents
                - type: custom:button-card
                  name: 'Tout éteindre '
                  icon: mdi:lightbulb-multiple-off
                  template:
                    - carte_badge
                  show_name: true
                  tap_action:
                    action: call-service
                    service: light.turn_off
                    service_data:
                      entity_id: light.parents
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "lumières et prises" ]]]
            - square: false
              columns: 2
              type: grid
              cards:
                - type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.lustre_parents
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                  entity: light.lustre_parents
                  name: Lustre
                - type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.chevet
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                  entity: light.chevet
                  name: Chevet
                - type: custom:button-card
                  template:
                    - base
                    - base_moyenne
                    - state_tv
                    - state_unavailable
                  show_last_changed: true
                  entity: switch.tele_des_parents
                  icon: mdi:youtube-tv
                  name: Prise TV
                - type: custom:button-card
                  template:
                    - base
                    - base_moyenne
                    - state_appareil
                    - state_unavailable
                  show_last_changed: true
                  entity: switch.moustique_parents
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Multimédia  " ]]]
        - square: false
          columns: 1
          type: grid
          cards:
            - type: custom:button-card
              entity: switch.tele_des_parents
              name: TV Parents
              icon: |
                [[[
                  if (states['sensor.tv_parents_source'].state == "Netflix")
                    return "phu:netflix";
                  if (states['sensor.tv_parents_source'].state == "Plex")
                    return "mdi:plex";
                  if (states['sensor.tv_parents_source'].state == "YouTube (FireTV)")
                    return "mdi:youtube";
                  if (states['sensor.tv_parents_source'].state == "DD Externe")
                    return "mdi:movie-open";
                  return "mdi:television";
                ]]]
              template:
                - base
                - carte_tv
                - state_tv
                - state_unavailable
              label: |
                [[[
                  if ( entity.state  == 'on')
                    return states['sensor.tv_parents_source'].state;
                  if ( entity.state  == 'off')
                    return 'Éteint'
                  return ''
                ]]]
              styles:
                custom_fields:
                  jauge-cercle:
                    - width: 15%
                    - left: 85%
              custom_fields:
                jauge-cercle:
                  card:
                    type: conditional
                    conditions:
                      - entity: switch.tele_des_parents
                        state: 'off'
                    card:
                      type: custom:hatc-gauge-card
                      entity: sensor.tv_parents_vol
                      title:
                        name: false
                        icon: false
                        text-align: center
                        text-color: red
                        font-size: 28px
                      gauge:
                        icon: false
                        font-size: 11px
                        text-color: darkgrey
                        max_value: 100
                        friendly_name: false
                        unit_of_measurement: false
                        severity:
                          - color: darkgrey
                          - color: rgb(180, 70, 70)
                            from: 100
                            to: 100
                bouton2:
                  card:
                    type: horizontal-stack
                    cards:
                      - type: custom:button-card
                        template:
                          - carte_bouton
                          - carte_bouton_state_tv_parents
                        icon: |
                          [[[
                            if (states['switch.tele_des_parents'].state == 'on')
                              return "mdi:television"
                            return "mdi:speaker-bluetooth"
                          ]]]
                      - type: custom:button-card
                        entity: script.tv_parents_menu
                        template:
                          - carte_bouton
                          - carte_bouton_state_tv_parents
                      - type: custom:button-card
                        entity: script.tv_parents_gauche
                        template:
                          - carte_bouton
                          - carte_bouton_state_tv_parents
                bouton:
                  card:
                    type: horizontal-stack
                    cards:
                      - type: custom:button-card
                        entity: script.tv_parents_droite
                        template:
                          - carte_bouton
                          - carte_bouton_state_tv_parents
                      - type: custom:button-card
                        entity: script.tv_parents_bas
                        template:
                          - carte_bouton
                          - carte_bouton_state_tv_parents
                      - type: custom:button-card
                        entity: script.tv_parents_haut
                        template:
                          - carte_bouton
                          - carte_bouton_state_tv_parents
              double_tap_action:
                action: toggle
              tap_action:
                action: more-info
            - type: custom:mini-media-player
              entity: media_player.cube_tv
              icon: mdi:speaker
              info: scroll
              hide:
                volume: false
                source: true
                power: false
                name: false
                icon: true
                controls: false
              artwork: cover
              source: full
              group: false
              volume_stateless: false
              toggle_power: true
            - type: custom:mini-media-player
              entity: media_player.chambre_des_parents
              icon: mdi:speaker
              info: scroll
              artwork: material
              hide:
                volume: false
                source: true
                power: false
                name: false
                icon: true
                controls: false
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Relevés" ]]]
        - type: custom:apexcharts-card
          header:
            show: true
            title: Chambre parents
            show_states: true
            colorize_states: true
          experimental:
            brush: true
          graph_span: 3d
          brush:
            selection_span: 24h
          apex_config:
            grid:
              show: true
            legend:
              fontSize: 12px
              height: 40
            dataLabels:
              enabled: false
            stroke:
              width: 3
              curve: smooth
            fill:
              type: gradient
              gradient:
                type: vertical
                shadeIntensity: 0.8
                inverseColors: false
                opacityFrom: 0.5
                opacityTo: 0
                stops:
                  - - 0
                    - 50
                    - 100
          yaxis:
            - id: first
              decimals: 1
              apex_config:
                tickAmount: 4
            - id: second
              opposite: true
              decimals: 0
              apex_config:
                tickAmount: 4
          all_series_config:
            stroke_width: 2
          series:
            - entity: sensor.temp_parents
              yaxis_id: first
              name: température
              unit: °C
              color: orange
              type: area
              show:
                extremas: true
                in_brush: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
            - entity: sensor.hum_parents
              yaxis_id: second
              name: humidité
              unit: '%'
              color: dodgerblue
              type: area
              show:
                extremas: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
- theme: Backend-selected
  subview: true
  title: Garage
  path: Garage
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  icon: mdi:garage-open-variant
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Capteurs" ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  entity: sensor.sonde_garage_temperature
                  name: temp
                  template:
                    - carte_thermo
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.sonde_garage_temperature
                - type: custom:button-card
                  entity: sensor.sonde_garage_humidite
                  name: hum
                  template:
                    - carte_humidite
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.sonde_garage_humidite
                - type: custom:button-card
                  entity: sensor.sonde_garage_pression
                  name: pression
                  template:
                    - carte_jauge
                  styles:
                    name:
                      - font-size: 11px
                    state:
                      - font-size: 13px
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.sonde_garage_pression
                        gauge:
                          max_value: 1100
                          severity:
                            - color: rgb(222, 222, 176)
                            - color: rgb(176, 196, 222)
                              from: 0
                              to: 1010
                            - color: rgb(180, 70, 70)
                              from: 1020
                              to: 1100
            - square: false
              columns: 3
              type: grid
              cards:
                - type: custom:button-card
                  entity: binary_sensor.porte_cagibi
                  name: Cagibi
                  show_state: false
                  show_last_changed: true
                  template:
                    - carte_badge
                    - state_porte
                    - state_unavailable
                - type: custom:button-card
                  entity: binary_sensor.porte_garage
                  name: Garage
                  show_state: false
                  show_last_changed: true
                  template:
                    - carte_badge
                    - state_porte
                    - state_unavailable
                - type: custom:button-card
                  entity: binary_sensor.mouv_garage
                  name: Mouvements
                  show_state: false
                  show_last_changed: true
                  template:
                    - carte_badge
                    - state_mouv
                    - state_unavailable
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Appareils" ]]]
            - square: false
              columns: 2
              type: grid
              cards:
                - entity: light.cagibi
                  type: custom:button-card
                  show_last_changed: true
                  show_state: false
                  template:
                    - base
                    - base_moyenne
                    - jauge_lumiere
                    - state_lumiere
                    - state_unavailable
                  custom_fields:
                    lum:
                      card:
                        type: custom:my-slider
                        entity: light.cagibi
                        radius: 5px
                        height: 20px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
                - type: custom:button-card
                  entity: automation.cagibi_eclairage_off
                  name: OFF auto
                  icon: mdi:lightbulb-off-outline
                  show_state: true
                  show_last_changed: true
                  template:
                    - base
                    - base_moyenne
                    - state_appareil
                    - state_unavailable
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Musique" ]]]
            - type: custom:mini-media-player
              entity: media_player.le_garage
              artwork: material
              icon: mdi:speaker
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Caméra" ]]]
            - camera_view: live
              type: picture-glance
              title: Garage
              entities:
                - entity: alarm_control_panel.camera_g2hpro
                - entity: binary_sensor.mouv_camera_g2hpro
              camera_image: camera.camera_g2hpro
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Relevés" ]]]
        - type: custom:apexcharts-card
          header:
            show: true
            title: Garage
            show_states: true
            colorize_states: true
          experimental:
            brush: true
          graph_span: 3d
          brush:
            selection_span: 24h
          apex_config:
            grid:
              show: true
            legend:
              fontSize: 12px
              height: 40
            dataLabels:
              enabled: false
            stroke:
              width: 3
              curve: smooth
            fill:
              type: gradient
              gradient:
                type: vertical
                shadeIntensity: 0.8
                inverseColors: false
                opacityFrom: 0.5
                opacityTo: 0
                stops:
                  - - 0
                    - 50
                    - 100
          yaxis:
            - id: first
              decimals: 1
              apex_config:
                tickAmount: 4
            - id: second
              opposite: true
              decimals: 0
              apex_config:
                tickAmount: 4
          all_series_config:
            stroke_width: 2
          series:
            - entity: sensor.sonde_garage_temperature
              yaxis_id: first
              name: température
              unit: °C
              color: orange
              type: area
              show:
                extremas: true
                in_brush: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
            - entity: sensor.sonde_garage_humidite
              yaxis_id: second
              name: humidité
              unit: '%'
              color: dodgerblue
              type: area
              show:
                extremas: true
              float_precision: 1
              group_by:
                duration: 10min
                func: max
- theme: Backend-selected
  subview: true
  title: RPI
  path: RPI
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  icon: mdi:raspberry-pi
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 300
      cards:
        - square: false
          columns: 3
          type: grid
          cards:
            - type: custom:button-card
              entity: sensor.cpu_temperature
              name: CPU
              template:
                - carte_jauge
                - state_unavailable
              show_last_changed: true
              styles:
                label:
                  - font-size: 10px
              custom_fields:
                gauge:
                  card:
                    entity: sensor.cpu_temperature
                    gauge:
                      max_value: 100
                      severity:
                        - color: darkgrey
                        - color: var(--custom-icon-color-blue)
                          from: 0
                          to: 30
                        - color: yellow
                          from: 50
                          to: 60
                        - color: orange
                          from: 60.1
                          to: 70
                        - color: red
                          from: 70.1
                          to: 100
            - type: custom:button-card
              entity: sensor.processor_use_percent
              name: Processeur
              template:
                - carte_jauge
                - state_unavailable
              show_last_changed: true
              styles:
                label:
                  - font-size: 10px
              custom_fields:
                gauge:
                  card:
                    entity: sensor.processor_use_percent
                    gauge:
                      max_value: 100
                      severity:
                        - color: darkgrey
                        - color: var(--custom-icon-color-blue)
                          from: 0
                          to: 10
                        - color: yellow
                          from: 50
                          to: 60
                        - color: orange
                          from: 60.1
                          to: 70
                        - color: red
                          from: 70.1
                          to: 100
            - type: custom:button-card
              entity: sensor.memory_use_percent
              name: Mémoire
              template:
                - carte_jauge
                - state_unavailable
              show_last_changed: true
              styles:
                label:
                  - font-size: 10px
              custom_fields:
                gauge:
                  card:
                    entity: sensor.memory_use_percent
                    gauge:
                      max_value: 100
                      severity:
                        - color: darkgrey
                        - color: var(--custom-icon-color-blue)
                          from: 0
                          to: 10
                        - color: yellow
                          from: 50
                          to: 60
                        - color: orange
                          from: 60.1
                          to: 70
                        - color: red
                          from: 70.1
                          to: 100
            - type: custom:button-card
              entity: sensor.disk_use_percent_home
              name: SSD
              template:
                - carte_jauge
                - state_unavailable
              show_last_changed: true
              styles:
                label:
                  - font-size: 10px
              custom_fields:
                gauge:
                  card:
                    entity: sensor.disk_use_percent_home
                    gauge:
                      max_value: 100
                      severity:
                        - color: darkgrey
                        - color: var(--custom-icon-color-blue)
                          from: 0
                          to: 5
                        - color: yellow
                          from: 50
                          to: 60
                        - color: orange
                          from: 60.1
                          to: 70
                        - color: red
                          from: 70.1
                          to: 100
            - type: custom:button-card
              entity: binary_sensor.rpi_power_status
              name: Alim RPI
              template:
                - carte_jauge
                - state_unavailable
              show_last_changed: true
              styles:
                label:
                  - font-size: 10px
              custom_fields:
                gauge:
                  card:
                    entity: binary_sensor.rpi_power_status
                    gauge:
                      severity:
                        - color: darkgrey
            - type: custom:button-card
              entity: binary_sensor.wan_status
              name: Livebox
              template:
                - carte_jauge
                - state_unavailable
              show_last_changed: true
              styles:
                label:
                  - font-size: 10px
              custom_fields:
                gauge:
                  card:
                    entity: binary_sensor.wan_status
                    gauge:
                      severity:
                        - color: darkgrey
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 300
      cards:
        - type: custom:apexcharts-card
          header:
            show: true
            title: Raspberry
            show_states: true
            colorize_states: true
          graph_span: 3d
          now:
            show: true
            color: red
            label: Maintenant
          apex_config:
            grid:
              show: false
            legend:
              fontSize: 12px
              height: 40
            dataLabels:
              enabled: false
            stroke:
              width: 1
              curve: smooth
            fill:
              type: gradient
              gradient:
                type: vertical
                shadeIntensity: 0.8
                inverseColors: false
                opacityFrom: 0.5
                opacityTo: 0
                stops:
                  - - 0
                    - 50
                    - 100
          yaxis:
            - id: first
              max: ~100
              min: ~0
              decimals: 1
              apex_config:
                tickAmount: 4
            - id: second
              opposite: true
              min: ~0
              decimals: 1
              apex_config:
                tickAmount: 4
          all_series_config:
            stroke_width: 2
          series:
            - entity: sensor.cpu_temperature
              name: Température
              yaxis_id: first
              unit: '%'
              color: tomato
              type: area
              fill_raw: last
              show:
                extremas: true
                in_brush: false
                header_color_threshold: true
                legend_value: false
              float_precision: 1
              group_by:
                duration: 10min
                func: last
            - entity: sensor.processor_use_percent
              name: Processeur
              yaxis_id: second
              color: rgb(70, 180, 103)
              type: area
              fill_raw: last
              show:
                extremas: true
                in_brush: false
                header_color_threshold: true
                legend_value: false
              group_by:
                duration: 10min
                func: last
            - entity: sensor.memory_use_percent
              name: Mémoire
              yaxis_id: second
              color: dodgerblue
              type: area
              fill_raw: last
              show:
                extremas: true
                in_brush: false
                header_color_threshold: true
                legend_value: false
              float_precision: 1
              group_by:
                duration: 10min
                func: last
- theme: Backend-selected
  subview: true
  title: Plantes
  path: Plantes
  layout:
    width: 350
    max_cols: 4
  type: custom:horizontal-layout
  icon: mdi:flower
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "🌿 Dracaena " ]]]
        - square: false
          columns: 4
          type: grid
          cards:
            - type: custom:bar-card
              name: ''
              entity_row: true
              direction: up
              unit_of_measurement: null
              positions:
                value: outside
                name: 'off'
                indicator: inside
                icon: inside
              max: 50
              height: 92
              width: 70px
              icon: mdi:thermometer
              severity:
                - color: rgb(176, 196, 222)
                  from: 0
                  to: 8.9
                - color: rgb(70, 130, 180)
                  from: 9
                  to: 36
                - color: rgb(180, 70, 70)
                  from: 36.1
                  to: 50
              style: |-
                bar-card-background {
                  background-color: "#223548";
                }
                bar-card-value {
                  font-size: 15px;
                  font-weight: bold;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                }
                bar-card-name {
                  margin-top: 20px;
                  font-size: 14px;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                  font-weight: bold;
                }
                bar-card-iconbar {
                  color: rgb(225,225,225);
                }
                bar-card-indicator {
                  color: rgb(225,225,225);
                }
              entities:
                - entity: sensor.plante_temp_dracaena
            - type: custom:bar-card
              name: ''
              entity_row: true
              direction: up
              unit_of_measurement: null
              positions:
                value: outside
                name: 'off'
                indicator: inside
                icon: inside
              max: 100
              height: 92
              width: 70px
              icon: mdi:water
              severity:
                - color: rgb(180, 70, 70)
                  from: 0
                  to: 8.9
                - color: rgb(70, 130, 180)
                  from: 9
                  to: 41
                - color: rgb(180, 70, 70)
                  from: 41.1
                  to: 100
              style: |-
                bar-card-background {
                  background-color: "#223548";
                }
                bar-card-value {
                  font-size: 15px;
                  font-weight: bold;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                }
                bar-card-name {
                  margin-top: 20px;
                  font-size: 14px;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                  font-weight: bold;
                }
                bar-card-iconbar {
                  color: rgb(225,225,225);
                }
                bar-card-indicator {
                  color: rgb(225,225,225);
                }
              entities:
                - entity: sensor.plante_hum_dracaena
            - type: custom:bar-card
              name: ''
              entity_row: true
              direction: up
              unit_of_measurement: null
              positions:
                value: outside
                name: 'off'
                indicator: inside
                icon: inside
              max: 5000
              height: 92
              width: 70px
              icon: mdi:brightness-5
              severity:
                - color: rgb(180, 70, 70)
                  from: 0
                  to: 1999
                - color: rrgb(70, 130, 180)
                  from: 2000
                  to: 5000
                - color: rgb(180, 70, 70)
                  from: 5001
                  to: 20000
              style: |-
                bar-card-background {
                  background-color: "#223548";
                }
                bar-card-value {
                  font-size: 15px;
                  font-weight: bold;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                }
                bar-card-name {
                  margin-top: 20px;
                  font-size: 14px;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                  font-weight: bold;
                }
                bar-card-iconbar {
                  color: rgb(225,225,225);
                }
                bar-card-indicator {
                  color: rgb(225,225,225);
                }
              entities:
                - entity: sensor.plante_lum_dracaena
            - type: custom:bar-card
              name: ''
              entity_row: true
              direction: up
              unit_of_measurement: null
              positions:
                value: outside
                name: 'off'
                indicator: inside
                icon: inside
              max: 1500
              height: 92
              width: 70px
              severity:
                - color: rgb(180, 70, 70)
                  from: 0
                  to: 199
                - color: rgb(70, 130, 180)
                  from: 200
                  to: 1500
                - color: rgb(180, 70, 70)
                  from: 1501
                  to: 3000
              style: |-
                bar-card-background {
                  background-color: "#223548";
                }
                bar-card-value {
                  font-size: 15px;
                  font-weight: bold;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                }
                bar-card-name {
                  margin-top: 20px;
                  font-size: 14px;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                  font-weight: bold;
                }
                bar-card-iconbar {
                  color: rgb(225,225,225);
                }
                bar-card-indicator {
                  color: rgb(225,225,225);
                }
              entities:
                - entity: sensor.plante_fertilite_dracaena
        - type: custom:apexcharts-card
          header:
            show: true
            show_states: true
            colorize_states: true
          graph_span: 7d
          apex_config:
            grid:
              show: false
            legend:
              fontSize: 12px
              height: 40
            dataLabels:
              enabled: false
            stroke:
              width: 3
              curve: smooth
            fill:
              type: gradient
              gradient:
                type: vertical
                shadeIntensity: 0.8
                inverseColors: false
                opacityFrom: 0.5
                opacityTo: 0
                stops:
                  - - 0
                    - 50
                    - 100
          yaxis:
            - id: first
              max: ~100
              min: ~0
              decimals: 1
              apex_config:
                tickAmount: 4
            - id: second
              opposite: true
              min: ~0
              decimals: 1
              apex_config:
                tickAmount: 4
          all_series_config:
            stroke_width: 2
          series:
            - entity: sensor.plante_hum_dracaena
              name: humidité
              yaxis_id: first
              unit: '%'
              color: rgb(70, 130, 180)
              type: area
              show:
                extremas: true
                in_brush: false
              float_precision: 1
              group_by:
                duration: 10min
                func: max
            - entity: sensor.plante_fertilite_dracaena
              name: fertilité du sol
              yaxis_id: second
              unit: µS/cm
              color: rgb(70, 180, 103)
              type: area
              show:
                extremas: true
                in_brush: false
              float_precision: 1
              group_by:
                duration: 10min
                func: max
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "🐘 Pied d'Elephant " ]]]
        - square: false
          columns: 4
          type: grid
          cards:
            - type: custom:bar-card
              name: ''
              entity_row: true
              direction: up
              unit_of_measurement: null
              positions:
                value: outside
                name: 'off'
                indicator: inside
                icon: inside
              max: 50
              height: 92
              width: 70px
              icon: mdi:thermometer
              severity:
                - color: rgb(180, 70, 70)
                  from: 0
                  to: 6.9
                - color: rgb(70, 130, 180)
                  from: 7
                  to: 32
                - color: rgb(180, 70, 70)
                  from: 32.1
                  to: 50
              style: |-
                bar-card-background {
                  background-color: "#223548";
                }
                bar-card-value {
                  font-size: 15px;
                  font-weight: bold;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                }
                bar-card-name {
                  margin-top: 20px;
                  font-size: 14px;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                  font-weight: bold;
                }
                bar-card-iconbar {
                  color: rgb(225,225,225);
                }
                bar-card-indicator {
                  color: rgb(225,225,225);
                }
              entities:
                - entity: sensor.plante_temp_pied_elephant
            - type: custom:bar-card
              name: ''
              entity_row: true
              direction: up
              unit_of_measurement: null
              positions:
                value: outside
                name: 'off'
                indicator: inside
                icon: inside
              max: 100
              height: 92
              width: 70px
              icon: mdi:water
              severity:
                - color: rgb(180, 70, 70)
                  from: 0
                  to: 8.9
                - color: rgb(70, 130, 180)
                  from: 9
                  to: 40
                - color: rgb(180, 70, 70)
                  from: 41.1
                  to: 100
              style: |-
                bar-card-background {
                  background-color: "#223548";
                }
                bar-card-value {
                  font-size: 15px;
                  font-weight: bold;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                }
                bar-card-name {
                  margin-top: 20px;
                  font-size: 14px;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                  font-weight: bold;
                }
                bar-card-iconbar {
                  color: rgb(225,225,225);
                }
                bar-card-indicator {
                  color: rgb(225,225,225);
                }
              entities:
                - entity: sensor.plante_hum_pied_elephant
            - type: custom:bar-card
              name: ''
              entity_row: true
              direction: up
              unit_of_measurement: null
              positions:
                value: outside
                name: 'off'
                indicator: inside
                icon: inside
              max: 5000
              height: 92
              width: 70px
              icon: mdi:brightness-5
              severity:
                - color: rgb(180, 70, 70)
                  from: 0
                  to: 2999
                - color: rgb(70, 130, 180)
                  from: 3000
                  to: 10000
                - color: rgb(180, 70, 70)
                  from: 10001
                  to: 20000
              style: |-
                bar-card-background {
                  background-color: "#223548";
                }
                bar-card-value {
                  font-size: 15px;
                  font-weight: bold;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                }
                bar-card-name {
                  margin-top: 20px;
                  font-size: 14px;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                  font-weight: bold;
                }
                bar-card-iconbar {
                  color: rgb(225,225,225);
                }
                bar-card-indicator {
                  color: rgb(225,225,225);
                }
              entities:
                - entity: sensor.plante_lum_pied_elephant
            - type: custom:bar-card
              name: ''
              entity_row: true
              direction: up
              unit_of_measurement: null
              positions:
                value: outside
                name: 'off'
                indicator: inside
                icon: inside
              max: 2000
              height: 92
              width: 70px
              severity:
                - color: rgb(180, 70, 70)
                  from: 0
                  to: 349
                - color: rgb(70, 130, 180)
                  from: 350
                  to: 2000
                - color: rgb(180, 70, 70)
                  from: 2001
                  to: 3000
              style: |-
                bar-card-background {
                  background-color: "#223548";
                }
                bar-card-value {
                  font-size: 15px;
                  font-weight: bold;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                }
                bar-card-name {
                  margin-top: 20px;
                  font-size: 14px;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                  font-weight: bold;
                }
                bar-card-iconbar {
                  color: rgb(225,225,225);
                }
                bar-card-indicator {
                  color: rgb(225,225,225);
                }
              entities:
                - entity: sensor.plante_fertilite_pied_elephant
        - type: custom:apexcharts-card
          header:
            show: true
            show_states: true
            colorize_states: true
          graph_span: 7d
          apex_config:
            grid:
              show: false
            legend:
              fontSize: 12px
              height: 40
            dataLabels:
              enabled: false
            stroke:
              width: 3
              curve: smooth
            fill:
              type: gradient
              gradient:
                type: vertical
                shadeIntensity: 0.8
                inverseColors: false
                opacityFrom: 0.5
                opacityTo: 0
                stops:
                  - - 0
                    - 50
                    - 100
          yaxis:
            - id: first
              max: ~100
              min: ~0
              decimals: 1
              apex_config:
                tickAmount: 4
            - id: second
              opposite: true
              min: ~0
              decimals: 1
              apex_config:
                tickAmount: 4
          all_series_config:
            stroke_width: 2
          series:
            - entity: sensor.plante_hum_pied_elephant
              name: humidité
              yaxis_id: first
              unit: '%'
              color: rgb(70, 130, 180)
              type: area
              show:
                extremas: true
                in_brush: false
              float_precision: 1
              group_by:
                duration: 10min
                func: max
            - entity: sensor.plante_fertilite_pied_elephant
              name: fertilité du sol
              yaxis_id: second
              unit: µS/cm
              color: rgb(70, 180, 103)
              type: area
              show:
                extremas: true
                in_brush: false
              float_precision: 1
              group_by:
                duration: 10min
                func: max
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "🍋 Citronnier " ]]]
        - square: false
          columns: 4
          type: grid
          cards:
            - type: custom:bar-card
              name: ''
              entity_row: true
              direction: up
              unit_of_measurement: null
              positions:
                value: outside
                name: 'off'
                indicator: inside
                icon: inside
              max: 50
              height: 92
              width: 70px
              icon: mdi:thermometer
              severity:
                - color: rgb(180, 70, 70)
                  from: 0
                  to: 4.9
                - color: rgb(70, 130, 180)
                  from: 5
                  to: 36
                - color: rgb(180, 70, 70)
                  from: 36.1
                  to: 50
              style: |-
                bar-card-background {
                  background-color: "#223548";
                }
                bar-card-value {
                  font-size: 15px;
                  font-weight: bold;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                }
                bar-card-name {
                  margin-top: 20px;
                  font-size: 14px;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                  font-weight: bold;
                }
                bar-card-iconbar {
                  color: rgb(225,225,225);
                }
                bar-card-indicator {
                  color: rgb(225,225,225);
                }
              entities:
                - entity: sensor.plante_citro_temp
            - type: custom:bar-card
              name: ''
              entity_row: true
              direction: up
              unit_of_measurement: null
              positions:
                value: outside
                name: 'off'
                indicator: inside
                icon: inside
              max: 100
              height: 92
              width: 70px
              icon: mdi:water
              severity:
                - color: rgb(180, 70, 70)
                  from: 0
                  to: 13.9
                - color: rgb(70, 130, 180)
                  from: 14
                  to: 61
                - color: rgb(180, 70, 70)
                  from: 61.1
                  to: 100
              style: |-
                bar-card-background {
                  background-color: "#223548";
                }
                bar-card-value {
                  font-size: 15px;
                  font-weight: bold;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                }
                bar-card-name {
                  margin-top: 20px;
                  font-size: 14px;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                  font-weight: bold;
                }
                bar-card-iconbar {
                  color: rgb(225,225,225);
                }
                bar-card-indicator {
                  color: rgb(225,225,225);
                }
              entities:
                - entity: sensor.plante_citro_humidite
            - type: custom:bar-card
              name: ''
              entity_row: true
              direction: up
              unit_of_measurement: null
              positions:
                value: outside
                name: 'off'
                indicator: inside
                icon: inside
              max: 5000
              height: 92
              width: 70px
              icon: mdi:brightness-5
              severity:
                - color: rgb(180, 70, 70)
                  from: 0
                  to: 3699
                - color: rgb(70, 130, 180)
                  from: 3700
                  to: 70000
                - color: rgb(180, 70, 70)
                  from: 70001
                  to: 10000
              style: |-
                bar-card-background {
                  background-color: "#223548";
                }
                bar-card-value {
                  font-size: 15px;
                  font-weight: bold;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                }
                bar-card-name {
                  margin-top: 20px;
                  font-size: 14px;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                  font-weight: bold;
                }
                bar-card-iconbar {
                  color: rgb(225,225,225);
                }
                bar-card-indicator {
                  color: rgb(225,225,225);
                }
              entities:
                - entity: sensor.plante_citro_lum
            - type: custom:bar-card
              name: ''
              entity_row: true
              direction: up
              unit_of_measurement: null
              positions:
                value: outside
                name: 'off'
                indicator: inside
                icon: inside
              max: 1500
              height: 92
              width: 70px
              severity:
                - color: rgb(180, 70, 70)
                  from: 0
                  to: 199
                - color: rgb(70, 130, 180)
                  from: 200
                  to: 1500
                - color: rgb(180, 70, 70)
                  from: 1501
                  to: 2000
              style: |-
                bar-card-background {
                  background-color: "#223548";
                }
                bar-card-value {
                  font-size: 15px;
                  font-weight: bold;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                }
                bar-card-name {
                  margin-top: 20px;
                  font-size: 14px;
                  color: rgb(225,225,225);
                  text-shadow: 1px 1px #0005;
                  font-weight: bold;
                }
                bar-card-iconbar {
                  color: rgb(225,225,225);
                }
                bar-card-indicator {
                  color: rgb(225,225,225);
                }
              entities:
                - entity: sensor.plante_citro_fertilite
        - type: custom:apexcharts-card
          header:
            show: true
            show_states: true
            colorize_states: true
          graph_span: 7d
          apex_config:
            grid:
              show: false
            legend:
              fontSize: 12px
              height: 40
            dataLabels:
              enabled: false
            stroke:
              width: 3
              curve: smooth
            fill:
              type: gradient
              gradient:
                type: vertical
                shadeIntensity: 0.8
                inverseColors: false
                opacityFrom: 0.5
                opacityTo: 0
                stops:
                  - - 0
                    - 50
                    - 100
          yaxis:
            - id: first
              max: ~100
              min: ~0
              decimals: 1
              apex_config:
                tickAmount: 4
            - id: second
              opposite: true
              min: ~0
              decimals: 1
              apex_config:
                tickAmount: 4
          all_series_config:
            stroke_width: 2
          series:
            - entity: sensor.plante_citro_humidite
              name: humidité
              yaxis_id: first
              unit: '%'
              color: rgb(70, 130, 180)
              type: area
              show:
                extremas: true
                in_brush: false
              float_precision: 1
              group_by:
                duration: 10min
                func: max
            - entity: sensor.plante_citro_fertilite
              name: fertilité du sol
              yaxis_id: second
              unit: µS/cm
              color: rgb(70, 180, 103)
              type: area
              show:
                extremas: true
                in_brush: false
              float_precision: 1
              group_by:
                duration: 10min
                func: max
- theme: Backend-selected
  subview: true
  title: Agenda
  path: Agenda
  icon: mdi:weather-partly-cloudy
  type: custom:horizontal-layout
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Météo" ]]]
        - type: custom:vertical-stack-in-card
          cards:
            - type: custom:button-card
              entity: weather.tu_mets_ta_ville
              show_entity_picture: true
              show_icon: true
              show_name: false
              show_state: false
              show_label: false
              template:
                - police
                - style
              entity_picture: |
                [[[
                  if ((entity.state == 'sunny') && (states['sun.sun'].state == 'above_horizon'))
                    return "/local/weather/icones animes/clear-day.svg"
                  if ((entity.state == 'sunny') || (entity.state == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
                    return "/local/weather/icones animes/clear-night.svg"  

                  if ((entity.state == 'lightning-rainy') && (states['sun.sun'].state == 'above_horizon'))
                    return "/local/weather/icones animes/thunderstorms-day-rain.svg"
                  if ((entity.state == 'lightning-rainy') || (entity.state == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
                    return "/local/weather/icones animes/thunderstorms-night-rain.svg"

                  if ((entity.state == 'fog') && (states['sun.sun'].state == 'above_horizon'))
                    return "/local/weather/icones animes/fog-day.svg"             
                  if ((entity.state == 'fog') && (states['sun.sun'].state == 'below_horizon'))
                    return "/local/weather/icones animes/fog-night.svg"

                  if ((entity.state == 'partlycloudy') && (states['sun.sun'].state == 'above_horizon'))
                    return "/local/weather/icones animes/partly-cloudy-day.svg"                    
                  if ((entity.state == 'partlycloudy') && (states['sun.sun'].state == 'below_horizon'))
                    return "/local/weather/icones animes/partly-cloudy-night.svg"  

                  if ((entity.state == 'rainy') && (states['sun.sun'].state == 'above_horizon'))
                    return "/local/weather/icones animes/partly-cloudy-day-rain.svg"                      
                  if ((entity.state == 'rainy') && (states['sun.sun'].state == 'below_horizon'))
                    return "/local/weather/icones animes/partly-cloudy-night-rain.svg" 

                  if ((entity.state == 'lightning') && (states['sun.sun'].state == 'above_horizon'))
                    return "/local/weather/icones animes/thunderstorms-day.svg"                      
                  if ((entity.state == 'lightning') && (states['sun.sun'].state == 'below_horizon'))
                    return "/local/weather/icones animes/thunderstorms-night.svg" 

                  if (entity.state == 'clear-night')
                    return "/local/weather/icones animes/clear-night.svg";

                  if (entity.state == 'sleet')
                    return "/local/weather/icones animes/sleet.svg";  

                  if (entity.state == 'pouring')
                    return "/local/weather/icones animes/umbrella.svg"; 

                  if (entity.state == 'snowy-rainy')
                    return "/local/weather/icones animes/sleet.svg";  

                  if (entity.state == 'snow')
                    return "/local/weather/icones animes/snow.svg"; 

                  if (entity.state == 'snowy')
                    return "/local/weather/icones animes/snow.svg"; 

                  if (entity.state == 'cloudy')
                    return "/local/weather/icones animes/cloudy.svg"; 

                  if (entity.state == 'wind')
                    return "/local/weather/icones animes/wind.svg";  

                  if (entity.state == 'hail')
                    return "/local/weather/icones animes/hail.svg"; 
                ]]]
              styles:
                img_cell:
                  - border-radius: 0%
                  - width: 80px
                  - height: 80px
                  - position: absolute
                  - top: '-2%'
                  - left: 3%
                  - background-color: transparent
                  - color: transparent
                  - border-color: transparent
                  - box-shadow: transparent
                entity_picture:
                  - width: 100%
                grid:
                  - grid-template-areas: |
                      "date"
                      "meteo"
                      "bouton"
                      "jauge"
                  - grid-template-columns: 1fr
                  - grid-template-rows: >-
                      min-content min-content min-content min-content 
                      min-content 1fr
                  - gap: 0%
                  - overflow: hidden
                card:
                  - padding: 3% 0% 2% 0%
                  - font-size: 13px
                custom_fields:
                  date:
                    - padding: 0px 0px 0px 0px
                    - font-weight: null
                    - font-size: 13px
                    - color: lightgrey
                    - align-self: middle
                    - white-space: normal
                  meteo:
                    - padding: 2px 0px 05px 0px
                    - font-weight: null
                    - font-size: 17px
                    - color: lightgrey
                    - align-self: middle
                    - white-space: normal
                  temp:
                    - padding: 0px 0px 0px 0px
                    - font-weight: null
                    - font-size: 40px
                    - color: lightgrey
                    - position: absolute
                    - top: 02%
                    - left: 80%
                  bouton:
                    - padding: 30px 0px 0px 0px
                    - white-space: normal
                    - width: calc(100% + 1px)
                    - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                    - '--ha-card-background': rgba(0, 0, 0, 0.0)
                    - '--ha-card-box-shadow': none
                    - '--ha-card-border-width': 0px
                  jauge:
                    - padding: 10px 0px 0px 0px
                    - width: calc(100% + 0px)
                    - '--ha-card-border-width': 0px
                    - '--ha-card-background': rgba(0, 0, 0, 0.0)
                    - '--ha-card-box-shadow': none
              custom_fields:
                date: |
                  [[[ return states['sensor.date_simple'].state ]]]
                meteo: |
                  [[[ return states['sensor.weather_conditions'].state ]]]
                temp: >
                  [[[ return states['sensor.weather_temperature_v2'].state +"°
                  " ]]]
                bouton:
                  card:
                    type: horizontal-stack
                    cards:
                      - type: custom:button-card
                        entity: sensor.weather_soleil_v2
                        show_icon: true
                        show_name: true
                        show_state: true
                        show_label: false
                        template:
                          - police
                        name: |
                          [[[
                            if (states['sun.sun'].state == 'below_horizon')
                              return 'Levé'
                            return 'Couché'
                                ]]]
                        icon: |
                          [[[
                            if (states['sun.sun'].state == 'below_horizon')
                              return 'mdi:weather-sunset'
                            return 'mdi:moon-waning-crescent'
                                ]]]
                        styles:
                          img_cell:
                            - border-radius: 50%
                            - width: 35px
                            - height: 35px
                            - background-color: var(--pastille_off)
                            - color: var(--text_systeme_info)
                            - margin-top: 2px
                          icon:
                            - color: |
                                [[[
                                  if (states['sun.sun'].state == 'below_horizon')
                                    return 'orange'
                                  return 'rgb(123,104,238)'
                                ]]]
                            - width: 60%
                          state:
                            - font-weight: bold
                            - font-size: 12px
                            - color: lightgrey
                          name:
                            - font-weight: null
                            - font-size: 13px
                            - padding-top: 5%
                            - color: rgba(232,233,242,1)
                          card:
                            - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                            - '--ha-card-background': rgba(0, 0, 0, 0.0)
                            - '--ha-card-box-shadow': none
                            - '--ha-card-border-width': 0px
                            - border-radius: 15px
                            - height: auto
                            - padding-left: 3px
                            - padding-right: 3px
                      - type: custom:button-card
                        entity: sensor.49_weather_alert
                        name: Alerte
                        icon: mdi:alert
                        show_icon: true
                        show_name: true
                        show_state: false
                        show_label: true
                        label: |
                          [[[
                            return states['sensor.weather_alerte'].state
                          ]]]
                        template:
                          - police
                        styles:
                          img_cell:
                            - border-radius: 50%
                            - width: 35px
                            - height: 35px
                            - background-color: |
                                [[[
                                  if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Jaune')
                                    return 'var(--custom-img-cell-color-gold)'
                                  if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Orange')
                                    return 'var(--custom-img-cell-color-orange)'
                                  if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Rouge')
                                    return 'var(--custom-img-cell-color-red)'
                                  return 'var(--pastille_off)'
                                ]]]
                            - margin-top: 2px
                          card:
                            - '--ha-card-background': none !important;
                            - '--ha-card-box-shadow': none
                            - '--ha-card-border-width''': 0px
                          icon:
                            - width: 60%
                            - color: |
                                [[[
                                  if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Jaune')
                                    return 'var(--custom-icon-color-yellow)'
                                  if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Orange')
                                    return 'var(--custom-icon-color-orange)'
                                  if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Rouge')
                                    return 'var(--custom-icon-color-red)'
                                  return 'var(--icon_off)'
                                ]]]
                          name:
                            - font-weight: null
                            - font-size: 13px
                            - padding-top: 5%
                            - color: rgba(232,233,242,1)
                          label:
                            - font-weight: bold
                            - font-size: 12px
                            - color: |
                                [[[
                                  if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Jaune')
                                    return 'yellow'
                                  if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Orange')
                                    return 'orange'
                                  if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Rouge')
                                    return 'red'
                                  return 'var(--text_on)'
                                ]]]
                      - type: custom:button-card
                        entity: sensor.weather_temp_min_max
                        name: Demain
                        icon: mdi:thermometer
                        show_icon: true
                        show_name: true
                        show_state: true
                        show_label: false
                        template:
                          - police
                        styles:
                          img_cell:
                            - border-radius: 50%
                            - width: 35px
                            - height: 35px
                            - margin-top: 2px
                            - background-color: |
                                [[[
                                  if (states['sensor.weather_temp_max_v2'].state > 20)
                                    return 'var(--custom-img-cell-color-red)'
                                  if (states['sensor.weather_temp_max_v2'].state < 10)
                                    return 'var(--custom-img-cell-color-blue)'
                                  return 'var(--icon_off)'
                                ]]]
                          name:
                            - font-weight: null
                            - font-size: 13px
                            - padding-top: 5%
                            - color: rgba(232,233,242,1)
                          card:
                            - '--ha-card-background': none !important;
                            - '--ha-card-box-shadow': none
                            - '--ha-card-border-width''': 0px
                          icon:
                            - width: 60%
                            - color: |
                                [[[
                                  if (states['sensor.weather_temp_max_v2'].state > 20)
                                    return 'var(--custom-icon-color-red)'
                                  if (states['sensor.weather_temp_max_v2'].state < 10)
                                    return 'var(--custom-icon-color-blue)'
                                  return 'var(--icon_off)'
                                ]]]
                          state:
                            - font-weight: bold
                            - font-size: 12px
                            - color: lightgrey
                jauge:
                  card:
                    type: horizontal-stack
                    cards:
                      - type: custom:button-card
                        template:
                          - base_moyenne
                        styles:
                          custom_fields:
                            bouton:
                              - position: absolute
                              - top: 40%
                              - left: 50%
                              - width: calc(98% + 0px)
                              - transform: translate(-50%, calc(-50% + 10px))
                              - '--ha-card-border-width': 0px
                        custom_fields:
                          bouton:
                            card:
                              square: false
                              columns: 6
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: sensor.weather_temperature_v2
                                  name: 🌡️
                                  units: °C
                                  template:
                                    - carte_jauge
                                    - state_unavailable
                                  styles:
                                    name:
                                      - font-size: 11px
                                    state:
                                      - font-size: 11px
                                    custom_fields:
                                      gauge:
                                        - width: calc(125% + 0px)
                                  custom_fields:
                                    gauge:
                                      card:
                                        entity: sensor.weather_temperature_v2
                                        gauge:
                                          max_value: 50
                                          min_value: -10
                                          severity:
                                            - color: rgb(176, 196, 222)
                                              from: 0
                                              to: 14.9
                                            - color: rgb(70, 130, 180)
                                              from: 15
                                              to: 26
                                            - color: rgb(180, 70, 70)
                                              from: 26.1
                                              to: 50
                                - type: custom:button-card
                                  entity: sensor.weather_conditions_vent
                                  name: 💨
                                  units: km/h
                                  template:
                                    - carte_jauge
                                    - state_unavailable
                                  styles:
                                    name:
                                      - font-size: 11px
                                    state:
                                      - font-size: 10px
                                    custom_fields:
                                      gauge:
                                        - width: calc(125% + 0px)
                                  custom_fields:
                                    gauge:
                                      card:
                                        entity: sensor.weather_conditions_vent
                                        gauge:
                                          max_value: 100
                                          min_value: 0
                                          severity:
                                            - color: rgb(70, 130, 180)
                                              from: 0
                                              to: 40
                                            - color: rgb(180, 70, 70)
                                              from: 41.1
                                              to: 100
                                - type: custom:button-card
                                  entity: sensor.weather_conditions_ciel
                                  name: ☁️
                                  units: '%'
                                  template:
                                    - carte_jauge
                                    - state_unavailable
                                  styles:
                                    name:
                                      - font-size: 11px
                                    state:
                                      - font-size: 11px
                                    custom_fields:
                                      gauge:
                                        - width: calc(125% + 0px)
                                  custom_fields:
                                    gauge:
                                      card:
                                        entity: sensor.weather_conditions_ciel
                                        gauge:
                                          max_value: 100
                                          min_value: 0
                                          severity:
                                            - color: rgb(70, 130, 180)
                                              from: 0
                                              to: 60
                                            - color: rgb(180, 70, 70)
                                              from: 60.1
                                              to: 100
                                - type: custom:button-card
                                  entity: sensor.weather_conditions_pluie
                                  name: ☔️
                                  units: '%'
                                  template:
                                    - carte_jauge
                                    - state_unavailable
                                  styles:
                                    name:
                                      - font-size: 11px
                                    state:
                                      - font-size: 11px
                                    custom_fields:
                                      gauge:
                                        - width: calc(125% + 0px)
                                  custom_fields:
                                    gauge:
                                      card:
                                        entity: sensor.weather_conditions_pluie
                                        gauge:
                                          max_value: 100
                                          min_value: 0
                                          severity:
                                            - color: rgb(70, 130, 180)
                                              from: 0
                                              to: 30
                                            - color: rgb(180, 70, 70)
                                              from: 30.1
                                              to: 100
                                - type: custom:button-card
                                  entity: sensor.weather_conditions_uv
                                  name: ☀️
                                  template:
                                    - carte_jauge
                                    - state_unavailable
                                  styles:
                                    name:
                                      - font-size: 11px
                                    state:
                                      - font-size: 11px
                                    custom_fields:
                                      gauge:
                                        - width: calc(125% + 0px)
                                  custom_fields:
                                    gauge:
                                      card:
                                        entity: sensor.weather_conditions_uv
                                        gauge:
                                          max_value: 12
                                          min_value: 0
                                          severity:
                                            - color: rgb(70, 130, 180)
                                              from: 0
                                              to: 5
                                            - color: rgb(180, 70, 70)
                                              from: 6
                                              to: 12
                                - type: custom:button-card
                                  entity: sensor.weather_conditions_neige
                                  name: ❄️
                                  units: '%'
                                  template:
                                    - carte_jauge
                                    - state_unavailable
                                  styles:
                                    name:
                                      - font-size: 11px
                                    state:
                                      - font-size: 11px
                                    custom_fields:
                                      gauge:
                                        - width: calc(125% + 0px)
                                  custom_fields:
                                    gauge:
                                      card:
                                        entity: sensor.weather_conditions_neige
                                        gauge:
                                          max_value: 100
                                          min_value: 0
                                          severity:
                                            - color: rgb(70, 130, 180)
                                              from: 0
                                              to: 10
                                            - color: rgb(180, 70, 70)
                                              from: 10.1
                                              to: 100
            - type: custom:clock-weather-card
              entity: weather.tu_mets_ta_ville
              title: ''
              sun_entity: sun.sun
              weather_icon_type: fill
              animated_icon: true
              forecast_days: 7
              locale: fr
              time_format: 24
              date_pattern: d MMMM y
              hide_today_section: true
              hide_forecast_section: false
              style: |
                ha-card {
                  font-size: 100%;
                  font-family: Avenir;
            - type: custom:meteofrance-weather-card
              entity: weather.maison
              number_of_forecasts: '5'
              current: false
              details: false
              one_hour_forecast: true
              alert_forecast: true
              style: |
                ha-card {
                  font-size: 80%;
                  font-family: Avenir;
      layout:
        width: 300
    - type: custom:layout-card
      layout_type: masonry
      cards:
        - type: custom:button-card
          template:
            - titre_section
          name: |
            [[[ return "Agenda" ]]]
        - initial_view: dayGridMonth
          type: calendar
          entities:
            - calendar.famille_famille
            - calendar.calendrier_calendrier
            - calendar.poubelles_poubelles
      layout:
        width: 300
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Réglages : afficher dans la carte activité " ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: input_boolean.sidecar_show_mode
                  name: Modes
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: input_boolean.sidecar_show_porte
                  name: Portes
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: input_boolean.sidecar_show_mouvement
                  name: Mouvements
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: input_boolean.sidecar_show_lumiere
                  name: Lumières
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: input_boolean.sidecar_show_autre
                  name: Appareils
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: input_boolean.sidecar_show_air
                  name: Air
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: input_boolean.sidecar_show_connecte
                  name: Connectés
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: input_boolean.sidecar_show_electricite
                  name: Électricité
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: input_boolean.sidecar_show_gaz
                  name: Gaz
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: input_boolean.sidecar_show_info
                  name: Savoir
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Autres modes" ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: input_boolean.noel
                  tap_action:
                    action: toggle
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: input_boolean.halloween
                  tap_action:
                    action: toggle
            - type: custom:button-card
              template:
                - titre_section
              name: |
                [[[ return "Thèmes" ]]]
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: script.theme_jour
                  name: Mad Geek
                  tap_action:
                    action: toggle
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: script.theme_nuit
                  name: Mad Night
                  tap_action:
                    action: toggle
                - type: custom:button-card
                  show_last_changed: false
                  show_state: true
                  template:
                    - carte_badge
                    - state_appareil
                    - state_unavailable
                  entity: script.theme_reload
                  name: Refresh
                  tap_action:
                    action: toggle
- theme: Backend-selected
  title: Air
  path: air
  type: custom:horizontal-layout
  layout:
    width: 350
  subview: true
  icon: mdi:air-filter
  badges: []
  cards:
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - square: false
              columns: 3
              type: grid
              cards:
                - type: custom:button-card
                  entity: sensor.moniteur_qualite_air
                  name: Particules
                  template:
                    - carte_jauge
                    - state_unavailable
                  show_last_changed: true
                  styles:
                    label:
                      - font-size: 12px
                  state:
                    - value: 65
                      operator: <
                      styles:
                        img_cell:
                          - background-color: var(--pastille_off)
                        icon:
                          - color: var(--icon_off)
                    - value: 220
                      operator: <=
                      styles:
                        card:
                          - background-color: var(--custom-card-color-blue)
                        img_cell:
                          - background-color: var(--custom-img-cell-color-blue)
                        state:
                          - color: var(--custom-icon-color-blue)
                        icon:
                          - color: var(--custom-icon-color-blue)
                    - value: 660
                      operator: <=
                      styles:
                        card:
                          - background-color: var(--custom-card-color-yellow)
                        img_cell:
                          - background-color: var(--custom-img-cell-color-yellow)
                        state:
                          - color: var(--custom-icon-color-yellow)
                        icon:
                          - color: var(--custom-icon-color-yellow)
                    - value: 2200
                      operator: <=
                      styles:
                        card:
                          - background-color: var(--custom-card-color-orange)
                        img_cell:
                          - background-color: var(--custom-img-cell-color-orange)
                        state:
                          - color: var(--custom-icon-color-orange)
                        icon:
                          - color: var(--custom-icon-color-orange)
                    - value: 2200
                      operator: ''
                      styles:
                        card:
                          - background-color: var(--custom-card-color-red)
                        img_cell:
                          - background-color: var(--custom-img-cell-color-red)
                        state:
                          - color: var(--custom-icon-color-red)
                        icon:
                          - color: var(--custom-icon-color-red)
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.moniteur_qualite_air
                        gauge:
                          max_value: 5500
                          unit_of_measurement: ppb
                          severity:
                            - color: darkgrey
                            - color: var(--custom-icon-color-blue)
                              from: 65
                              to: 220
                            - color: yellow
                              from: 221
                              to: 660
                            - color: orange
                              from: 661
                              to: 2200
                            - color: red
                              from: 2201
                              to: 5500
                - type: custom:button-card
                  entity: sensor.qualite_air_pourcentage
                  name: Qualité
                  template:
                    - carte_jauge
                    - state_unavailable
                  label: |
                    [[[
                      if (states['sensor.qualite_air_pourcentage'].state > 98.8  )
                        return 'Excellent'
                      if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96 )
                        return 'Correct'
                      if (states['sensor.qualite_air_pourcentage'].state < 96 && states['sensor.qualite_air_pourcentage'].state > 88 )
                        return 'Moyen'
                      if (states['sensor.qualite_air_pourcentage'].state < 88 && states['sensor.qualite_air_pourcentage'].state > 60 )
                        return 'Mauvais'
                      if (states['sensor.qualite_air_pourcentage'].state < 60  )
                        return 'Danger'
                      return ''
                    ]]]
                  styles:
                    card:
                      - background-color: |
                          [[[
                            if (states['sensor.qualite_air_pourcentage'].state >= 96.1 && states['sensor.qualite_air_pourcentage'].state <= 98.8)
                              return "var(--custom-card-color-blue)" 
                            if (states['sensor.qualite_air_pourcentage'].state >= 88.1 && states['sensor.qualite_air_pourcentage'].state <= 96)
                              return "var(--custom-card-color-yellow)" 
                            if (states['sensor.qualite_air_pourcentage'].state >= 60.1 && states['sensor.qualite_air_pourcentage'].state <= 88)
                              return "var(--custom-card-color-orange)" 
                            if (states['sensor.qualite_air_pourcentage'].state >= 0 && states['sensor.qualite_air_pourcentage'].state <= 60)
                              return "var(--custom-card-color-red)" 
                            return "" 
                          ]]]
                    state:
                      - color: |
                          [[[
                            if (states['sensor.qualite_air_pourcentage'].state >= 96.1 && states['sensor.qualite_air_pourcentage'].state <= 98.8)
                              return "var(--custom-icon-color-blue)" 
                            if (states['sensor.qualite_air_pourcentage'].state >= 88.1 && states['sensor.qualite_air_pourcentage'].state <= 96)
                              return "var(--custom-icon-color-yellow)" 
                            if (states['sensor.qualite_air_pourcentage'].state >= 60.1 && states['sensor.qualite_air_pourcentage'].state <= 88)
                              return "var(--custom-icon-color-orange)" 
                            if (states['sensor.qualite_air_pourcentage'].state >= 0 && states['sensor.qualite_air_pourcentage'].state <= 60)
                              return "var(--custom-icon-color-red)" 
                            return "" 
                          ]]]
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.qualite_air_pourcentage
                        gauge:
                          max_value: 100
                          severity:
                            - color: darkgrey
                            - color: var(--custom-icon-color-blue)
                              from: 96.1
                              to: 98.8
                            - color: yellow
                              from: 88.1
                              to: 96
                            - color: orange
                              from: 60.1
                              to: 88
                            - color: red
                              from: 0
                              to: 60
                - type: custom:button-card
                  entity: sensor.moniteur_qualite_air_temperature
                  name: Moniteur
                  template:
                    - carte_thermo
                    - state_unavailable
                  label: |
                    [[[
                      if( states['sensor.moniteur_qualite_air_humidite'].state == "unavailable")
                        return "HS"
                      return states['sensor.moniteur_qualite_air_humidite'].state + "%"
                    ]]]
                  styles:
                    label:
                      - color: |
                          [[[
                            if (states['sensor.moniteur_qualite_air_humidite'].state > 70 || states['sensor.moniteur_qualite_air_humidite'].state < 40 )
                              return 'red'
                            return ''
                          ]]]
                  custom_fields:
                    gauge:
                      card:
                        entity: sensor.moniteur_qualite_air_temperature
            - type: custom:button-card
              entity: sensor.moniteur_qualite_air
              icon: mdi:virus
              show_state: false
              show_label: false
              show_icon: false
              template:
                - base
              name: |
                [[[
                  if (states['sensor.moniteur_qualite_air'].state < 65  )
                    return 'Excellent ! Rien à signaler'
                  if (states['sensor.moniteur_qualite_air'].state >= 65 && states['sensor.moniteur_qualite_air'].state < 220 )
                    return 'Correct : Aération ou ventilation recommandée'
                  if (states['sensor.moniteur_qualite_air'].state >= 220 && states['sensor.moniteur_qualite_air'].state < 660 )
                    return 'Moyen : Ventilation intensifiée recommandée'
                  if (states['sensor.moniteur_qualite_air'].state >= 660 && states['sensor.moniteur_qualite_air'].state < 2200 )
                    return 'Mauvais : Aération ou ventilation nécessaire'
                  if (states['sensor.moniteur_qualite_air'].state >= 2200  )
                    return 'Danger : Ventilation intensifiée nécessaire'
                  return ''
                ]]]
              styles:
                name:
                  - font-size: 14px
              state:
                - value: 65
                  operator: <
                  styles:
                    img_cell:
                      - background-color: var(--pastille_off)
                    icon:
                      - color: var(--icon_off)
                    name:
                      - font-weight: bold
                - value: 220
                  operator: <
                  styles:
                    img_cell:
                      - background-color: var(--custom-img-cell-color-blue)
                    name:
                      - color: var(--custom-icon-color-blue)
                      - font-weight: bold
                    icon:
                      - color: var(--custom-icon-color-blue)
                - value: 660
                  operator: <
                  styles:
                    img_cell:
                      - background-color: var(--custom-img-cell-color-gold)
                    name:
                      - color: var(--custom-icon-color-gold)
                      - font-weight: bold
                    icon:
                      - color: var(--custom-icon-color-gold)
                - value: 2200
                  operator: <
                  styles:
                    img_cell:
                      - background-color: var(--custom-img-cell-color-orange)
                    name:
                      - color: var(--custom-icon-color-orange)
                      - font-weight: bold
                    icon:
                      - color: var(--custom-icon-color-orange)
                - value: 2200
                  operator: '=>'
                  styles:
                    img_cell:
                      - background-color: var(--custom-img-cell-color-red)
                    name:
                      - color: var(--custom-icon-color-red)
                      - font-weight: bold
                    icon:
                      - color: var(--custom-icon-color-red)
    - type: custom:layout-card
      layout_type: masonry
      layout:
        width: 280
      cards:
        - type: vertical-stack
          cards:
            - type: custom:apexcharts-card
              experimental:
                color_threshold: true
              header:
                title: ''
                show: true
                show_states: true
                colorize_states: true
              now:
                show: true
                color: red
                label: Maintenant
              graph_span: 7d
              apex_config:
                tooltip:
                  enabled: true
                yaxis:
                  labels:
                    style:
                      fontSize: 10px
                      fontFamily: Avenir
                xaxis:
                  axisBorder:
                    show: false
                  labels:
                    style:
                      fontSize: 10px
                      fontFamily: Avenir
                legend:
                  show: false
                grid:
                  show: true
                  borderColor: '#303030'
                  strokeDashArray: 3
                  position: back
                dataLabels:
                  enabled: true
                stroke:
                  width: 2
                fill:
                  type: gradient
                  gradient:
                    type: vertical
                    shadeIntensity: 0.8
                    inverseColors: false
                    opacityFrom: 0.6
                    opacityTo: 0
                    stops:
                      - 0
                      - 50
                      - 100
              series:
                - entity: sensor.moniteur_qualite_air
                  name: Particules
                  type: area
                  curve: smooth
                  fill_raw: last
                  float_precision: 1
                  show:
                    extremas: true
                  color_threshold:
                    - value: 0
                      color: darkgrey
                    - value: 65
                      color: dodgerblue
                    - value: 220
                      color: gold
                    - value: 660
                      color: orange
                    - value: 2200
                      color: red
              style: |
                ha-card {
                    --ha-card-background: rgba(0, 0, 0, 0.2);
                    box-shadow: none;
                    font-family: Avenir;
                  }