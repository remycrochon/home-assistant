substitutions:
  device_name: esp125-frigo
  adress_ip: "192.168.0.125"

esphome:
  name: ${device_name}

esp32:
  board: mhetesp32minikit
  framework:
    type: arduino

# Enable logging
logger:

api:

ota:
  - platform: esphome

captive_portal:

wifi:
  networks:
    - ssid: !secret wifi_esp
      password: !secret mdpwifi_esp
  reboot_timeout: 5min

  manual_ip:
    static_ip: ${adress_ip}
    gateway: 192.168.0.254
    subnet: 255.255.255.0
    dns1: !secret dns1
    dns2: !secret dns2

web_server:
  port: 80

one_wire:
  - platform: gpio  
    pin: GPIO4 

sensor:
  - platform: dallas_temp
    name: "Température DS18B20"
    id: temp_ds18b20
    device_class: temperature
    state_class: "measurement"
    update_interval: 10s

  - platform: adc
    pin: GPIO34
    id: adc_ctn
    attenuation: 12db
    update_interval: 10s

  - platform: ntc
    sensor: res_ntc
    calibration:
      b_constant: 3950
      reference_temperature: 25°C
      reference_resistance: 20kOhm
    name: "Température CTN"
    id: temp_ctn

  # === CTN 20kΩ sur ADC ===
  - platform: resistance
    id: res_ntc
    sensor: adc_ctn
    configuration: DOWNSTREAM
    resistor: 20kOhm
    reference_voltage: 3.3

# === Sortie PWM pour MOSFET chauffage ===
output:
  - platform: ledc
    pin: GPIO23
    frequency: 1000 Hz
    id: pwm_heater

# === Slider Home Assistant pour régler la puissance ===
number:
  - platform: template
    name: "Puissance Chauffage (%)"
    id: heating_power
    min_value: 0
    max_value: 100
    step: 1
    optimistic: true
    set_action:
      - output.set_level:
          id: pwm_heater
          level: !lambda "return x / 100.0;"

# === Switch marche/arrêt chauffage ===
switch:
  - platform: template
    name: "Chauffage ON/OFF"
    turn_on_action:
      - output.set_level:
          id: pwm_heater
          level: !lambda "return id(heating_power).state / 100.0;"
    turn_off_action:
      - output.set_level:
          id: pwm_heater
          level: 0
