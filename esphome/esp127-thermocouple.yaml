substitutions:
  device_name: esp127-thermocouple
  adress_ip: "192.168.0.127"
  friendly_name: esp127
  duree_sommeil: "5min"
  duree_reveil: "60s"
  
esphome:
  name: ${device_name}
  platform: ESP8266
  board: d1_mini
  on_boot:
    then:
      - script.execute: exec_deep_sleep

wifi:
  networks:
    - ssid: !secret wifi_esp
      password: !secret mdpwifi_esp
      priority: 2
    - ssid: !secret wifi
      password: !secret mdpwifi
      priority: 0
  reboot_timeout: 5min
  
  manual_ip:
    static_ip: ${adress_ip}
    gateway: 192.168.0.254
    subnet: 255.255.255.0
    
deep_sleep:
  sleep_duration: ${duree_sommeil}
  id: control_deep_sleep
  
i2c:
  sda: GPIO4 #D2
  scl: GPIO5 #D1
  scan: true
  id: bus_a

logger:
api:
ota:
web_server:
  port: 80
  
spi:
  miso_pin: D5
  clk_pin: D8 #ex D1

ads1115:
  - address: 0x48
  
sensor:
  - platform: ads1115
    multiplexer: 'A0_GND'
    gain: 6.144
    name: "${friendly_name} U Panneau"
    update_interval: 10s
        
  - platform: max31855
    name: "${friendly_name} Temperature"
    cs_pin: D3
    update_interval: 10s
    accuracy_decimals: 2
    filters:
    - median:
        window_size: 8
        send_every: 4
        send_first_at: 1

  - platform: adc
    pin: VCC
    name: "${friendly_name} U Alim"
    update_interval: 10s

binary_sensor:
  - platform: homeassistant
    entity_id: input_boolean.reveil_esp127_thermocouple
    id: prevent_deep_sleep

  #Etat de la connection
  - platform: status
    name: "${friendly_name} Status"

script:
  - id: exec_deep_sleep
    mode: queued
    then:
      - delay: ${duree_reveil}
      - logger.log: 'execute script'
      - if:
          condition:
            binary_sensor.is_on: prevent_deep_sleep
          then:
            - logger.log: 'Eviter la mise en sommeil par prevent_deep_sleep'
            -  deep_sleep.prevent: control_deep_sleep
          else:
            - logger.log: 'Autorise la mise en sommeil par deep_sleep_enter'
            - deep_sleep.enter: 
                id: control_deep_sleep
                sleep_duration: ${duree_sommeil}
      - script.execute: exec_deep_sleep

