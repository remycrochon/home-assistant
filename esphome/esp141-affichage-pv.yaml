substitutions:
  device_name: esp141-affichage-pv
  adress_ip: "192.168.0.141"
  friendly_name: esp141
  time_timezone: "Europe/Paris"
  
esphome:
  name: ${device_name}
  platform: ESP8266
  board: d1_mini
  project:
    name: "rem81.Affichage_Pv"
    version: "1.0.0"
  platformio_options:
    lib_deps: NeoPixelBus@2.6.0
  on_boot:
    then:
      - light.control:
          id: rgb_led
          brightness: 0.25
          state: on  

wifi:
  networks:
    - ssid: !secret wifi_esp
      password: !secret mdpwifi_esp
      priority: 1
      
    - ssid: !secret wifi
      password: !secret mdpwifi
      priority: 0
      
  reboot_timeout: 5min
  #use_address: ${device_name}
  
  manual_ip:
    static_ip: ${adress_ip}
    gateway: 192.168.0.254
    subnet: 255.255.255.0

logger:
api:
ota:
web_server:
  port: 80

time:
  - platform: homeassistant
    timezone:  ${time_timezone} 

# Led WS2812 RGB  
light:

  - platform: neopixelbus
    method:
      type: esp8266_dma
    num_leds: 8 #1
    pin: GPIO3
    name: "RGB strip"
    variant: ws2812
    id: rgb_led
globals:
  # Niveau intensité lumineuse
   - id: intlum
     type: float
     restore_value: no
     initial_value: '10'
  # Niveau intensité lumineuse
   - id: intlum1
     type: float
     restore_value: no
     initial_value: '0.25'
#Etat de la connection
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO16
      inverted: True
    name: bp_raz

  - platform: status
    name: "${friendly_name} Status"

text_sensor:
  - platform: homeassistant
    name: "Tempo Jour"
    entity_id: sensor.rte_tempo_couleur_actuelle
    id: tempo_jour

  - platform: homeassistant
    name: "Tempo j+1"
    entity_id: sensor.rte_tempo_prochaine_couleur
    id: tempo_jour1
 
interval:

  - interval: 1s
    then:
      - script.execute: calcul_led_jour
      - script.execute: calcul_led_jour1

# ------------------------  Scripts
script:
# 
# Couleur du Jour en cours
# Si indisponible alors Led Eteinte
  - id: calcul_led_jour
    mode: single
    then:
      - if:
          condition:
            and:
              - lambda: |-
                  return strcmp(id(tempo_jour).state.c_str(),"Bleu") != 0;
              - lambda: |-
                  return strcmp(id(tempo_jour).state.c_str(),"Blanc") != 0;
              - lambda: |-
                  return strcmp(id(tempo_jour).state.c_str(),"Rouge") != 0;
          then:
            - light.addressable_set:
                  id: rgb_led
                  range_from: 0
                  range_to: 1
                  red: 0%
                  green: 0%
                  blue: 0%

            - light.addressable_set:
                  id: rgb_led
                  range_from: 2
                  range_to: 4
                  red: 0%
                  green: 0%
                  blue: 0%          
      - if: 
          condition:
            - lambda: |-
                return strcmp(id(tempo_jour).state.c_str(),"Bleu") == 0;
          then:
            - light.addressable_set:
                  id: rgb_led
                  range_from: 0
                  range_to: 1
                  red: 0%
                  green: 0%
                  blue: !lambda |-
                    return id(intlum1);

            - light.addressable_set:
                  id: rgb_led
                  range_from: 2
                  range_to: 4
                  red: 0%
                  green: 0%
                  blue: 0%

      - if: 
          condition:
            - lambda: |-
                return strcmp(id(tempo_jour).state.c_str(),"Blanc") == 0;
          then:
            - light.addressable_set:
                  id: rgb_led
                  range_from: 0
                  range_to: 1
                  red: !lambda |-
                    return id(intlum1);
                  green: !lambda |-
                    return id(intlum1);
                  blue: !lambda |-
                    return id(intlum1);
                  
            - light.addressable_set:
                  id: rgb_led
                  range_from: 2
                  range_to: 4
                  red: 0%
                  green: 0%
                  blue: 0%

          
      - if: 
          condition:
            - lambda: |-
                return strcmp(id(tempo_jour).state.c_str(),"Rouge") == 0;
          then:
            - light.addressable_set:
                  id: rgb_led
                  range_from: 0
                  range_to: 1
                  red: !lambda |-
                    return id(intlum1);
                  green: 0%
                  blue: 0%
                  
            - light.addressable_set:
                  id: rgb_led
                  range_from: 2
                  range_to: 4
                  red: 0%
                  green: 0%
                  blue: 0%

# Couleur du lendemain
  - id: calcul_led_jour1
    mode: single
    then:
      # Si 
      - if: 
          condition:
            and:
              - lambda: |-
                  return strcmp(id(tempo_jour1).state.c_str(),"Bleu") != 0;
              - lambda: |-
                  return strcmp(id(tempo_jour1).state.c_str(),"Blanc") != 0;
              - lambda: |-
                  return strcmp(id(tempo_jour1).state.c_str(),"Rouge") != 0;
          then:
            - light.addressable_set:
                  id: rgb_led
                  range_from: 5
                  range_to: 7
                  red: 0%
                  green: 0%
                  blue: 0%

            - light.addressable_set:
                  id: rgb_led
                  range_from: 2
                  range_to: 4
                  red: 0%
                  green: 0%
                  blue: 0%      
      - if: 
          condition:
            - lambda: |-
                return strcmp(id(tempo_jour1).state.c_str(),"Bleu") == 0;
          then:
            - light.addressable_set:
                  id: rgb_led
                  range_from: 5
                  range_to: 7
                  red: 0%
                  green: 0%
                  blue: !lambda |-
                    return id(intlum1);

            - light.addressable_set:
                  id: rgb_led
                  range_from: 2
                  range_to: 4
                  red: 0%
                  green: 0%
                  blue: 0%

      - if: 
          condition:
            - lambda: |-
                return strcmp(id(tempo_jour1).state.c_str(),"Blanc") == 0;
          then:
            - light.addressable_set:
                  id: rgb_led
                  range_from: 5
                  range_to: 7
                  red: !lambda |-
                    return id(intlum1);
                  green:  !lambda |-
                    return id(intlum1);
                  blue:  !lambda |-
                    return id(intlum1);
                  
            - light.addressable_set:
                  id: rgb_led
                  range_from: 2
                  range_to: 4
                  red: 0%
                  green: 0%
                  blue: 0%
          
      - if: 
          condition:
            - lambda: |-
                return strcmp(id(tempo_jour1).state.c_str(),"Rouge") == 0;
          then:
            - light.addressable_set:
                  id: rgb_led
                  range_from: 5
                  range_to: 7
                  red:  !lambda |-
                    return id(intlum1);
                  green: 00%
                  blue: 0%

            - light.addressable_set:
                  id: rgb_led
                  range_from: 2
                  range_to: 4
                  red: 0%
                  green: 0%
                  blue: 0%

 