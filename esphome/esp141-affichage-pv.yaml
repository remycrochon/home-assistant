substitutions:
  device_name: esp141-affichage-pv
  adress_ip: "192.168.0.141"
  friendly_name: esp141
  time_timezone: "Europe/Paris"
  
esphome:
  name: ${device_name}
  project:
    name: "rem81.Affichage_Pv"
    version: "1.0.0"
  platformio_options:
    lib_deps: NeoPixelBus@2.6.0
  on_boot:
    then:
      - light.control:
          id: rgb_led
          brightness: 0.25
          state: on  

esp8266:
  board: d1_mini
  framework:
    version: recommended

wifi:
  networks:
    - ssid: !secret wifi
      password: !secret mdpwifi
  reboot_timeout: 1min
  manual_ip:
    static_ip: ${adress_ip}
    gateway: 192.168.0.254
    subnet: 255.255.255.0

logger:
api:
ota:
  platform: esphome
web_server:
  port: 80

time:
  - platform: homeassistant
    timezone: ${time_timezone} 

# Led WS2812 RGB  
light:
  - platform: neopixelbus
    method:
      type: esp8266_dma
    num_leds: 8
    pin: GPIO3
    name: "RGB strip"
    variant: ws2812
    id: rgb_led

globals:
  # Niveau intensité lumineuse
  - id: intlum
    type: float
    restore_value: no
    initial_value: '10'
  # Niveau intensité lumineuse
  - id: intlum1
    type: float
    restore_value: no
    initial_value: '0.25'
  # Etat pour le clignotement
  - id: blink_state
    type: bool
    restore_value: no
    initial_value: 'false'

# Etat de la connection
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO16
      inverted: True
    name: bp_raz
  - platform: status
    name: "Status"

sensor:
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    device_class: ""

  - platform: homeassistant
    entity_id: "sensor.mp2_tension_entree_l1"
    id: u_reseau

text_sensor:
  - platform: homeassistant
    name: "Tempo Jour"
    entity_id: sensor.rte_tempo_couleur_actuelle
    id: tempo_jour
  - platform: homeassistant
    name: "Tempo j+1"
    entity_id: sensor.rte_tempo_prochaine_couleur
    id: tempo_jour1

switch:
  - platform: restart
    name: "Restart" 

interval:
  - interval: 1s
    then:
      - if:
          condition:
            sensor.in_range:
              id: u_reseau
              below: 10
          then:
            - script.execute: blink_leds_red
          else:
            - script.execute: calcul_led_jour
            - script.execute: calcul_led_jour1

# ------------------------  Scripts
script:
  # Clignotement des LEDs en rouge si u_reseau < 10
  - id: blink_leds_red
    mode: single
    then:
      - lambda: |-
          id(blink_state) = !id(blink_state);
      - if:
          condition:
            lambda: 'return id(blink_state);'
          then:
            - light.addressable_set:
                id: rgb_led
                range_from: 0
                range_to: 7
                red: !lambda 'return id(intlum1);'
                green: 0%
                blue: 0%
          else:
            - light.addressable_set:
                id: rgb_led
                range_from: 0
                range_to: 7
                red: 0%
                green: 0%
                blue: 0%

  # Couleur du Jour en cours
  - id: calcul_led_jour
    mode: single
    then:
      - if:
          condition:
            and:
              - lambda: |-
                  return strcmp(id(tempo_jour).state.c_str(),"Bleu") != 0;
              - lambda: |-
                  return strcmp(id(tempo_jour).state.c_str(),"Blanc") != 0;
              - lambda: |-
                  return strcmp(id(tempo_jour).state.c_str(),"Rouge") != 0;
          then:
            - light.addressable_set:
                id: rgb_led
                range_from: 0
                range_to: 1
                red: 0%
                green: 0%
                blue: 0%
            - light.addressable_set:
                id: rgb_led
                range_from: 2
                range_to: 4
                red: 0%
                green: 0%
                blue: 0%          
      - if: 
          condition:
            - lambda: |-
                return strcmp(id(tempo_jour).state.c_str(),"Bleu") == 0;
          then:
            - light.addressable_set:
                id: rgb_led
                range_from: 0
                range_to: 1
                red: 0%
                green: 0%
                blue: !lambda |-
                  return id(intlum1);
            - light.addressable_set:
                id: rgb_led
                range_from: 2
                range_to: 4
                red: 0%
                green: 0%
                blue: 0%
      - if: 
          condition:
            - lambda: |-
                return strcmp(id(tempo_jour).state.c_str(),"Blanc") == 0;
          then:
            - light.addressable_set:
                id: rgb_led
                range_from: 0
                range_to: 1
                red: !lambda |-
                  return id(intlum1);
                green: !lambda |-
                  return id(intlum1);
                blue: !lambda |-
                  return id(intlum1);
            - light.addressable_set:
                id: rgb_led
                range_from: 2
                range_to: 4
                red: 0%
                green: 0%
                blue: 0%
      - if: 
          condition:
            - lambda: |-
                return strcmp(id(tempo_jour).state.c_str(),"Rouge") == 0;
          then:
            - light.addressable_set:
                id: rgb_led
                range_from: 0
                range_to: 1
                red: !lambda |-
                  return id(intlum1);
                green: 0%
                blue: 0%
            - light.addressable_set:
                id: rgb_led
                range_from: 2
                range_to: 4
                red: 0%
                green: 0%
                blue: 0%

  # Couleur du lendemain
  - id: calcul_led_jour1
    mode: single
    then:
      - if: 
          condition:
            and:
              - lambda: |-
                  return strcmp(id(tempo_jour1).state.c_str(),"Bleu") != 0;
              - lambda: |-
                  return strcmp(id(tempo_jour1).state.c_str(),"Blanc") != 0;
              - lambda: |-
                  return strcmp(id(tempo_jour1).state.c_str(),"Rouge") != 0;
          then:
            - light.addressable_set:
                id: rgb_led
                range_from: 5
                range_to: 7
                red: 0%
                green: 0%
                blue: 0%
            - light.addressable_set:
                id: rgb_led
                range_from: 2
                range_to: 4
                red: 0%
                green: 0%
                blue: 0%      
      - if: 
          condition:
            - lambda: |-
                return strcmp(id(tempo_jour1).state.c_str(),"Bleu") == 0;
          then:
            - light.addressable_set:
                id: rgb_led
                range_from: 5
                range_to: 7
                red: 0%
                green: 0%
                blue: !lambda |-
                  return id(intlum1);
            - light.addressable_set:
                id: rgb_led
                range_from: 2
                range_to: 4
                red: 0%
                green: 0%
                blue: 0%
      - if: 
          condition:
            - lambda: |-
                return strcmp(id(tempo_jour1).state.c_str(),"Blanc") == 0;
          then:
            - light.addressable_set:
                id: rgb_led
                range_from: 5
                range_to: 7
                red: !lambda |-
                  return id(intlum1);
                green: !lambda |-
                  return id(intlum1);
                blue: !lambda |-
                  return id(intlum1);
            - light.addressable_set:
                id: rgb_led
                range_from: 2
                range_to: 4
                red: 0%
                green: 0%
                blue: 0%
      - if: 
          condition:
            - lambda: |-
                return strcmp(id(tempo_jour1).state.c_str(),"Rouge") == 0;
          then:
            - light.addressable_set:
                id: rgb_led
                range_from: 5
                range_to: 7
                red: !lambda |-
                  return id(intlum1);
                green: 0%
                blue: 0%
            - light.addressable_set:
                id: rgb_led
                range_from: 2
                range_to: 4
                red: 0%
                green: 0%
                blue: 0%