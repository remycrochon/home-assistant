substitutions:
  device_name: esp142-test-esp32
  adress_ip: "192.168.0.142"
  friendly_name: esp142
  time_timezone: "Europe/Paris"
  
esphome:
  name: ${device_name}
      
esp32:
  board: esp32dev
  framework:
    type: arduino

wifi:
  networks:
    - ssid: !secret wifi
      password: !secret mdpwifi
  reboot_timeout: 5min

  manual_ip:
    static_ip: ${adress_ip}
    gateway: 192.168.0.254
    subnet: 255.255.255.0
    dns1: 192.168.0.254

# Enable logging
logger:
  baud_rate: 0
  level: VERBOSE

# Enable Home Assistant API
api:

ota:
  platform: esphome

web_server:
  port: 80
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Paris
    servers:
     - 0.pool.ntp.org
     - 1.pool.ntp.org
     - 2.pool.ntp.org
# Connection sonde(s) de température DS18b20
one_wire:
  - platform: gpio
    pin: GPIO15

# Informations supplementaires sur le WIFI
text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${friendly_name}_ESP IP Address
      id: ad_ip
    ssid:
      name: ${friendly_name}_ESP Connected SSID
    bssid:
      name: ${friendly_name}_ESP Connected BSSID
    mac_address:
      name: ${friendly_name}_ESP Mac Wifi Address
    scan_results:
      name: ${friendly_name}_ESP Latest Scan Results
      
  # Message en lien avec L'automatisme de notification telegram
  - platform: template
    name: "${friendly_name}_message_notif_telegram"
    id: _msg_notif_telegram

binary_sensor:
#Etat de la connection
  - platform: status
    name: "${friendly_name}_Status"

sensor:
  - platform: dallas_temp
    #address: 0x060321117ae89b28 #  0x82012111efe81d28
    name: "${friendly_name}_temperature"
    id: temperature
    update_interval: 10s

switch:
  - platform: gpio
    name: "${friendly_name} Relais"
    pin: GPIO32
    inverted: true
    id: relais

  - platform: restart
    name: "${friendly_name} Restart"

interval:
  - interval: 20s
    then:
      - lambda: |-
          static String mess;
          mess="ESP142";
          mess=mess+"\n";
          mess= mess+ "Temperature:"+String(id(temperature).state)+"\n";
          id(_message_telegram)->execute(mess.c_str()); 

script:
  # sinon on travaille avec le pH mémorisé avant l'arret précédent
  #mess= ("Home.date", "%s", id(sntp_time).now().strftime("%A %d %B %Y").c_str());
  - id: _message_telegram
    parameters:
      mess1: string

    then:
      - lambda: |-                
          static String mess;
          mess= (id(sntp_time).now().strftime("%Y-%m-%d %H:%M:%S").c_str());
          mess= mess +"\n";
          mess= mess+ mess1.c_str();
          id(_msg_notif_telegram).publish_state(mess.c_str()); 