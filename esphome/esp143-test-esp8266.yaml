substitutions:
  device_name: esp143-test-esp8266
  adress_ip: "192.168.0.143"

esphome:
  name: ${device_name}
  platform: ESP8266
  board: d1_mini
  friendly_name: esp143

wifi:
  networks:
    - ssid: !secret wifi_esp
      password: !secret mdpwifi_esp
      priority: 1
    - ssid: !secret wifi
      password: !secret mdpwifi
      priority: 0
  reboot_timeout: 5min

  manual_ip:
    static_ip: ${adress_ip}
    gateway: 192.168.0.254
    subnet: 255.255.255.0

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
   
web_server:
  port: 80
font:
  - file: "fonts/arial.ttf"
    id: arial15
    size: 15
  - file: "fonts/arial.ttf"
    id: arial30
    size: 30
  - file: "fonts/arial.ttf"
    id: arial10
    size: 10
  - file: "fonts/arial.ttf"
    id: arial20
    size: 20
#uart:
#  rx_pin: GPIO3 # RX=pin 21
#  tx_pin: GPIO1 # TX=pin 22
#  baud_rate: 9600
i2c:
  sda: GPIO4 #D2=pin 19
  scl: GPIO5 #D1=pin 20
  scan: True
  id: bus_a

  
#Etat de la connection
binary_sensor:
  - platform: status
    name: "Status"

  - platform: homeassistant
    name: "Bouton Hatos"
    entity_id: input_boolean.allume_ecran_hatos
    id: allume

display:
  - platform: ssd1306_i2c
    model: "SSD1306 64x48"
    reset_pin: D0
    address: 0x3C
    brightness: 100%
    rotation: 0
    lambda: |-
      if (id(allume).state) {
        it.print(0, 20, id(arial20), "Hatos");
      } else {
        it.print(0, 20, id(arial20), "");
      }
#      it.printf(0, 0, id(arial30),"Hatos");  
#      it.printf(0, 0, id(arial10),"P:%.0f W",id(prod).state);
#      it.printf(0, 10, id(arial10),"C:%.0f W",id(conso).state);
#      it.printf(0, 20, id(arial10),"S:%.0f ",id(sout).state);
#      it.printf(32, 20, id(arial10),"I:%.0f W",id(inj).state);
#      it.printf(0, 30, id(arial10),"Disp:%.0f W",id(pdispo).state);   
 
