substitutions:
  device_name: esp149-esp8266-1-relais
  friendly_name: esp149
  adress_ip: "192.168.0.149"
  time_timezone: "Europe/Paris"
  
esphome:
  name: ${device_name}
esp8266:
  board: d1_mini
  framework:
    version: recommended  
  
wifi:
  networks:
    - ssid: !secret wifi
      password: !secret mdpwifi
  reboot_timeout: 5min

  manual_ip:
    static_ip: ${adress_ip}
    gateway: 192.168.0.254
    subnet: 255.255.255.0


# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

web_server:
  port: 80
# Utilisez la LED bleue de l'appareil comme LED d'état, qui clignotera s'il y a des avertissements (lent) ou des erreurs (rapide)
status_led:
  pin:
    number: GPIO16
    inverted: true
    
#sonde Dallas
dallas:
  - pin: GPIO2 #D4
    update_interval: 10s

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO10
      inverted: True
      mode:
        input: true
        pullup: true
    name: "${friendly_name}_bp1"

#Etat de la connection
  - platform: status
    name: "${friendly_name}_Status"

number:
  - platform: template
    name: "${friendly_name} T Max"
    id: tmax
    optimistic: true
    restore_value: true
    mode: box
    min_value: 10
    max_value: 100
    unit_of_measurement: "C°"
    step: 1

  - platform: template
    name: "${friendly_name} T Hyst"
    id: thyst
    optimistic: true
    restore_value: true
    mode: box
    min_value: 0
    max_value: 10
    step: 1

sensor:
# Sonde Temperature radiateur
  - platform: dallas
    address: 0xab0321117f919d28
    name: "${friendly_name}_Temperature"
    id: temp
    on_value:
      then:
        - script.execute: ventilateur
        - lambda: id(aftemp).publish_state( id(temp).state );

############### TEMPLATE  ######################"
# Affichage dans HA et sur l'afficheur
  - platform: template
    name: "${friendly_name}_Temp"
    id: aftemp
    unit_of_measurement: "°C"
    state_class: "measurement"  
 

switch:
  - platform: gpio
    name: "${friendly_name} ventilo"
    pin: GPIO5
    id: ventilo
    
  - platform: restart
    name: "${friendly_name} Restart"

#interval:
#  - interval: 1s
#    then:
#     - script.execute: ventilateur

# ------------------------  Scripts

script:
 
# ------------------------
  - id: ventilateur
    mode: single
    then:
      # Si mode routeur validé et mode auto et temp OK alors on active le triac et Sortie Triac superieur au mini
      - if: 
          condition:
            - lambda: 'return id(temp).state >= id(tmax).state;'
          then:
              - switch.turn_on:
                  id: ventilo
            
      # Si mode routeur devalidé ou temp NOK alors on désactive le triac 
      - if: 
          condition:
            - lambda: 'return id(temp).state < id(tmax).state-id(thyst).state;'                  
          then:
              - switch.turn_off:
                  id: ventilo
                
      