substitutions:
  device_name: esp174-esp32-eth0-dimmer-ecs
  adress_ip: "192.168.0.174"
  friendly_name: esp174
  time_timezone: "Europe/Paris"
  
esphome:
  name: ${device_name}
  platform: ESP32
  board: wt32-eth01 #esp-wrover-kit

# Enable logging
logger:

# Enable Home Assistant API
api:
ota:
web_server:
  port: 80

ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk_mode: GPIO0_IN
  phy_addr: 1
  power_pin: GPIO16

  manual_ip:
    static_ip: ${adress_ip}
    gateway: 192.168.0.254
    subnet: 255.255.255.0

binary_sensor:
#Etat de la connection
  - platform: status
    name: "${friendly_name}_Status"

output:
  - platform: ac_dimmer
    id: dimmer1
    gate_pin: GPIO2
    zero_cross_pin:
      number: GPIO4
      mode:
        input: true
      inverted: yes

light:
  - platform: monochromatic
    output: dimmer1
    id: p_dimmer
    name: "${friendly_name} Puissance Dimmer ECS"

sensor:
  - platform: homeassistant
    name: "${friendly_name}_Conso_grid"
    entity_id: sensor.mp2_grid_l1
    id: p_grid
    
############### TEMPLATE  ######################"
# Calcul consigne puissance
# 100 = 100%
# 3000 = 3000W Ã  100%
  - platform: template
    name: "${friendly_name} Consigne Puissance"
    id: consigne_p
    icon: mdi:flash
    unit_of_measurement: "%"
    accuracy_decimals: 2
    update_interval: 5s
    lambda: |-
      if (id(p_grid).state>0)
        {return id(p_grid).state*1;}
      else
        {return 0.0;}
    on_value:
      then:
        - light.turn_on:
            id: p_dimmer
            transition_length: '0.5s'
            brightness: !lambda |-
              return x/100;

#    lambda: |-
#      if (id(p_grid).state<-10)
#        {return id(p_grid).state*-100/3000;}
#      else
#        {return 0.0;}
    


  