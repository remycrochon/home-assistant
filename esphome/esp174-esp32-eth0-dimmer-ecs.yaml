#Pin Name Description
#1 EN1 Enable signal, active high
#2 CFG IO32, CFG                       ---<
#3 485_EN Enable pin of IO33, RS485    ---<
#4 RXD IO5, RXD2                       ---<
#5 TXD IO17, TXD2                      ---<
#6 GND GND
#7 3V3 3V3 power supply
#8 GND GND
#9 5V 5V power supply
#10 LINK Network connection indicator pin
#11 GND GND
#12 IO39 IO39, only supports input
#13 IO36 IO36, only supports input
#14 IO15 IO15
#15 I014 IO14
#16 IO12 IO12
#17 IO35 IO35, only supports input
#18 IO4 IO4
#19 IO2 IO2
#20 GND GND


substitutions:
  device_name: esp174-esp32-eth0-chalet2
  adress_ip: "192.168.0.174"
  friendly_name: esp174
  time_timezone: "Europe/Paris"
  
esphome:
  name: ${device_name}
  platform: ESP32
  board: wt32-eth01 #esp-wrover-kit

# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:
ota:
web_server:
  port: 80

ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk_mode: GPIO0_IN
  phy_addr: 1
  power_pin: GPIO16

  manual_ip:
    static_ip: ${adress_ip}
    gateway: 192.168.0.254
    subnet: 255.255.255.0
    dns1: 192.168.0.254
    
# Connection sonde(s) de température DS18b20
dallas:
  pin: 32
  update_interval: 10s
  
uart:
  id: mod_bus
  tx_pin: 17
  rx_pin: 5
  baud_rate: 9600
  stop_bits: 1
  debug:
    direction: BOTH
    dummy_receiver: false
    after:
      timeout: 150ms
    sequence:
      - lambda: |-
          UARTDebug::log_string(direction, bytes);

modbus:
  #send_wait_time: 200ms
  id: modbus1
  flow_control_pin: 33

modbus_controller:
  - id: afficheur
    ## the Modbus device addr
    address: 0x1
    modbus_id: modbus1
    update_interval: 10s
    command_throttle: 50ms
    # setup_priority: -10
sensor:  

# Lecture Registre F0-1 -> Valeur affichée
  - platform: modbus_controller
    modbus_controller_id: afficheur
    id: _niv_eau
    name: "${friendly_name}_Niveau_Puit"
    address: 0x0001
    unit_of_measurement: "mL"
    register_type: holding
    value_type: U_WORD
    accuracy_decimals: 2
    #register_count: 1
    #response_size: 2
    device_class: volume
    state_class: total
    filters:
      - multiply: 0.01
#      - sliding_window_moving_average:
#          window_size: 10 # moyenne sur x lectures
#          send_every: 5 # envoi toutes les x lectures
#          send_first_at: 1 # envoi à la premiere lecture


  - platform: dallas
    address: 0x82012111efe81d28
    name: "${friendly_name}_temperature_air"
    id: temp_air
#    filters:
#      - filter_out: 0.0

############### TEMPLATE  ######################"
# Calcul volume eau
  - platform: template
    name: "${friendly_name}_volume_puit"
    id: volume
    icon: mdi:flash
    unit_of_measurement: "m³"
    device_class: volume
    accuracy_decimals: 2
    lambda: |-
      return (id(_niv_eau).state*0.6*0.6*3.14159);
      
  - platform: template
    name: "${friendly_name}_niveau_remplissage_puit"
    id: niveau
    icon: mdi:flash
    unit_of_measurement: "%"
    accuracy_decimals: 2
    lambda: |-
      return (id(_niv_eau).state/5.8*100);

  - platform: template
    name: "${friendly_name}_niveau_reserve_puit"
    id: niveau_reserve
    icon: mdi:flash
    unit_of_measurement: "m"
    device_class: distance
    accuracy_decimals: 2
    lambda: |-
      return (5.8-id(_niv_eau).state);

#Etat de la connection
binary_sensor:
  - platform: status
    name: "${friendly_name} Status"
