substitutions:
  device_name: "esp177-esp32-test"
  friendly_name: "esp177"
  adress_ip: "192.168.0.177"
  time_timezone: "Europe/Paris"

esphome:
  name: ${device_name}

      
esp32:
  board: mhetesp32minikit
  framework:
    type: arduino
    
# Enable logging
logger:
  level: DEBUG


ota:
  platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: ${adress_ip}
    gateway: 192.168.0.254
    subnet: 255.255.255.0
    dns1: 192.168.0.254    

web_server:
  port: 80

# utilisez la LED de l'appareil comme LED d'Ã©tat, qui clignotera s'il y a des avertissements (lent) ou des erreurs (rapide)
status_led:
  pin:
    number: GPIO23
    inverted: true

# Activer l'API Home Assistant
api:



# Configurer SNTP pour l'horodatage
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Paris
    servers:
     - 0.pool.ntp.org
     - 1.pool.ntp.org
     - 2.pool.ntp.org

# DÃ©finir les text_sensors
text_sensor:
  - platform: template
    name: "Message Telegram"
    id: _msg_notif_telegram
  - platform: template
    name: "Temp Message"
    id: temp_message

# Exemple avec un capteur binaire (bouton)
button:
  - platform: template 
    name: "Bouton"
    on_press:
      then:
        - homeassistant.service:
            service: notify.telegram
            data:
              message: !lambda |-
                return "ðŸ”” Message dÃ©clenchÃ© depuis un lambda ESPHome Ã ";

 
