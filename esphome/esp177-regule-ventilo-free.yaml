substitutions:
  device_name: esp177-regule-ventilo-free
  adress_ip: "192.168.0.177"
  friendly_name: esp177
  time_timezone: "Europe/Paris"
  
esphome:
  name: ${device_name}
  platform: ESP32
  board: esp32dev
  on_boot:
    priority: 800
    # Maj des coeff au demmarrage
    then: 
      - script.execute: maj_coeff

# Enable logging
logger:


# Enable Home Assistant API
api:

ota:
web_server:
  port: 80

wifi:
  networks:
    - ssid: !secret wifi
      password: !secret mdpwifi
  reboot_timeout: 5min

  manual_ip:
    static_ip: ${adress_ip}
    gateway: 192.168.0.254
    subnet: 255.255.255.0

captive_portal:
# Sonde Temperature Dallas
dallas:
  - pin: GPIO27 #
    update_interval: 2s

number:

 ## FACULTATIF:
  # Modif des coeff KP, KI et KD dans HA
  # Pratique pour la mise au point
  # Ces valeurs sont mémorisées.

  # KP
  - platform: template
    name: "$friendly_name kp"
    icon: mdi:chart-bell-curve
    id: coeff_kp
    optimistic: true
    restore_value: true
    mode: box
    initial_value: 0.3
    min_value: 0
    max_value: 50
    step: 0.001

  # KI
  - platform: template
    name: "$friendly_name ki"
    icon: mdi:chart-bell-curve
    id: coeff_ki
    optimistic: true
    restore_value: true
    mode: box
    initial_value: 0.0015
    min_value: 0
    max_value: 50
    step: 0.0001

  # KD
  - platform: template
    name: "$friendly_name kd"
    icon: mdi:chart-bell-curve
    id: coeff_kd
    optimistic: true
    restore_value: true
    mode: box
    initial_value: 0.0
    min_value: -50
    max_value: 50
    step: 0.001

  # Set threshold low
  - platform: template
    name: "$friendly_name Bande Morte Basse"
    icon: mdi:chart-bell-curve
    id: coeff_bdl
    optimistic: true
    restore_value: true
    mode: box
    initial_value: -0.5
    min_value: -20
    max_value: 0
    step: 0.1

  # Set threshold high
  - platform: template
    name: "$friendly_name bande Morte Haute"
    icon: mdi:chart-bell-curve
    id: coeff_bdh
    optimistic: true    
    restore_value: true
    mode: box
    initial_value: 0.5
    min_value: 0
    max_value: 20
    step: 0.1


  # Set ki multiplier
  - platform: template
    name: "$friendly_name Bande morte Coeff"
    icon: mdi:chart-bell-curve
    id: coeff_kim
    optimistic: true    
    restore_value: true
    mode: box
    initial_value: 0.04
    min_value: 0
    max_value: .2
    step: 0.01


sensor:

  # Mesure RPM Ventilo avec 4-pin PWM)
  - platform: pulse_counter
    pin: 
      number: GPIO22 #GPIO25   
      mode: INPUT_PULLUP
    unit_of_measurement: 'RPM'
    id: fan_speed
    name: "$friendly_name Vitesse Ventilo"
    accuracy_decimals: 0
    update_interval: 2s
    filters:
      - calibrate_linear:
        - 0.0 -> 0.0
        - 5000.0 -> 2200.0


############### TEMPLATE  ######################"
  - platform: template
    name: "${friendly_name} Temp"
    id: aftemp
    accuracy_decimals: 2
    update_interval: 2s
    unit_of_measurement: "°C"
    device_class: temperature


# Sensor PID
  - platform: pid
    name: "$friendly_name Sortie PID"
    type: COOL
    accuracy_decimals: 2
    
  - platform: pid
    name: "$friendly_name PID Climate Result"
    type: RESULT
    accuracy_decimals: 3

  - platform: pid
    name: "$friendly_name PID Climate ERROR"
    type: ERROR
  - platform: pid
    name: "$friendly_name PID Climate INTEGRAL"
    type: INTEGRAL
    accuracy_decimals: 3
  - platform: pid
    name: "$friendly_name PID Climate PROPORTIONAL"
    type: PROPORTIONAL
    accuracy_decimals: 3
  - platform: pid
    name: "$friendly_name PID Climate DERIVATIVE"
    type: DERIVATIVE
    accuracy_decimals: 3
  - platform: pid
    name: "$friendly_name PID Climate KP"
    type: KP
    accuracy_decimals: 3
  - platform: pid
    name: "$friendly_name PID Climate KI"
    type: KI
    accuracy_decimals: 3
  - platform: pid
    name: "$friendly_name PID Climate KD"
    type: KD
    accuracy_decimals: 3

  # Sonde Temperature radiateur
  - platform: dallas
    address: 0xab0321117f919d28
    name: "${friendly_name} Temperature1"
    id: temperature
    accuracy_decimals: 3
    # If you don't smooth the temperature readings 
    # the PID controller over reacts to small changes.
    filters:
        - exponential_moving_average:  
            alpha: 0.1
            send_every: 1
    on_value:
      then:
          - lambda: id(aftemp).publish_state(x);

output:
# Câblez cette broche (13) dans la broche PWM de votre ventilateur 12v
  # ledc est le nom du système de sortie pwm sur un esp32
  - platform: ledc
    id: console_fan_speed
    pin: GPIO21  # GPIO13
    # 25KHz is standard PC fan frequency, minimises buzzing
    frequency: "25000 Hz" 

# Bon pour le débogage, vous pouvez régler manuellement le ventilateur
# vitesse. Assurez-vous simplement que l'appareil Climate est désactivé, sinon il continuera à être annulé.
#fan:
#  - platform: speed
#    output: console_fan_speed
#    name: "$friendly_name Manu Ventilo"

# Exposez un thermostat contrôlé par PID
# Manual: https://esphome.io/components/climate/pid.html
climate:
  - platform: pid
    name: "$friendly_name Console Fan Thermostat"
    id: console_thermostat
    sensor: temperature
    default_target_temperature: 32
    cool_output: console_fan_speed

    # Les étendues du thermostat HA
    visual:
      min_temperature: 20 °C
      max_temperature: 50 °C
  
    # Voir le README pour configurer ces paramètres.
    # Ceux-ci sont écrasés par les modèles de nombres ci-dessus.
    control_parameters:
      kp: 0.3
      ki: 0.0015
      kd: 0
      max_integral: 0.0
      output_averaging_samples: 1
      derivative_averaging_samples: 5

# Comment se comporter à proximité de la température cible ?
    deadband_parameters:
      threshold_high: 0.4°C
      threshold_low: -1.0°C
      kp_multiplier: 0.0
      ki_multiplier: 0.04
      kd_multiplier: 0.0
      deadband_output_averaging_samples: 15

switch:
  - platform: restart
    name: "${friendly_name} Restart"
    id: swrestart

# Redémarrage tous les jours à 00h30.
# J'ai eu des problèmes de mémoire
# l'appareil après quelques semaines
time:
  - platform: homeassistant
    on_time:
      # Every morning at 12:30am
    - seconds: 0
      minutes: 30
      hours: 0
      then:
       - switch.turn_on: swrestart

interval:
  - interval: 0.5s
    then:
     - script.execute: maj_coeff

# --------------- SCRIPT
script:
# 
# --------------- Recopie des input number dans les coeeff du PID
  - id: maj_coeff
    mode: single
    then:
      - lambda: |-
          id(console_thermostat).set_kp(id(coeff_kp).state);
      - lambda: |-
          id(console_thermostat).set_ki(id(coeff_ki).state);
      - lambda: |-
          id(console_thermostat).set_kd(id(coeff_kd).state);
      - lambda: |-          
          id(console_thermostat).set_threshold_low(id(coeff_bdl).state);
      - lambda: |-          
          id(console_thermostat).set_threshold_high(id(coeff_bdh).state);
      - lambda: |-   
          id(console_thermostat).set_ki_multiplier(id(coeff_ki).state);
