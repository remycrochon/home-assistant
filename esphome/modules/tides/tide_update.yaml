---
# Updates the tide clock

# -------------------------------------------
# Graphics and Fonts
# -------------------------------------------
image:
  - file: modules/assets/tide_pointer.svg
    id: tide_pointer
    resize: 200x88 # 2.272  - 22x22
    type: RGB565
    transparency: alpha_channel

  - file: modules/assets/high_tide.svg
    id: high_tide
    resize: 29x32
    type: RGB565
    transparency: alpha_channel

  - file: modules/assets/low_tide.svg
    id: low_tide
    resize: 29x32
    type: RGB565
    transparency: alpha_channel

font:
  - file: "gfonts://Roboto@700"
    id: roboto30_bold
    size: 30
    bpp: 8

sensor:
  - platform: homeassistant
    entity_id: sensor.tides
    attribute: tide_percentage
    id: tide_percentage
    on_value:
      then:
        - lvgl.indicator.update:
            id: tide_level
            value: !lambda "return id(tide_percentage).state;"

  - platform: homeassistant
    entity_id: sensor.tides
    attribute: next_tide_level
    id: next_tide_level

  - platform: homeassistant
    entity_id: sensor.tides
    attribute: last_tide_level
    id: last_tide_level

text_sensor:
  - platform: homeassistant
    entity_id: sensor.tides
    attribute: next_tide_type
    id: next_tide_type


  - platform: homeassistant
    entity_id: sensor.tides
    attribute: next_tide_time
    id: next_tide_time
    on_value:
      - if:
          condition:
            text_sensor.state:
              id: next_tide_type
              state: 'Low'
          then:
            - lvgl.label.update:
                id: low_tide_label
                text:
                   format: "%s"
                   args: [ 'id(next_tide_time).state.c_str()' ]
            - lvgl.label.update:
                id: low_tide_height
                text:
                   format: "%.2f ft"
                   args: [ 'id(next_tide_level).state' ]
          else:
            - lvgl.label.update:
                id: high_tide_label
                text:
                   format: "%s"
                   args: [ 'id(next_tide_time).state.c_str()' ]
            - lvgl.label.update:
                id: high_tide_height
                text:
                   format: "%.2f ft"
                   args: [ 'id(next_tide_level).state' ]

  - platform: homeassistant
    entity_id: sensor.tides
    attribute: last_tide_type
    id: last_tide_type

  - platform: homeassistant
    entity_id: sensor.tides
    attribute: last_tide_time
    id: last_tide_time
    on_value:
      - if:
          condition:
            text_sensor.state:
              id: last_tide_type
              state: 'Low'
          then:
            - lvgl.label.update:
                id: low_tide_label
                text:
                   format: "%s"
                   args: [ 'id(last_tide_time).state.c_str()' ]
            - lvgl.label.update:
                id: low_tide_height
                text:
                   format: "%.2f ft"
                   args: [ 'id(last_tide_level).state' ]
          else:
            - lvgl.label.update:
                id: high_tide_label
                text:
                   format: "%s"
                   args: [ 'id(last_tide_time).state.c_str()' ]
            - lvgl.label.update:
                id: high_tide_height
                text:
                   format: "%.2f ft"
                   args: [ 'id(last_tide_level).state' ]