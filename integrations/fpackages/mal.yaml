####################################################
#                                                  #
#              MACHINE A LAVER                     #
#                                                  #
####################################################

utility_meter:

  energy_mal_usage_daily:
    source: sensor.energy_pc_mal
    cycle: daily
    tariffs:
      - hp
      - hc
  energy_mal_usage_weekly:
    source: sensor.energy_pc_mal
    cycle: weekly
    tariffs:
      - hp
      - hc
  energy_mal_usage_monthly:
    source: sensor.energy_pc_mal
    cycle: monthly
    tariffs:
      - hp
      - hc
  energy_mal_usage_yearly:
    source: sensor.energy_pc_mal
    cycle: yearly
    tariffs:
      - hp
      - hc


template:
# Consommation HP + HC - addition des utility meter
  - sensor:
    - name: "Energie MàL Jour"
      unique_id: "energy_mal_daily"
      state: >-
        {% set p = states('sensor.energy_mal_usage_daily_hp') | float(default=0) | round(2) %}
        {% set o = states('sensor.energy_mal_usage_daily_hc') | float(default=0) | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_mal_weekly"
      state: >-
        {% set p = states('sensor.energy_mal_usage_weekly_hp') | float(default=0) | round(2) %}
        {% set o = states('sensor.energy_mal_usage_weekly_hc') | float(default=0) | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total" 

    - name: "energy_mal_monthly"
      state: >-
        {% set p = states('sensor.energy_mal_usage_monthly_hp') | float(default=0) | round(2) %}
        {% set o = states('sensor.energy_mal_usage_monthly_hc') | float(default=0) | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"        

    - name: "energy_mal_yearly"
      state: >-
        {% set p = states('sensor.energy_mal_usage_yearly_hp') | float(default=0) | round(2) %}
        {% set o = states('sensor.energy_mal_usage_yearly_hc') | float(default=0) | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"        

#Indique que la machine à laver est en fonctionnement
  - binary_sensor:
      - name: "MaLaver en marche"
        delay_off:
          minutes: 5
        state: >
          {{ states('sensor.puissance_pc_mal')|float(default=0) > 15 }}



