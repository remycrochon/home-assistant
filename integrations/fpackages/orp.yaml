input_number:
  # utilisé pour simuler la température de l'eau pendant les test
  simul_orp:
    name: orp Simulation
    min: -1019.9
    max: 1019.9
    step: 0.1
    unit_of_measurement: mV
    mode: box

# orp Valeur cible
  orp_cible:
    name: orp Cible 
    min: -1019.9    
    max: 1019.9
    step: 0.1
    unit_of_measurement: mV
    icon: mdi:alpha-h-circle-outline
    mode: box
# Hysteresis- non utilisé A SUPPRIMER dans les equations
  orp_hysteresis:
    name: orp Hysteresis 
    min: 0.0
    max: 100.0
    step: 0.01
    unit_of_measurement: mV
    mode: box

# Débit pompe chlore (Etalonnage obligatoire de la pompe)
  chlore_debit_ppe:
    name: chlore Débit Ppe
    min: 0
    max: 7.2
    step: 0.1
    unit_of_measurement: l/h
    icon: mdi:pump
    mode: box

# Durée injection chlore
  chlore_duree_inject_s:
    name: chlore Durée inject effect(s)
    min: 0
    max: 60
    step: 0.1
    unit_of_measurement: "s"
    icon: mdi:clock
    mode: box
# Durée injection chlore
  chlore_duree_inject_mn:
    name: chlore Durée inject effect (mn)
    min: 0
    max: 60
    step: 0.1
    unit_of_measurement: "mn"
    icon: mdi:clock
    mode: box

# Concentration du chlore
  chlore_concentration:
    name: chlore Concentration
    min: 0
    max: 100
    step: 0.1
    unit_of_measurement: "%"
    icon: mdi:percent
    mode: box

# Cumul du chlore moins injecté chaque jour"
  chlore_vol_injecte:
    name: chlore Cumul Vol Injecté
    min: 0
    max: 25
    step: 0.1
    unit_of_measurement: "l"
    icon: mdi:needle
    mode: box

# Volume du bidon de chlore
  chlore_vol_bidon:
    name: chlore Volume Bidon
    min: 0
    max: 30
    step: 0.1
    unit_of_measurement: "l"
    icon: mdi:blood-bag
    mode: box

# Seuil bas du bidon chlore moins déclenchant une notification
  chlore_seuil_bas_bidon:
    name: chlore Niveau bas Bidon
    min: 0
    max: 5
    step: 0.5
    unit_of_measurement: 'l'
    icon: mdi:flask-empty-outline
    mode: box
  
input_boolean:
  # Validation regul chlore
  regul_chlore:
    name: chlore validation Regul


sensor:
  - platform: history_stats
    name: chlore_derniere_heure
    entity_id: switch.ppe_chlore
    state: 'on'
    type: time
    end: '{{now().replace(minute=0).replace(second=0)}}'
    duration: 01:00:00

  - platform: history_stats
    name: chlore_derniere__48h
    entity_id: switch.ppe_chlore
    state: 'on'
    type: time
    end: '{{now()}}'
    duration: 48:00:00

  # Statistiques orp
  - platform: statistics
    name: orp_stat_median
    entity_id: sensor.orp_piscine_orp
    unique_id: orp_stat_median
    state_characteristic: median
    sampling_size: 30
    #max_age:
      # minutes: 30
  - platform: statistics
    name: orp_stat_moyenne
    unique_id: orp_stat_moyenne
    entity_id: sensor.orp_piscine_orp
    state_characteristic: average_step
    sampling_size: 30
    #max_age:
      # minutes: 30
  - platform: statistics
    name: orp_stat_standard_deviation
    entity_id: sensor.orp_piscine_orp
    unique_id: orp_stat_standard_deviation
    state_characteristic: standard_deviation
    sampling_size: 30
    #max_age:
      # minutes: 30

template:
####################################
  - binary_sensor:
    - name: "chlore_niveau_bas_bidon"
      unique_id: "chlore_niveau_bas_bidon"
      state: >-
          {% set a=states('input_number.chlore_vol_bidon')|float(default=0) %}
          {% set b=states('input_number.chlore_vol_injecte')|float(default=0) %}
          {% set c=states('input_number.chlore_seuil_bas_bidon')|float(default=0) %}
          {{ (a-b) <= c }} 
####################################
  - sensor:
# Recopie de la mesure ORP si la pompe est en marche et 
# si dans la plage horaire définie dans une "entrée"
# sinon on recopie la derniere valeur médiane

    - name: "orp_piscine_orp"
      unique_id: "orp_piscine_orp"
      state: >
        {% set orp = states('sensor.orp_ezo') | float(default=0) | round(2) %}
        {% set orp_median = states('sensor.orp_stat_median') | float(default=0) | round(2) %}
        {% set ppe = states('binary_sensor.ppe_piscine_en_marche') %}
        {% set plage_H = states('binary_sensor.plage_horaire_mesure_orp') %}
        {% if ppe == 'on' and plage_H == 'on'%}
          {{ orp | round(2) }}
        {% else %}
          {{ orp_median }}
        {%endif%}
      unit_of_measurement: "mV"
    
    - name: "chlore_volume_restant_bidon"
      unique_id: "Volume chlore restant bidon"
      state: >-
        {% set a=states('input_number.chlore_vol_bidon')|float(default=0) %}
        {% set b=states('input_number.chlore_vol_injecte')|float(default=0) %}
        {{ (a-b)|round(2) }}   
      icon: mdi:flask-empty-minus-outline
      unit_of_measurement: "l"

 
