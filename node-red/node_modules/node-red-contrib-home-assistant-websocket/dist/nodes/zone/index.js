"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const helpers_1 = require("../../common/controllers/helpers");
const ClientEvents_1 = __importDefault(require("../../common/events/ClientEvents"));
const EventStatus_1 = __importDefault(require("../../common/status/EventStatus"));
const globals_1 = require("../../globals");
const migrate_1 = require("../../helpers/migrate");
const node_1 = require("../../helpers/node");
const homeAssistant_1 = require("../../homeAssistant");
const ZoneController_1 = __importDefault(require("./ZoneController"));
function zoneNode(config) {
    globals_1.RED.nodes.createNode(this, config);
    this.config = (0, migrate_1.migrate)(config);
    const serverConfigNode = (0, node_1.getServerConfigNode)(this.config.server);
    const homeAssistant = (0, homeAssistant_1.getHomeAssistant)(serverConfigNode);
    const exposeAsConfigNode = (0, node_1.getExposeAsConfigNode)(this.config.exposeAsEntityConfig);
    const clientEvents = new ClientEvents_1.default({
        node: this,
        emitter: homeAssistant.eventBus,
    });
    const status = new EventStatus_1.default({
        clientEvents,
        config: serverConfigNode.config,
        exposeAsEntityConfigNode: exposeAsConfigNode,
        node: this,
    });
    clientEvents.setStatus(status);
    exposeAsConfigNode === null || exposeAsConfigNode === void 0 ? void 0 : exposeAsConfigNode.integration.setStatus(status);
    const controllerDeps = (0, helpers_1.createControllerDependencies)(this, homeAssistant);
    const controller = new ZoneController_1.default({
        node: this,
        status,
        ...controllerDeps,
    });
    controller.setExposeAsConfigNode(exposeAsConfigNode);
    for (const entity of this.config.entities) {
        clientEvents.addListener(`ha_events:state_changed:${entity}`, controller.onStateChanged.bind(controller));
    }
}
exports.default = zoneNode;
