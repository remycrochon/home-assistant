####################################################
#                                                  #
#              EAU CHAUDE SANITAIRE                #
#                                                  #
####################################################

input_number:
  ecs_seuil_bas_temp:
    name: Ecs Seuil bas Temp
    min: 20
    max: 60
    step: 0.1
    unit_of_measurement: "°C"
    mode: box
  ecs_seuil_bas_haut:
    name: Ecs Seuil haut Temp
    min: 30
    max: 60
    step: 0.1
    unit_of_measurement: "°C"
    mode: box

input_datetime:
  # Horaire Chauffe ECS
  horaire_ecs_debut:
    name: Horaire ECS Début
    has_date: false
    has_time: true
  horaire_ecs_fin:
    name: Horaire ECS Fin
    has_date: false
    has_time: true

input_select:
  ecs_ssol:
    name: Ecs_SSol
    icon: mdi:water-boiler
    options:
      - Auto
      - At Forcé
      - Ma Forcée

input_boolean:
  ecs_av_pv:
    name: Ecs PV(=1 avec Routeur PV)
  
sensor:
# Affichage du temps de fonctionnement ce jour
  - platform: history_stats
    name: ECS Chauffage ce jour
    entity_id: binary_sensor.ecs_chauffe
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

# Energie ECS surplus injection->utilisée dans tableau Energie
  - platform: integration
    source: sensor.puissance_ecs_surplus_injectee_w
    name: energy_ecs_surplus_injectee
    unit_prefix: k
    method: left
    round: 2

template:
####################################
# Si puissance superieur à 500w = ECS en Marche
  - binary_sensor:
    - name: "ecs_chauffe"
      unique_id: "ecs_chauffe"
      device_class: heat
      state: >-
          {% set a=states('sensor.ecocompteur_ecs')|float(default=0) %}
          {{ a > 500 }}

# 
  - sensor:
############################################ 21/12/2022
# sensor.ecocompteur_ecs:
# Si switch.cde_relais_ecs->
#   template: sensor.puissance_ecs_reseau_w->
#     template: sensor.puissance_ecs_reseau_kw
#     Integration en kW: sensor.energie_ecs_reseau->
#       utility_meter: energy_ecs_reseau_usage_daily->
#         sensor.compteur_energie_ecs_reseau_jour_hp
#         sensor.compteur_energie_ecs_reseau_jour_hc

# Si switch.cde_relais_ecs_router_pv->
#   template: sensor.puissance_ecs_pv_w->
#     template: sensor.puissance_ecs_pv_kw
#     Integration en kW: sensor.energie_ecs_pv->
#       utility_meter: energy_ecs_pv_usage_daily->
#         sensor.compteur_energie_ecs_pv_jour_hp
#         sensor.compteur_energie_ecs_pv_jour_hc

# Calcul puissance ECS si mode réseau
# L'integrale de rieumman et les utily_meter sont déclarés dans "/config/helpers"
    - name: puissance_ecs_reseau_w
      unique_id: "puissance_ecs_reseau_w"
      device_class: "power"
      state_class: "measurement"    
      unit_of_measurement: "W"
      state: >-
        {% set pu_ecs=states('sensor.ecocompteur_ecs')|float(default=0) %}
        {% set rel_ecs=states('switch.cde_relais_ecs')%}
        {% if (pu_ecs>0) and (rel_ecs=="on")%}          
          {{ pu_ecs }}
        {%else%}
          0
        {%endif%}

    - name: puissance_ecs_reseau_kw
      unique_id: "puissance_ecs_reseau_kw"
      device_class: "power"
      state_class: "measurement"    
      unit_of_measurement: "kW"
      state: >-
        {% set p=states('sensor.puissance_ecs_reseau_w')|float(default=0) %}
        {{ p/1000 }}

# Calcul puissance ECS si mode PV
    - name: puissance_ecs_pv_w
      unique_id: "puissance_ecs_pv_w"
      device_class: "power"
      state_class: "measurement"    
      unit_of_measurement: "W"
      state: >-
        {% set pu_ecs=states('sensor.ecocompteur_ecs')|float(default=0) %}
        {% set rel_ecs=states('switch.cde_relais_ecs_router_pv')%}
        {% if (pu_ecs>0) and (rel_ecs=="on")%}          
          {{ pu_ecs }}
        {%else%}
          0
        {%endif%}
        
    - name: puissance_ecs_pv_kw
      unique_id: "puissance_ecs_pv_kw"
      device_class: "power"
      state_class: "measurement"    
      unit_of_measurement: "kW"
      state: >-
        {% set p=states('sensor.puissance_ecs_pv_w')|float(default=0) %}
        {{ p/1000 }}

# L'integrale de rieumman et les utily_meter sont déclarés dans "/config/helpers"
# Totalisation des energies HC+HP
    - name: Compteur Energie ECS PV Jour HP_HC
      unique_id: "compteur_energie_ecs_pv_jour_hp_hc"
      device_class: "energy"
      state_class: "total_increasing"    
      unit_of_measurement: "kWh"
      state: >-
        {% set hp=states('sensor.compteur_energie_ecs_pv_jour_hp')|float(default=0) %}
        {% set hc=states('sensor.compteur_energie_ecs_pv_jour_hc')|float(default=0) %}
        {{ hp+hc }}

    - name: Compteur Energie ECS Reseau Jour HP-HC
      unique_id: "compteur_energie_ecs_reseau_jour_hp_hc"
      device_class: "energy"
      state_class: "total_increasing"    
      unit_of_measurement: "kWh"
      state: >-
        {% set hp=states('sensor.compteur_energie_ecs_reseau_jour_hp')|float(default=0) %}
        {% set hc=states('sensor.compteur_energie_ecs_reseau_jour_hc')|float(default=0) %}
        {{ hp+hc }}

    - name: Compteur Energie ECS PV Reseau Jour HP-HC
      unique_id: "compteur_energie_ecs_pv_reseau_jour_hp_hc"
      device_class: "energy"
      state_class: "total_increasing"    
      unit_of_measurement: "kWh"
      state: >-
        {% set p=states('sensor.compteur_energie_ecs_reseau_jour_hp_hc')|float(default=0) %}
        {% set r=states('sensor.compteur_energie_ecs_pv_jour_hp_hc')|float(default=0) %}
        {{ p+r }}




