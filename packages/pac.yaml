####################################################
#                                                  #
#                      PAC                         #
#                                                  #
####################################################

# 
template:

  - sensor:

# Conversion de la trame JSON MQTT en template
# Numero correspond au numero de ligne du fichier pac_attributs.txt
    # L27
    - name: "espaltherma_mode_fonctionnement"
      unique_id: "espaltherma_mode_fonctionnement"
      state: >-
        {{ state_attr('sensor.althermasensors','Mode de fonctionnement') }}

    # L28
    - name: "espaltherma_thermostat_ext"
      unique_id: "espaltherma_thermostat_ext"
      state: >-
        {{ state_attr('sensor.althermasensors','Thermostat ON/OFF Ext') }}
    # L31
    - name: "espaltherma_degivrage"
      unique_id: "espaltherma_degivrage"
      state: >-
        {{ state_attr('sensor.althermasensors','Dégivrage') }}
    # L138
    - name: "espaltherma_palier_buh1"
      unique_id: "espaltherma_palier_buh1"
      state: >-
        {{ state_attr('sensor.althermasensors','Palier1 BUH') }}
    # L139
    - name: "espaltherma_palier_buh2"
      unique_id: "espaltherma_palier_buh2"
      state: >-
        {{ state_attr('sensor.althermasensors','Palier2 BUH') }}        
    # L167
    - name: "espaltherma_consigne_thermostat_int"
      unique_id: "espaltherma_consigne_thermostat_int"
      state: >-
        {{ state_attr('sensor.althermasensors','Consigne Thermostat int')|round(1,default=0) }}
      unit_of_measurement: '°C'
      device_class: "temperature"
      state_class: "measurement"

    # L39
    - name: "espaltherma_temp_cible"
      unique_id: "espaltherma_temp_cible"
      state: >-
        {{ state_attr('sensor.althermasensors','Temp. cond. cible')|round(1,default=0) }}
      unit_of_measurement: '°C'
      device_class: "temperature"
      state_class: "measurement"

    # L117
    - name: "espaltherma_thermostat_int"
      unique_id: "espaltherma_thermostat_int"
      state: >-
        {{ state_attr('sensor.althermasensors','Thermostat ON/OFF Int') }}

    # L154
    - name: "espaltherma_temp_ambiante_int_r1t"
      unique_id: "espaltherma_temp_ambiante_int_r1t"
      state: >-
        {{ state_attr('sensor.althermasensors','Temp. ambiante intérieure (R1T)')|round(1,default=0) }}
      unit_of_measurement: '°C'
      state_class: "measurement"
      device_class: "temperature"

    # L152
    - name: "espaltherma_temp_eau_retour_rt4"
      unique_id: "espaltherma_temp_eau_retour_rt4"
      state: >-
        {{ state_attr('sensor.althermasensors','Temp. d eau d entrée (R4T)')|round(1,default=0) }}
      unit_of_measurement: '°C'
      state_class: "measurement"
      device_class: "temperature"

    # L149
    - name: "espaltherma_temp_eau_depart_echangeur_plaque"
      unique_id: "espaltherma_temp_eau_depart_echangeur_plaque"
      state: >-
        {{ state_attr('sensor.althermasensors','Laisser temp. eau avant BUH (R1T)')|round(1,default=0) }}
      unit_of_measurement: '°C'
      state_class: "measurement"
      device_class: "temperature"

    # L150
    - name: "espaltherma_temp_eau_depart"
      unique_id: "espaltherma_temp_eau_depart"
      state: >-
        {{ state_attr('sensor.althermasensors','Laisser temp. eau après BUH (R2T)')|round(1,default=0) }}
      unit_of_measurement: '°C'
      state_class: "measurement"
      device_class: "temperature"

    # L59
    - name: "espaltherma_temp_air_ext_r1t"
      unique_id: "espaltherma_temp_air_ext_r1t"
      state: >-
        {{ state_attr('sensor.althermasensors','Temp. d air extérieur(R1T)')|round(1,default=0) }}
      unit_of_measurement: '°C'
      state_class: "measurement"
      device_class: "temperature"

    # L60
    - name: "espaltherma_temp_air_ext_r6t"
      unique_id: "espaltherma_temp_air_ext_r6t"
      state: >-
        {{ state_attr('sensor.althermasensors','Capteur ext. de temp. ambiante intérieure (R6T)')|round(1,default=0) }}
      unit_of_measurement: '°C'
      state_class: "measurement"
      device_class: "temperature"

    # L151
    - name: "espaltherma_temp_liquid_r3t"
      unique_id: "espaltherma_temp_liquid_r3t"
      state: >-
        {{ state_attr('sensor.althermasensors','Temp. réfrig. côté liquide (R3T)')|round(1,default=0) }}
      unit_of_measurement: '°C'
      state_class: "measurement"
      device_class: "temperature"

    # L184
    - name: "espaltherma_capteur_debit"
      unique_id: "espaltherma_capteur_debit"
      state: >-
        {{ state_attr('sensor.althermasensors','Capteur de débit (l/min)') }}
      unit_of_measurement: 'l/min'
      state_class: "measurement"
      device_class: "pressure"

    # L69
    - name: "espaltherma_courant_primaire"
      unique_id: "espaltherma_courant_primaire"
      state: >-
        {{ state_attr('sensor.althermasensors','Courant primaire INV (A)') }}
      unit_of_measurement: 'A'
      state_class: "measurement"
      device_class: "current"

    # L186
    - name: "espaltherma_signal_ppe_eau"
      unique_id: "espaltherma_signal_ppe_eau"
      state: >-
        {{ 100-state_attr('sensor.althermasensors','Signal de pompe à eau (0:max-100:arrêt)')|int(default=0) }}
      unit_of_measurement: '%'
      state_class: "measurement"
      device_class: "signal_strength"

    # L66
    - name: "espaltherma_pression"
      unique_id: "espaltherma_pression"
      state: >-
        {{ state_attr('sensor.althermasensors','Capteur de pression') }}
      unit_of_measurement: 'bars'
      state_class: "measurement"
      device_class: "pressure"

# Extraction des attributs climate.althermat
    # Consigne Chauffage
    - name: "pac_consigne_int"
      unique_id: "pac_consigne_interieure"
      state: >-
        {{ state_attr('climate.altherma','temperature') }}
      unit_of_measurement: '°C'
      state_class: "measurement"
      device_class: "temperature"


# Calcul du COP
    - name: "espaltherma_cop"
      unique_id: "espaltherma_cop"
      state_class: "measurement"
      state: >-
        {% set debit = states('sensor.espaltherma_capteur_debit') | float(default=0) %}
        {% set rt1 = states('sensor.espaltherma_temp_eau_depart_echangeur_plaque') | float(default=0) %}
        {% set rt4 = states('sensor.espaltherma_temp_eau_retour_rt4') | float(default=0) %}
        {% set i = states('sensor.espaltherma_courant_primaire') | float(default=0) %}
        {% set u = states('sensor.linky_umoy') | float(default=0) %}
        {% set pu = states('sensor.ecocompteur_pac') | float(default=0) %}
        {% if is_state("sensor.espaltherma_mode_fonctionnement", "Heating")
          and (states('sensor.espaltherma_courant_primaire')|float(default=0) >0) %}
          {% set cop=((debit*0.06*1.16)*(rt1-rt4)/(pu/1000))| float(default=0) | round(2) %}
          {% if (cop>=0) and (cop<10) %}
            {{ cop }}
          {%else%}
            0
          {%endif%}
        {%else%}
          0
        {%endif%}

# Calcul Température de départ
# {% set t = states('sensor.espaltherma_temp_air_ext_r1t') | float(default=0) %}
    - name: "espaltherma_temp_dep_calculee"
      unique_id: "espaltherma_temp_dep_calculee"
      state: >-
        {% set p102=35 %}
        {% set p103=22 %}
        {% set p100=-10 %}
        {% set p101=20 %}
        {% set a=(p102-p103)/(p100-p101) | float(default=0) %}
        {% set b=p103-a*p101 | float %}
        {% set t = states('sensor.espaltherma_temp_air_ext_r6t') | float(default=0) %}
        {% if t<= p100 %}
          {{ p100 }}
        {%else%}
          {% if t>= p101 %}
            {{ p101 }}
          {%else%}
            {{ (a*t)+b | float(default=0) |round(2)}}
          {%endif%}
        {%endif%}
      unit_of_measurement: '°C'
      state_class: "measurement"
      device_class: "temperature"

      
mqtt:
  sensor:
    - name: "ESP_altherma status"
      state_topic: "espaltherma/LWT"

# 
input_boolean:
  thermostat_pac:
    name: thermostat_pac
    initial: true

