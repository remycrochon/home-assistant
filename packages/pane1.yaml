openhasp:
  ecran01:
    objects:
      - obj: "p0b1"
        properties:
          "text_color": "{% if -30 <= state_attr('openhasp.ecran01','rssi') |int %}#00ff00{% elif -31 > state_attr('openhasp.ecran01','rssi') |int >= -50 %}#ccff00{% elif -51 > state_attr('openhasp.ecran01','rssi') |int >= -80 %}#ff9100{% else %}#ff0000{% endif %}"
      - obj: "p0b2"
        properties:
          "text": "{{ states('sensor.time') }}"
      - obj: "p0b6"
        properties:
          "text": "\uE2DC {{'%.1f' | format (states('sensor.vp2_temp_out') | round(1)) }}°C"
      - obj: "p0b7"
        properties:
          "text": "\uE6A1 {{'%.1f' | format (states('sensor.vp2_temp_in') | round(1)) }}°C"



# Affichage piscine
      - obj: "p1b131"
        properties:
          "text": "{{ states('sensor.esp178_temperature_eau')|float(0) |round(1)}} C°" 

      - obj: "p1b133"  
        properties:
          "val": '{{ 1 if states("switch.esp178_cde_pompe_filtration") == "on" else 0 }}'
          "text": '{{ "\uE12C" if is_state("switch.esp178_cde_pompe_filtration", "on") else "\uE156" | e }}'
          "text_color": "{{ '#00ff00' if is_state('switch.esp178_cde_pompe_filtration', 'on') else '#ff0000' }}" 
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "switch.esp178_cde_pompe_filtration"

      - obj: "p1b136"
        properties:
          "text": "{{ states('sensor.esp178_ph_ezo')|float(0) |round(2)}} pH" 

      - obj: "p1b138"  
        properties:
          "val": '{{ 1 if states("cover.volet_piscine") == "on" else 0 }}'
          "text": '{{ "\uF11E" if is_state("cover.volet_piscine", "open") else "\uF11C" | e }}'
          "text_color": "{{ '#ff0000' if is_state('cover.volet_piscine', 'open') else '#00ff00' }}" 
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "cover.volet_piscine"

      - obj: "p1b141"
        properties:
          "text": "{{ states('sensor.esp178_affich_heure_filtration')}}" 

      - obj: "p1b146"
        properties:
          "text": "{{ states('time.esp178_duree_filtration')}} h" 

      - obj: "p1b148"
        properties:
          "text": "{{ states('number.esp178_coeff_filtration')}} %" 

      - obj: "p1b151"
        properties:
          "val": >
            {% set st = states('input_select.esp178_mode_fonctionnement_filtration')%}
            {% for text,num in [('Palier',0),('Classique',1),('Abaque',2),('Horaire',3),('Ma_F',4),('AT_F',5) ] %}
            {% if st == text %}
              {{ num }}
            {%endif%}
            {% endfor %}
        event:
          "changed":
            - service: input_select.select_option
              target:
                entity_id: input_select.esp178_mode_fonctionnement_filtration
              data:
                option: >
                  {% if text == "Palier" -%}
                  Palier
                  {% elif text == 'Classique' -%}
                  Classique
                  {% elif text == 'Abaque' -%}
                  Abaque
                  {% elif text == 'Horaire' -%}
                  Horaire
                  {% elif text == 'Ma_F' -%}
                  Ma F
                  {% elif text == 'At_F' -%}
                  At F
                  {% endif -%}
      - obj: "p1b223"
        properties:
          "text": "{{ states('sensor.esp178_pression_filtre') }} bars"              
      - obj: "p1b226"
        properties:
          "text": "{{ states('sensor.pzem_pisc_puissance') }} W"
      - obj: "p1b231"
        properties:
          "text": "{{ states('sensor.compteur_energie_piscine_jour_hp_hc') }} kWh"
# Page2

      - obj: "p2b121"  
        properties:
          "val": '{{ 1 if states("switch.esp178_cde_pompe_filtration") == "on" else 0 }}'
          "text": '{{ "\uE12C" if is_state("switch.esp178_cde_pompe_filtration", "on") else "\uE156" | e }}'
          "text_color": "{{ '#00ff00' if is_state('switch.esp178_cde_pompe_filtration', 'on') else '#ff0000' }}" 
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "switch.esp178_cde_pompe_filtration"

      - obj: "p2b122"  
        properties:
          "val": '{{ 1 if states("switch.esp178_cde_ppe_ph_moins") == "on" else 0 }}'
          "text": '{{ "\uE12C" if is_state("switch.esp178_cde_ppe_ph_moins", "on") else "\uE156" | e }}'
          "text_color": "{{ '#00ff00' if is_state('switch.esp178_cde_ppe_ph_moins', 'on') else '#ff0000' }}"          
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "switch.esp178_cde_ppe_ph_moins"   

      - obj: "p2b123"
        properties:
          "val": '{{ 1 if states("switch.esp178_cde_ppe_chlore") == "on" else 0 }}'
          "text": '{{ "\uE12C" if is_state("switch.esp178_cde_ppe_chlore", "on") else "\uE156" | e }}'
          "text_color": "{{ '#00ff00' if is_state('switch.esp178_cde_ppe_chlore', 'on') else '#ff0000' }}"
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "switch.esp178_cde_ppe_chlore"   

      - obj: "p2b124"  
        properties:
          "val": '{{ 1 if states("switch.cde_ouv_volet_piscine") == "on" else 0 }}'
          "text": '{{ "\uE12C" if is_state("switch.cde_ouv_volet_piscine", "on") else "\uE156" | e }}'
          "text_color": "{{ '#00ff00' if is_state('switch.cde_ouv_volet_piscine', 'on') else '#ff0000' }}"
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "switch.cde_ouv_volet_piscine"

      - obj: "p2b125"  
        properties:
          "val": '{{ 1 if states("switch.cde_ferm_volet_piscine") == "on" else 0 }}'
          "text": '{{ "\uE12C" if is_state("switch.cde_ferm_volet_piscine", "on") else "\uE156" | e }}'
          "text_color": "{{ '#00ff00' if is_state('switch.cde_ferm_volet_piscine', 'on') else '#ff0000' }}"
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "switch.cde_ferm_volet_piscine"

      - obj: "p2b126"  
        properties:
          "val": '{{ 1 if states("switch.esp178_cde_eclairage") == "on" else 0 }}'
          "text": '{{ "\uE12C" if is_state("switch.esp178_cde_eclairage", "on") else "\uE156" | e }}'
          "text_color": "{{ '#00ff00' if is_state('switch.cesp178_cde_eclairage', 'on') else '#ff0000' }}"          
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "switch.esp178_cde_eclairage"   

      - obj: "p2b127"  
        properties:
          "val": '{{ 1 if states("switch.esp178_cde_ev_eau") == "on" else 0 }}'
          "text": '{{ "\uE12C" if is_state("switch.esp178_cde_ev_eau", "on") else "\uE156" | e }}'
          "text_color": "{{ '#00ff00' if is_state('switch.esp178_cde_ev_eau', 'on') else '#ff0000' }}"          
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "switch.esp178_cde_ev_eau"   

      - obj: "p2b151"
        event:
          "up":
            - service: input_number.decrement
              target:
                entity_id: number.esp178_coeff_filtration

      - obj: "p2b152"
        properties:
          "text": "{{'%.0f' | format (states('number.esp178_coeff_filtration') | round(0)) }}%"

      - obj: "p2b153"
        event:
          "up":
            - service: input_number.increment
              target:
                entity_id: number.esp178_coeff_filtration

                # Page 3
      - obj: "p3b121"
        properties:
          "val": '{{ 1 if states("automation.piscine_hors_gel_actions") == "on" else 0 }}'
          "text": '{{ "\uE12C" if is_state("automation.piscine_hors_gel_actions", "on") else "\uE156" | e }}'
          "text_color": "{{ '#00ff00' if is_state('automation.piscine_hors_gel_actions', 'on') else '#ff0000' }}"
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "automation.piscine_hors_gel_actions"


      - obj: "p3b122"  
        properties:
          "val": '{{ 1 if states("automation.piscine_ev_appoint_eau") == "on" else 0 }}'
          "text": '{{ "\uE12C" if is_state("automation.piscine_ev_appoint_eau", "on") else "\uE156" | e }}'
          "text_color": "{{ '#00ff00' if is_state('automation.piscine_ev_appoint_eau', 'on') else '#ff0000' }}"          
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "automation.piscine_ev_appoint_eau"   

      - obj: "p3b123"  
        properties:
          "val": '{{ 1 if states("automation.piscine_traitement_ph") == "on" else 0 }}'
          "text": '{{ "\uE12C" if is_state("automation.piscine_traitement_ph", "on") else "\uE156" | e }}'
          "text_color": "{{ '#00ff00' if is_state('automation.piscine_traitement_ph', 'on') else '#ff0000' }}" 
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "automation.piscine_traitement_ph"

      - obj: "p3b129"  
        properties:
          "val": '{{ 1 if states("input_boolean.hors_gel_valid") == "on" else 0 }}'
          "text": '{{ "\uE12C" if is_state("input_boolean.hors_gel_valid", "on") else "\uE156" | e }}'
          "text_color": "{{ '#00ff00' if is_state('input_boolean.hors_gel_valid', 'on') else '#ff0000' }}"          
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "input_boolean.hors_gel_valid"   

      - obj: "p3b131"  
        properties:
          "val": '{{ 1 if states("input_boolean.ev_eau_piscine") == "on" else 0 }}'
          "text": '{{ "\uE12C" if is_state("input_boolean.ev_eau_piscine", "on") else "\uE156" | e }}'
          "text_color": "{{ '#00ff00' if is_state('input_boolean.ev_eau_piscine', 'on') else '#ff0000' }}"
        event:
          "up":
            - service: homeassistant.toggle
              entity_id: "input_boolean.ev_eau_piscine"   

      - obj: "p3b134"  
        properties:
          "text": "{{'%.0f' | format (states('input_number.temps_cartouche_chlore') | round(0)) }}h"
        event:
          "up":
            - service: input_number.set_value
              data:
                value: 0
              target:
                entity_id: input_number.temps_cartouche_chlore


