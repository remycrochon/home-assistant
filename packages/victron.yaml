mqtt:
  sensor:
# MQTT
    - name: "MP2 Tension Batteries par MQTT"
      unique_id: mp2_tension_batteries_par_mqtt" 
      state_topic: "mp2/batteries/tension"
      unit_of_measurement: 'V'
      device_class: voltage
      state_class: measurement

    - name: "MP2 Pu Batteries par MQTT"
      unique_id: mp2_pu_batteries_par_mqtt" 
      state_topic: "mp2/batteries/puissance"
      unit_of_measurement: 'W'
      device_class: power
      state_class: measurement

    - name: "MP2 Prod VRM MO MQTT"
      unique_id: mp2_prod_vrm_mo_mqtt" 
      state_topic: "mp2/prediction/prod_onduleur"
      unit_of_measurement: 'kW'
      device_class: power
      state_class: measurement

    - name: "MP2 Prod VRM MPPT1 MQTT"
      unique_id: mp2_prod_vrm_mppt1_mqtt" 
      state_topic: "mp2/prediction/prod_mppt1"
      unit_of_measurement: 'kW'
      device_class: power
      state_class: measurement

    - name: "MP2 Prod VRM TOTAL MQTT"
      unique_id: mp2_prod_vrm_total_mqtt" 
      state_topic: "mp2/prediction/prod_total"
      unit_of_measurement: 'kW'
      device_class: power
      state_class: measurement      

    - name: "MP2 Pu Grid L1 AC MQTT"
      unique_id: mp2_pu_grid_l1_mqtt" 
      state_topic: "mp2/multiplus2/grid_l1_ac"
      unit_of_measurement: 'W'
      device_class: power
      state_class: measurement           

    - name: "MP2 Conso Out1 MQTT"
      unique_id: mp2_conso_ac_l1_mqtt" 
      state_topic: "mp2/multiplus2/conso_out1"
      unit_of_measurement: 'W'
      device_class: power
      state_class: measurement   

    - name: "MP2 Prod Totale MQTT"
      unique_id: mp2_prod_totale_mqtt" 
      state_topic: "mp2/multiplus2/prod_totale"
      unit_of_measurement: 'W'
      device_class: power
      state_class: measurement 

    - name: "MP2 Cible SOC par MQTT"
      unique_id: mp2_cible_soc_par_mqtt" 
      state_topic: "mp2/batteries/cible_soc"
      unit_of_measurement: '%'
      device_class: battery
      state_class: measurement

    - name: "MP2 SOC theorique par MQTT"
      unique_id: mp2_soc_theorique_par_mqtt" 
      state_topic: "mp2/batteries/soc_theorique"
      unit_of_measurement: '%'
      device_class: battery
      state_class: measurement

    - name: "MP2 SOC MQTT"
      unique_id: mp2_soc_par_mqtt" 
      state_topic: "mp2/batteries/soc"
      unit_of_measurement: '%'
      device_class: battery
      state_class: measurement

    - name: "MP2 SOC MINI MQTT"
      unique_id: mp2_soc_mini_par_mqtt" 
      state_topic: "mp2/multiplus2/soc_mini"
      unit_of_measurement: '%'
      device_class: battery
      state_class: measurement

    - name: "MP2 Intensité Batteries MQTT" 
      unique_id: "mp2_intensite_batteries_mqtt"
      unit_of_measurement: "A"
      state_topic: "mp2/batteries/Courant"
      device_class: current
      state_class: measurement

# Victron
modbus:
  - name: cerbo
    host: 192.168.0.86
    type: tcp
    port: 502
    switches:
      - name: "MP2 cde"
        slave: 227
        address: 33
        command_on: 3
        command_off: 4
        verify:
          input_type: holding
          address: 33
          state_on: 3
          state_off: 4

    sensors:
# Compteur PhotoVoltaique ET112-1 - GRID METER
# Energie
      # Energy 
      - name: "MP2 Energy Total Energy from net"
        unique_id: "mp2_total_energy_from_net"
        data_type: uint32
        slave: 31
        address: 2634
        scale: 0.01
        unit_of_measurement: "kWh"
        device_class: "energy"
        state_class: "total"

      # Energy 
      - name: "MP2 Energy Total Energy to net"
        unique_id: "mp2_total_energy_to_net"
        data_type: uint32
        slave: 31
        address: 2636
        scale: 0.01
        unit_of_measurement: "kWh"
        device_class: "energy"
        state_class: "total"

# Compteur PhotoVoltaique ET112-2 - PVMETER
      # 
      - name: "MP2 Tension PV"
        unique_id: "mp2_tension_pv"
        data_type: uint16
        unit_of_measurement: "V"
        slave: 32
        address: 1027
        scale: 0.1
        device_class: voltage
        state_class: measurement

      - name: "MP2 Intensité PV"
        unique_id: "mp2_intensite_pv"
        data_type: int16
        unit_of_measurement: "A"
        slave: 32
        address: 1028
        scale: 0.1
        device_class: current
        state_class: measurement

      - name: "MP2 Puissance Production PV"
        unique_id: "mp2_puissance_production_pv"
        data_type: uint16
        unit_of_measurement: "W"
        slave: 32
        address: 1029
        scale: 1
        device_class: power
        state_class: measurement

      - name: "MP2 Energy Produite PV"
        unique_id: "mp2_energy_produite_pv"
        data_type: uint32
        slave: 32
        address: 1046
        scale: 0.01
        unit_of_measurement: "kWh"
        device_class: "energy"
        state_class: "total"

# MPPT N1 250/70
      # 
      - name: "MP2 MPPT1 Tension PV "
        unique_id: "mp2_mppt1_tension_pv"
        data_type: uint16
        unit_of_measurement: "V"
        slave: 226
        address: 776
        scale: 0.01
        precision: 2
        device_class: voltage
        state_class: measurement

      - name: "MP2 MPPT1 Intensité PV"
        unique_id: "mp2_mppt1_intensite_pv"
        data_type: int16
        unit_of_measurement: "A"
        slave: 226
        address: 777
        scale: 0.1
        precision: 2
        device_class: current
        state_class: measurement

      - name: "MP2 MPPT1 Puissance Production PV"
        unique_id: "mp2_mppt1_puissance_production_pv"
        data_type: uint16
        unit_of_measurement: "W"
        slave: 226
        address: 789
        scale: 0.1
        device_class: power
        state_class: measurement


# Multiplus 2
      # PV - AC-coupled on input L1
      # Production PV couplée sur L1
      - name: "MP2 PC AC Couplet on L1"
        unique_id: "mp2_pv_ac_coupled_on_l1"
        data_type: uint16
        unit_of_measurement: "W"
        slave: 100
        address: 811
        scale: 1
        device_class: power
        state_class: measurement

      # AC Consumption L1
      # Puissance soutirée sur ligne L1 du MP2
      - name: "MP2 Conso AC L1"
        unique_id: "mp2_conso_ac_l1"
        data_type: uint16
        unit_of_measurement: "W"
        slave: 100
        address: 817
        scale: 1
        device_class: power
        state_class: measurement

      #Grid L1
      # Puissance soutirée sur le réseau public      
      - name: "MP2 Grid L1"
        unique_id: "mp2_grid_l1"
        data_type: int16
        unit_of_measurement: "W"
        slave: 100
        address: 820
        scale: 1
        device_class: power
        state_class: measurement
        
      # Active input source
      # 0=Unknown;1=Grid;2=Generator;3=Shore power;240=Not connected
      - name: "MP2 Source Puissance"
        unique_id: "mp2_source_puissance"
        data_type: int16
        slave: 100
        address: 826
        scale: 1

      # Battery Voltage (System)
      - name: "MP2 Tension Batteries"
        unique_id: "mp2_tension_batteries"
        data_type: uint16
        unit_of_measurement: "V"
        slave: 100
        address: 840
        scale: 0.1
        precision: 2
        device_class: voltage
        state_class: measurement
 
      # Battery Current (System)
      - name: "MP2 Intensité Batteries"
        unique_id: "mp2_intensite_batteries"
        data_type: int16
        unit_of_measurement: "A"
        slave: 100
        address: 841
        scale: 0.1
        precision: 2
        device_class: current
        state_class: measurement

      # Battery Power (System)
      # Puissance soutirée(>0) ou injectée(<0) dans les batteries
      # positive en charge-negatif en décharge
      - name: "MP2 Puissance Batteries"
        unique_id: "mp2_puissance_batteries"
        data_type: int16
        unit_of_measurement: "W"
        slave: 100
        address: 842
        scale: 1
        device_class: power
        state_class: measurement

      # Battery state (System)
      # 0=idle;1=charging;2=discharging
      - name: "MP2 Status Batteries"
        unique_id: "mp2_status_batteries"
        data_type: int16
        slave: 100
        address: 844
        scale: 1

      # PV - DC-coupled power
      - name: "MP2 Puissance PV"
        unique_id: "mp2_puissance_pv"
        data_type: uint16
        unit_of_measurement: "W"
        slave: 100
        address: 850
        scale: 1
        device_class: power
        state_class: measurement

      # DC System Power
      - name: "MP2 Puissance reseau DC "
        unique_id: "mp2_puissance_reseau_dc"
        data_type: int16
        unit_of_measurement: "W"
        slave: 100
        address: 860
        scale: 1
        device_class: power
        state_class: measurement

      # P max Alim System 
      - name: 'MP2 P Max alim System'
        unique_id: 'mp2_p_max_alim_system'
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement
        slave: 100
        address: 2700
        data_type: int16

      # ESS Puissance decharge maximum
      - name: 'MP2 ESS Puissance Decharge Max'
        unique_id: 'mp2_ess_puissance_decharge_maximum'
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement
        data_type: uint16
        slave: 100
        address: 2704
        scale: 10


# Modbus Smart Shunt
        # State of charge - SOC
        # Smart Shunt
      - name: "MP2 SS Tension Batteries"
        unique_id: "mp2_ss_tension_batteries"
        data_type: uint16
        unit_of_measurement: "V"
        slave: 223
        address: 259
        scale: 0.01
        device_class: voltage
        state_class: measurement

      - name: "MP2 SS Tension Start Batteries"
        unique_id: "mp2_ss_tension_start_batteries"
        data_type: uint16
        unit_of_measurement: "V"
        slave: 223
        address: 260
        scale: 0.01
        device_class: voltage
        state_class: measurement

      - name: "MP2 SS Intensité Batteries"
        unique_id: "mp2_ss_intensite_batteries"
        data_type: int16
        unit_of_measurement: "A"
        slave: 223
        address: 261
        scale: 0.1
        device_class: current
        state_class: measurement

      - name: "MP2 SS Conso Ah Batteries"
        unique_id: "mp2_ss_conso_ah_batteries"
        data_type: int16
        unit_of_measurement: "Ah"
        slave: 223
        address: 265
        scale: 0.1
        device_class: current
        state_class: measurement

      - name: "MP2 Temps depuis derniere pleine batteries"
        unique_id: "mp2_temps_depuis_derniere_batteries_pleines"
        data_type: uint16
        unit_of_measurement: "s"
        slave: 223
        address: 289
        scale: 100
        device_class: duration
        

      # Energy Décharge
      - name: "MP2 Energy décharge batteries"
        unique_id: "mp2_energy_decharge_batteries"
        data_type: uint16
        slave: 223
        address: 301
        scale: 0.1
        unit_of_measurement: "kWh"
        device_class: "energy"
        state_class: "total"

      # Energy Charge
      - name: "MP2 Energy charge batteries"
        unique_id: "mp2_energy_charge_batteries"
        data_type: uint16
        slave: 223
        address: 302
        scale: 0.1
        unit_of_measurement: "kWh"
        device_class: "energy"
        state_class: "total"

      # Time to go
      - name: "MP2 Temps restant batteries"
        unique_id: "mp2_temps_restant_batteries"
        data_type: uint16
        unit_of_measurement: "s"
        slave: 223
        address: 303
        scale: 100
        device_class: duration
        

# Modbus MP2
      - name: "MP2 Tension Entrée L1"
        unique_id: "mp2_tension_entree_l1"
        data_type: uint16
        unit_of_measurement: "V"
        slave: 227
        address: 3
        scale: 0.1
        device_class: voltage
        state_class: measurement

      - name: "MP2 Intensité Entrée L1"
        unique_id: "mp2_intensite_entree_l1"
        data_type: int16
        unit_of_measurement: "A"
        slave: 227
        address: 6
        scale: 0.1
        device_class: current
        state_class: measurement

      - name: "MP2 Fréquence Entrée L1"
        unique_id: "mp2_frequence_entree_l1"
        data_type: int16
        unit_of_measurement: "Hz"
        slave: 227
        address: 9
        scale: 0.01
        device_class: frequency
        state_class: measurement

      - name: "MP2 Tension Sortie L1"
        unique_id: "mp2_tension_sortie_l1"
        data_type: uint16
        unit_of_measurement: "V"
        slave: 227
        address: 15
        scale: 0.1
        device_class: voltage
        state_class: measurement

      - name: "MP2 Intensité Sortie L1"
        unique_id: "mp2_intensite_sortie_l1"
        data_type: int16
        unit_of_measurement: "A"
        slave: 227
        address: 18
        scale: 0.1
        device_class: current
        state_class: measurement

      - name: "MP2 Fréquence Sortie"
        unique_id: "mp2_frequence_sortie"
        data_type: int16
        unit_of_measurement: "Hz"
        slave: 227
        address: 21
        scale: 0.01
        device_class: frequency
        state_class: measurement

      # DC System Power
      - name: "MP2 Puissance Sortie 1"
        unique_id: "mp2_puissance_sortie_1"
        data_type: int16
        unit_of_measurement: "W"
        slave: 227
        address: 23
        scale: 10
        device_class: power
        state_class: measurement

      # Status bus VE
      # 0=Off;1=Low Power;2=Fault;3=Bulk;4=Absorption;5=Float;6=Storage;
      # 7=Equalize;8=Passthru;9=Inverting;10=Power assist;11=Power supply;252=External control
      - name: "MP2 Status bus VE"
        unique_id: "mp2_status_bus_ve"
        slave: 227
        address: 31
        data_type: uint16
        scale: 1

      # SYSTEM
      # Switch Position
      # 1=Charger Only;2=Inverter Only;3=On;4=Off
      - name: "MP2 Mode ESS"
        unique_id: mp2_mode_ess
        slave: 227
        address: 33
        data_type: uint16
        scale: 1

      # Alarme Réseau Perdu (Grid Lost)
      - name : 'Mp2 Alarme perte réseau' 
        unique_id: 'mp2_alarme_perte_reseau'
        unit_of_measurement : "marche/arrêt" 
        slave : 227 
        address : 64

template:
  - sensor:

    # Affichage Ac Load
    - name: MP2_ac_loads
      unique_id: "mp2_ac_loads"
      device_class: "power"
      state_class: "measurement"
      unit_of_measurement: "W"
      state: >-
        {% set l1=states('sensor.mp2_conso_ac_l1')|int(default=0)%}
        {% set out1=states('sensor.mp2_puissance_sortie_1')|int(default=0)%}
        {{ l1-out1 }}
  
    # Affichage Status bus VE
      # 0=Off;1=Low Power;2=Fault;3=Bulk;4=Absorption;5=Float;6=Storage;
      # 7=Equalize;8=Passthru;9=Inverting;10=Power assist;11=Power supply;252=External control

    - name: "Mp2 Affichage Status Bus VE"
      unique_id: "mp2_affichage_status_bus_ve"
      state: >-
        {% set st = states('sensor.mp2_status_bus_ve') | int(default=0) %}
        {% for num, text in [(0, 'Off'), (1, 'Low power'),(2, 'Defaut')
        ,(3, 'Bulk'),(4, 'Absorption'),(5, 'Float'),(6, 'Stockage')
        ,(7, 'Equalize'),(8, 'Traverse'),(9, 'Inverser'),
        (10, 'Power Assist') ,(11, 'Power Supply'),(252, 'PControl externe')
        ] %}
            {% if st == num %}
              {{ text }}
            {%endif%}
        {% endfor %} 

    # Affichage Status charge batteries
    # 0=idle;1=charging;2=discharging
    - name: "Mp2 Affichage Status Charge Batteries"
      unique_id: "mp2_affichage_status_charge_batteries"
      state: >-
        {% set st = states('sensor.mp2_status_batteries') | int(default=0) %}
        {% for num, text in [(0, 'Off'), (1, 'Charge'),(2, 'DeCharge')
                ] %}
            {% if st == num %}
              {{ text }}
            {%endif%}
        {% endfor %} 

    # Puissance batteries
    - name: "MP2 Pu charge batterie"
      unique_id: "mp2_pu_charge_batterie"
      device_class: "power"
      state_class: "measurement"
      unit_of_measurement: "W"
      state: >-
        {{ max(0, states('sensor.mp2_pu_batteries_par_mqtt') | float(default=0)) }}

    - name: "MP2 Pu decharge batterie"
      unique_id: "mp2_pu_decharge_batterie"
      device_class: "power"
      state_class: "measurement"
      unit_of_measurement: "W"
      state: >-
        {{ max(0, 0 - states('sensor.mp2_pu_batteries_par_mqtt') | float(default=0)) }}

    # Puissance instantanée injectée ou soutirée
    - name: "MP2 Pu Grid Mqtt Soutirée"
      unique_id: "mp2_pu_grid_l1_mqtt_soutiree"
      device_class: "power"
      state_class: "measurement"
      unit_of_measurement: "W"
      state: >-
        {{ max(0, states('sensor.mp2_pu_grid_l1_ac_mppt') | float(default=0)) }}

    - name: "MP2 Pu Grid Mqtt Injectée"
      unique_id: "mp2_pu_grid_l1_mqtt_injectee"
      device_class: "power"
      state_class: "measurement"
      unit_of_measurement: "W"
      state: >-
        {{ max(0, 0 - states('sensor.mp2_pu_grid_l1_ac_mppt') | float(default=0)) }}

    # Affichage "Autonomie restante batteries"
    - name:  MP2 affichage Autonomie Restante Batteries
      unique_id: mp2_affichage_autonomie_restante_batteries
      state:  >
        {{ states('sensor.mp2_temps_restant_batteries')|int(default=0)|timestamp_custom('%H:%M:%S', false) }}

    # Affichage "Autonomie restante batteries"
    - name:  MP2 affichage Temps Depuis Derniere Charge
      unique_id: mp2_affichage_temps_depuis_derniere_charge
      state:  >
        {{ states('sensor.mp2_temps_depuis_derniere_pleine_batteries')|int(default=0)|timestamp_custom('%H:%M:%S', false) }}
    
    # Determine le niveau de SOC en fonction de la prévision de production solaire du jour
    # calculé dans "helpers" http://192.168.0.37:8123/config/integrations/integration/template#config_entry=ce7906995d5c7143ca2db7634d556039
    

    # Calcul du temps restant sur la batterie jusqu'a SOC MINI
    # https://github.com/Danie10/gadgeteerza-homeassistant/tree/main
    # Calculez les heures restantes jusqu'au SOC min actuel en fonction de la capacité maximale de la batterie à 100 % de charge, c'est-à-dire. quand il reviendra au réseau électrique
    # Heures restantes = (SOC%-MinSOC) * Battery_max_capacity (Ah) divisé par le courant en ampères, par exemple. 86 %-40 % à 11 ampères correspond à (0,46 * 206)/11
    # Condition 1 pour vérifier si le SoC n'a pas déjà atteint MinSOC ou en dessous, car le temps pour atteindre MinSOC a atteint 0 heure, alors faites 0
    # Condition 2 pour vérifier que la batterie se décharge (le courant en ampères sera un nombre négatif), puis utilisez l'ABS de Battery_current pour faire circuler un courant négatif, un nombre flottant positif. Réglez-le sur -1 A (50 W à 52 V) au lieu de 0 A pour éviter de très petites décharges lorsqu'elles sont pleines et de projeter des heures extrêmement longues sur la jauge.
    # Condition 3 pour vérifier si le courant de la batterie est nul ou en charge, puis calculer le temps restant en fonction de la charge CA (Watts AC convertis en courant DC Amps - car Watts AC = Watts DC)
    # J'ai dû tout convertir en flottants pour une précision des heures partielles, puis arrondi à 2 décimales
    - name: MP2 Temps Restant Batteries Mini SOC
      unique_id: "mp2_temps restant_batteries_mini_soc" 
      unit_of_measurement: "Hours"
      icon: mdi:sort-clock-ascending
      state: >-
        {% set battery_current = states('sensor.mp2_intensite_batteries')|float %}
        {% set battery_soc = states('sensor.mp2_soc_mqtt')|float %}
        {% set loads_current = states('sensor.mp2_conso_out1_mqtt')|float/states('sensor.mp2_tension_batteries_par_mqtt')|float %}
        {% set battery_min_soc = states('sensor.mp2_soc_mini_mqtt')|float %}
        {% set battery_max_capacity = 300 %}
        {% if (battery_soc-battery_min_soc) < 0 %}
          {{ 0 }}
        {% else %}
          {{ ((((battery_soc-battery_min_soc)*battery_max_capacity)/100)/loads_current | float ) | round(2) }}
        {% endif %}